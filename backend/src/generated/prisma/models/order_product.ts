/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `order_product` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model order_product
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type order_productModel = runtime.Types.Result.DefaultSelection<Prisma.$order_productPayload>

export type AggregateOrder_product = {
  _count: Order_productCountAggregateOutputType | null
  _avg: Order_productAvgAggregateOutputType | null
  _sum: Order_productSumAggregateOutputType | null
  _min: Order_productMinAggregateOutputType | null
  _max: Order_productMaxAggregateOutputType | null
}

export type Order_productAvgAggregateOutputType = {
  order_product_id: number | null
  order_id: number | null
  product_price_id: number | null
  quantity: number | null
}

export type Order_productSumAggregateOutputType = {
  order_product_id: number | null
  order_id: number | null
  product_price_id: number | null
  quantity: number | null
}

export type Order_productMinAggregateOutputType = {
  order_product_id: number | null
  order_id: number | null
  product_price_id: number | null
  quantity: number | null
  option: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Order_productMaxAggregateOutputType = {
  order_product_id: number | null
  order_id: number | null
  product_price_id: number | null
  quantity: number | null
  option: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Order_productCountAggregateOutputType = {
  order_product_id: number
  order_id: number
  product_price_id: number
  quantity: number
  option: number
  created_at: number
  updated_at: number
  _all: number
}


export type Order_productAvgAggregateInputType = {
  order_product_id?: true
  order_id?: true
  product_price_id?: true
  quantity?: true
}

export type Order_productSumAggregateInputType = {
  order_product_id?: true
  order_id?: true
  product_price_id?: true
  quantity?: true
}

export type Order_productMinAggregateInputType = {
  order_product_id?: true
  order_id?: true
  product_price_id?: true
  quantity?: true
  option?: true
  created_at?: true
  updated_at?: true
}

export type Order_productMaxAggregateInputType = {
  order_product_id?: true
  order_id?: true
  product_price_id?: true
  quantity?: true
  option?: true
  created_at?: true
  updated_at?: true
}

export type Order_productCountAggregateInputType = {
  order_product_id?: true
  order_id?: true
  product_price_id?: true
  quantity?: true
  option?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Order_productAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order_product to aggregate.
   */
  where?: Prisma.order_productWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_products to fetch.
   */
  orderBy?: Prisma.order_productOrderByWithRelationInput | Prisma.order_productOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.order_productWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_products from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_products.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned order_products
  **/
  _count?: true | Order_productCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Order_productAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Order_productSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Order_productMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Order_productMaxAggregateInputType
}

export type GetOrder_productAggregateType<T extends Order_productAggregateArgs> = {
      [P in keyof T & keyof AggregateOrder_product]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrder_product[P]>
    : Prisma.GetScalarType<T[P], AggregateOrder_product[P]>
}




export type order_productGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_productWhereInput
  orderBy?: Prisma.order_productOrderByWithAggregationInput | Prisma.order_productOrderByWithAggregationInput[]
  by: Prisma.Order_productScalarFieldEnum[] | Prisma.Order_productScalarFieldEnum
  having?: Prisma.order_productScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Order_productCountAggregateInputType | true
  _avg?: Order_productAvgAggregateInputType
  _sum?: Order_productSumAggregateInputType
  _min?: Order_productMinAggregateInputType
  _max?: Order_productMaxAggregateInputType
}

export type Order_productGroupByOutputType = {
  order_product_id: number
  order_id: number
  product_price_id: number
  quantity: number
  option: string | null
  created_at: Date | null
  updated_at: Date | null
  _count: Order_productCountAggregateOutputType | null
  _avg: Order_productAvgAggregateOutputType | null
  _sum: Order_productSumAggregateOutputType | null
  _min: Order_productMinAggregateOutputType | null
  _max: Order_productMaxAggregateOutputType | null
}

type GetOrder_productGroupByPayload<T extends order_productGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Order_productGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Order_productGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Order_productGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Order_productGroupByOutputType[P]>
      }
    >
  > 



export type order_productWhereInput = {
  AND?: Prisma.order_productWhereInput | Prisma.order_productWhereInput[]
  OR?: Prisma.order_productWhereInput[]
  NOT?: Prisma.order_productWhereInput | Prisma.order_productWhereInput[]
  order_product_id?: Prisma.IntFilter<"order_product"> | number
  order_id?: Prisma.IntFilter<"order_product"> | number
  product_price_id?: Prisma.IntFilter<"order_product"> | number
  quantity?: Prisma.IntFilter<"order_product"> | number
  option?: Prisma.StringNullableFilter<"order_product"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"order_product"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order_product"> | Date | string | null
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.orderWhereInput>
  product_price?: Prisma.XOR<Prisma.Product_priceScalarRelationFilter, Prisma.product_priceWhereInput>
}

export type order_productOrderByWithRelationInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  option?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  order?: Prisma.orderOrderByWithRelationInput
  product_price?: Prisma.product_priceOrderByWithRelationInput
}

export type order_productWhereUniqueInput = Prisma.AtLeast<{
  order_product_id?: number
  order_id_product_price_id?: Prisma.order_productOrder_idProduct_price_idCompoundUniqueInput
  AND?: Prisma.order_productWhereInput | Prisma.order_productWhereInput[]
  OR?: Prisma.order_productWhereInput[]
  NOT?: Prisma.order_productWhereInput | Prisma.order_productWhereInput[]
  order_id?: Prisma.IntFilter<"order_product"> | number
  product_price_id?: Prisma.IntFilter<"order_product"> | number
  quantity?: Prisma.IntFilter<"order_product"> | number
  option?: Prisma.StringNullableFilter<"order_product"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"order_product"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order_product"> | Date | string | null
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.orderWhereInput>
  product_price?: Prisma.XOR<Prisma.Product_priceScalarRelationFilter, Prisma.product_priceWhereInput>
}, "order_product_id" | "order_id_product_price_id">

export type order_productOrderByWithAggregationInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  option?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.order_productCountOrderByAggregateInput
  _avg?: Prisma.order_productAvgOrderByAggregateInput
  _max?: Prisma.order_productMaxOrderByAggregateInput
  _min?: Prisma.order_productMinOrderByAggregateInput
  _sum?: Prisma.order_productSumOrderByAggregateInput
}

export type order_productScalarWhereWithAggregatesInput = {
  AND?: Prisma.order_productScalarWhereWithAggregatesInput | Prisma.order_productScalarWhereWithAggregatesInput[]
  OR?: Prisma.order_productScalarWhereWithAggregatesInput[]
  NOT?: Prisma.order_productScalarWhereWithAggregatesInput | Prisma.order_productScalarWhereWithAggregatesInput[]
  order_product_id?: Prisma.IntWithAggregatesFilter<"order_product"> | number
  order_id?: Prisma.IntWithAggregatesFilter<"order_product"> | number
  product_price_id?: Prisma.IntWithAggregatesFilter<"order_product"> | number
  quantity?: Prisma.IntWithAggregatesFilter<"order_product"> | number
  option?: Prisma.StringNullableWithAggregatesFilter<"order_product"> | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"order_product"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"order_product"> | Date | string | null
}

export type order_productCreateInput = {
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order: Prisma.orderCreateNestedOneWithoutOrder_productInput
  product_price: Prisma.product_priceCreateNestedOneWithoutOrder_productInput
}

export type order_productUncheckedCreateInput = {
  order_product_id?: number
  order_id: number
  product_price_id: number
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_productUpdateInput = {
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order?: Prisma.orderUpdateOneRequiredWithoutOrder_productNestedInput
  product_price?: Prisma.product_priceUpdateOneRequiredWithoutOrder_productNestedInput
}

export type order_productUncheckedUpdateInput = {
  order_product_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_productCreateManyInput = {
  order_product_id?: number
  order_id: number
  product_price_id: number
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_productUpdateManyMutationInput = {
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_productUncheckedUpdateManyInput = {
  order_product_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Order_productListRelationFilter = {
  every?: Prisma.order_productWhereInput
  some?: Prisma.order_productWhereInput
  none?: Prisma.order_productWhereInput
}

export type order_productOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type order_productOrder_idProduct_price_idCompoundUniqueInput = {
  order_id: number
  product_price_id: number
}

export type order_productCountOrderByAggregateInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  option?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type order_productAvgOrderByAggregateInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
}

export type order_productMaxOrderByAggregateInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  option?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type order_productMinOrderByAggregateInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  option?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type order_productSumOrderByAggregateInput = {
  order_product_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  product_price_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
}

export type order_productCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutOrderInput, Prisma.order_productUncheckedCreateWithoutOrderInput> | Prisma.order_productCreateWithoutOrderInput[] | Prisma.order_productUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutOrderInput | Prisma.order_productCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.order_productCreateManyOrderInputEnvelope
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
}

export type order_productUncheckedCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutOrderInput, Prisma.order_productUncheckedCreateWithoutOrderInput> | Prisma.order_productCreateWithoutOrderInput[] | Prisma.order_productUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutOrderInput | Prisma.order_productCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.order_productCreateManyOrderInputEnvelope
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
}

export type order_productUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutOrderInput, Prisma.order_productUncheckedCreateWithoutOrderInput> | Prisma.order_productCreateWithoutOrderInput[] | Prisma.order_productUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutOrderInput | Prisma.order_productCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.order_productUpsertWithWhereUniqueWithoutOrderInput | Prisma.order_productUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.order_productCreateManyOrderInputEnvelope
  set?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  disconnect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  delete?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  update?: Prisma.order_productUpdateWithWhereUniqueWithoutOrderInput | Prisma.order_productUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.order_productUpdateManyWithWhereWithoutOrderInput | Prisma.order_productUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.order_productScalarWhereInput | Prisma.order_productScalarWhereInput[]
}

export type order_productUncheckedUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutOrderInput, Prisma.order_productUncheckedCreateWithoutOrderInput> | Prisma.order_productCreateWithoutOrderInput[] | Prisma.order_productUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutOrderInput | Prisma.order_productCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.order_productUpsertWithWhereUniqueWithoutOrderInput | Prisma.order_productUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.order_productCreateManyOrderInputEnvelope
  set?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  disconnect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  delete?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  update?: Prisma.order_productUpdateWithWhereUniqueWithoutOrderInput | Prisma.order_productUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.order_productUpdateManyWithWhereWithoutOrderInput | Prisma.order_productUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.order_productScalarWhereInput | Prisma.order_productScalarWhereInput[]
}

export type order_productCreateNestedManyWithoutProduct_priceInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutProduct_priceInput, Prisma.order_productUncheckedCreateWithoutProduct_priceInput> | Prisma.order_productCreateWithoutProduct_priceInput[] | Prisma.order_productUncheckedCreateWithoutProduct_priceInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutProduct_priceInput | Prisma.order_productCreateOrConnectWithoutProduct_priceInput[]
  createMany?: Prisma.order_productCreateManyProduct_priceInputEnvelope
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
}

export type order_productUncheckedCreateNestedManyWithoutProduct_priceInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutProduct_priceInput, Prisma.order_productUncheckedCreateWithoutProduct_priceInput> | Prisma.order_productCreateWithoutProduct_priceInput[] | Prisma.order_productUncheckedCreateWithoutProduct_priceInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutProduct_priceInput | Prisma.order_productCreateOrConnectWithoutProduct_priceInput[]
  createMany?: Prisma.order_productCreateManyProduct_priceInputEnvelope
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
}

export type order_productUpdateManyWithoutProduct_priceNestedInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutProduct_priceInput, Prisma.order_productUncheckedCreateWithoutProduct_priceInput> | Prisma.order_productCreateWithoutProduct_priceInput[] | Prisma.order_productUncheckedCreateWithoutProduct_priceInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutProduct_priceInput | Prisma.order_productCreateOrConnectWithoutProduct_priceInput[]
  upsert?: Prisma.order_productUpsertWithWhereUniqueWithoutProduct_priceInput | Prisma.order_productUpsertWithWhereUniqueWithoutProduct_priceInput[]
  createMany?: Prisma.order_productCreateManyProduct_priceInputEnvelope
  set?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  disconnect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  delete?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  update?: Prisma.order_productUpdateWithWhereUniqueWithoutProduct_priceInput | Prisma.order_productUpdateWithWhereUniqueWithoutProduct_priceInput[]
  updateMany?: Prisma.order_productUpdateManyWithWhereWithoutProduct_priceInput | Prisma.order_productUpdateManyWithWhereWithoutProduct_priceInput[]
  deleteMany?: Prisma.order_productScalarWhereInput | Prisma.order_productScalarWhereInput[]
}

export type order_productUncheckedUpdateManyWithoutProduct_priceNestedInput = {
  create?: Prisma.XOR<Prisma.order_productCreateWithoutProduct_priceInput, Prisma.order_productUncheckedCreateWithoutProduct_priceInput> | Prisma.order_productCreateWithoutProduct_priceInput[] | Prisma.order_productUncheckedCreateWithoutProduct_priceInput[]
  connectOrCreate?: Prisma.order_productCreateOrConnectWithoutProduct_priceInput | Prisma.order_productCreateOrConnectWithoutProduct_priceInput[]
  upsert?: Prisma.order_productUpsertWithWhereUniqueWithoutProduct_priceInput | Prisma.order_productUpsertWithWhereUniqueWithoutProduct_priceInput[]
  createMany?: Prisma.order_productCreateManyProduct_priceInputEnvelope
  set?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  disconnect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  delete?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  connect?: Prisma.order_productWhereUniqueInput | Prisma.order_productWhereUniqueInput[]
  update?: Prisma.order_productUpdateWithWhereUniqueWithoutProduct_priceInput | Prisma.order_productUpdateWithWhereUniqueWithoutProduct_priceInput[]
  updateMany?: Prisma.order_productUpdateManyWithWhereWithoutProduct_priceInput | Prisma.order_productUpdateManyWithWhereWithoutProduct_priceInput[]
  deleteMany?: Prisma.order_productScalarWhereInput | Prisma.order_productScalarWhereInput[]
}

export type order_productCreateWithoutOrderInput = {
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  product_price: Prisma.product_priceCreateNestedOneWithoutOrder_productInput
}

export type order_productUncheckedCreateWithoutOrderInput = {
  order_product_id?: number
  product_price_id: number
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_productCreateOrConnectWithoutOrderInput = {
  where: Prisma.order_productWhereUniqueInput
  create: Prisma.XOR<Prisma.order_productCreateWithoutOrderInput, Prisma.order_productUncheckedCreateWithoutOrderInput>
}

export type order_productCreateManyOrderInputEnvelope = {
  data: Prisma.order_productCreateManyOrderInput | Prisma.order_productCreateManyOrderInput[]
  skipDuplicates?: boolean
}

export type order_productUpsertWithWhereUniqueWithoutOrderInput = {
  where: Prisma.order_productWhereUniqueInput
  update: Prisma.XOR<Prisma.order_productUpdateWithoutOrderInput, Prisma.order_productUncheckedUpdateWithoutOrderInput>
  create: Prisma.XOR<Prisma.order_productCreateWithoutOrderInput, Prisma.order_productUncheckedCreateWithoutOrderInput>
}

export type order_productUpdateWithWhereUniqueWithoutOrderInput = {
  where: Prisma.order_productWhereUniqueInput
  data: Prisma.XOR<Prisma.order_productUpdateWithoutOrderInput, Prisma.order_productUncheckedUpdateWithoutOrderInput>
}

export type order_productUpdateManyWithWhereWithoutOrderInput = {
  where: Prisma.order_productScalarWhereInput
  data: Prisma.XOR<Prisma.order_productUpdateManyMutationInput, Prisma.order_productUncheckedUpdateManyWithoutOrderInput>
}

export type order_productScalarWhereInput = {
  AND?: Prisma.order_productScalarWhereInput | Prisma.order_productScalarWhereInput[]
  OR?: Prisma.order_productScalarWhereInput[]
  NOT?: Prisma.order_productScalarWhereInput | Prisma.order_productScalarWhereInput[]
  order_product_id?: Prisma.IntFilter<"order_product"> | number
  order_id?: Prisma.IntFilter<"order_product"> | number
  product_price_id?: Prisma.IntFilter<"order_product"> | number
  quantity?: Prisma.IntFilter<"order_product"> | number
  option?: Prisma.StringNullableFilter<"order_product"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"order_product"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order_product"> | Date | string | null
}

export type order_productCreateWithoutProduct_priceInput = {
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order: Prisma.orderCreateNestedOneWithoutOrder_productInput
}

export type order_productUncheckedCreateWithoutProduct_priceInput = {
  order_product_id?: number
  order_id: number
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_productCreateOrConnectWithoutProduct_priceInput = {
  where: Prisma.order_productWhereUniqueInput
  create: Prisma.XOR<Prisma.order_productCreateWithoutProduct_priceInput, Prisma.order_productUncheckedCreateWithoutProduct_priceInput>
}

export type order_productCreateManyProduct_priceInputEnvelope = {
  data: Prisma.order_productCreateManyProduct_priceInput | Prisma.order_productCreateManyProduct_priceInput[]
  skipDuplicates?: boolean
}

export type order_productUpsertWithWhereUniqueWithoutProduct_priceInput = {
  where: Prisma.order_productWhereUniqueInput
  update: Prisma.XOR<Prisma.order_productUpdateWithoutProduct_priceInput, Prisma.order_productUncheckedUpdateWithoutProduct_priceInput>
  create: Prisma.XOR<Prisma.order_productCreateWithoutProduct_priceInput, Prisma.order_productUncheckedCreateWithoutProduct_priceInput>
}

export type order_productUpdateWithWhereUniqueWithoutProduct_priceInput = {
  where: Prisma.order_productWhereUniqueInput
  data: Prisma.XOR<Prisma.order_productUpdateWithoutProduct_priceInput, Prisma.order_productUncheckedUpdateWithoutProduct_priceInput>
}

export type order_productUpdateManyWithWhereWithoutProduct_priceInput = {
  where: Prisma.order_productScalarWhereInput
  data: Prisma.XOR<Prisma.order_productUpdateManyMutationInput, Prisma.order_productUncheckedUpdateManyWithoutProduct_priceInput>
}

export type order_productCreateManyOrderInput = {
  order_product_id?: number
  product_price_id: number
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_productUpdateWithoutOrderInput = {
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  product_price?: Prisma.product_priceUpdateOneRequiredWithoutOrder_productNestedInput
}

export type order_productUncheckedUpdateWithoutOrderInput = {
  order_product_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_productUncheckedUpdateManyWithoutOrderInput = {
  order_product_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_productCreateManyProduct_priceInput = {
  order_product_id?: number
  order_id: number
  quantity: number
  option?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_productUpdateWithoutProduct_priceInput = {
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order?: Prisma.orderUpdateOneRequiredWithoutOrder_productNestedInput
}

export type order_productUncheckedUpdateWithoutProduct_priceInput = {
  order_product_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_productUncheckedUpdateManyWithoutProduct_priceInput = {
  order_product_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  option?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type order_productSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_product_id?: boolean
  order_id?: boolean
  product_price_id?: boolean
  quantity?: boolean
  option?: boolean
  created_at?: boolean
  updated_at?: boolean
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
  product_price?: boolean | Prisma.product_priceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_product"]>

export type order_productSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_product_id?: boolean
  order_id?: boolean
  product_price_id?: boolean
  quantity?: boolean
  option?: boolean
  created_at?: boolean
  updated_at?: boolean
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
  product_price?: boolean | Prisma.product_priceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_product"]>

export type order_productSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_product_id?: boolean
  order_id?: boolean
  product_price_id?: boolean
  quantity?: boolean
  option?: boolean
  created_at?: boolean
  updated_at?: boolean
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
  product_price?: boolean | Prisma.product_priceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_product"]>

export type order_productSelectScalar = {
  order_product_id?: boolean
  order_id?: boolean
  product_price_id?: boolean
  quantity?: boolean
  option?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type order_productOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"order_product_id" | "order_id" | "product_price_id" | "quantity" | "option" | "created_at" | "updated_at", ExtArgs["result"]["order_product"]>
export type order_productInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
  product_price?: boolean | Prisma.product_priceDefaultArgs<ExtArgs>
}
export type order_productIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
  product_price?: boolean | Prisma.product_priceDefaultArgs<ExtArgs>
}
export type order_productIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
  product_price?: boolean | Prisma.product_priceDefaultArgs<ExtArgs>
}

export type $order_productPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "order_product"
  objects: {
    order: Prisma.$orderPayload<ExtArgs>
    product_price: Prisma.$product_pricePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    order_product_id: number
    order_id: number
    product_price_id: number
    quantity: number
    option: string | null
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["order_product"]>
  composites: {}
}

export type order_productGetPayload<S extends boolean | null | undefined | order_productDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$order_productPayload, S>

export type order_productCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<order_productFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Order_productCountAggregateInputType | true
  }

export interface order_productDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_product'], meta: { name: 'order_product' } }
  /**
   * Find zero or one Order_product that matches the filter.
   * @param {order_productFindUniqueArgs} args - Arguments to find a Order_product
   * @example
   * // Get one Order_product
   * const order_product = await prisma.order_product.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends order_productFindUniqueArgs>(args: Prisma.SelectSubset<T, order_productFindUniqueArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Order_product that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {order_productFindUniqueOrThrowArgs} args - Arguments to find a Order_product
   * @example
   * // Get one Order_product
   * const order_product = await prisma.order_product.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends order_productFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, order_productFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order_product that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_productFindFirstArgs} args - Arguments to find a Order_product
   * @example
   * // Get one Order_product
   * const order_product = await prisma.order_product.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends order_productFindFirstArgs>(args?: Prisma.SelectSubset<T, order_productFindFirstArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order_product that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_productFindFirstOrThrowArgs} args - Arguments to find a Order_product
   * @example
   * // Get one Order_product
   * const order_product = await prisma.order_product.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends order_productFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, order_productFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Order_products that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_productFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Order_products
   * const order_products = await prisma.order_product.findMany()
   * 
   * // Get first 10 Order_products
   * const order_products = await prisma.order_product.findMany({ take: 10 })
   * 
   * // Only select the `order_product_id`
   * const order_productWithOrder_product_idOnly = await prisma.order_product.findMany({ select: { order_product_id: true } })
   * 
   */
  findMany<T extends order_productFindManyArgs>(args?: Prisma.SelectSubset<T, order_productFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Order_product.
   * @param {order_productCreateArgs} args - Arguments to create a Order_product.
   * @example
   * // Create one Order_product
   * const Order_product = await prisma.order_product.create({
   *   data: {
   *     // ... data to create a Order_product
   *   }
   * })
   * 
   */
  create<T extends order_productCreateArgs>(args: Prisma.SelectSubset<T, order_productCreateArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Order_products.
   * @param {order_productCreateManyArgs} args - Arguments to create many Order_products.
   * @example
   * // Create many Order_products
   * const order_product = await prisma.order_product.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends order_productCreateManyArgs>(args?: Prisma.SelectSubset<T, order_productCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Order_products and returns the data saved in the database.
   * @param {order_productCreateManyAndReturnArgs} args - Arguments to create many Order_products.
   * @example
   * // Create many Order_products
   * const order_product = await prisma.order_product.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Order_products and only return the `order_product_id`
   * const order_productWithOrder_product_idOnly = await prisma.order_product.createManyAndReturn({
   *   select: { order_product_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends order_productCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, order_productCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Order_product.
   * @param {order_productDeleteArgs} args - Arguments to delete one Order_product.
   * @example
   * // Delete one Order_product
   * const Order_product = await prisma.order_product.delete({
   *   where: {
   *     // ... filter to delete one Order_product
   *   }
   * })
   * 
   */
  delete<T extends order_productDeleteArgs>(args: Prisma.SelectSubset<T, order_productDeleteArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Order_product.
   * @param {order_productUpdateArgs} args - Arguments to update one Order_product.
   * @example
   * // Update one Order_product
   * const order_product = await prisma.order_product.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends order_productUpdateArgs>(args: Prisma.SelectSubset<T, order_productUpdateArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Order_products.
   * @param {order_productDeleteManyArgs} args - Arguments to filter Order_products to delete.
   * @example
   * // Delete a few Order_products
   * const { count } = await prisma.order_product.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends order_productDeleteManyArgs>(args?: Prisma.SelectSubset<T, order_productDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Order_products.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_productUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Order_products
   * const order_product = await prisma.order_product.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends order_productUpdateManyArgs>(args: Prisma.SelectSubset<T, order_productUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Order_products and returns the data updated in the database.
   * @param {order_productUpdateManyAndReturnArgs} args - Arguments to update many Order_products.
   * @example
   * // Update many Order_products
   * const order_product = await prisma.order_product.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Order_products and only return the `order_product_id`
   * const order_productWithOrder_product_idOnly = await prisma.order_product.updateManyAndReturn({
   *   select: { order_product_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends order_productUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, order_productUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Order_product.
   * @param {order_productUpsertArgs} args - Arguments to update or create a Order_product.
   * @example
   * // Update or create a Order_product
   * const order_product = await prisma.order_product.upsert({
   *   create: {
   *     // ... data to create a Order_product
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Order_product we want to update
   *   }
   * })
   */
  upsert<T extends order_productUpsertArgs>(args: Prisma.SelectSubset<T, order_productUpsertArgs<ExtArgs>>): Prisma.Prisma__order_productClient<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Order_products.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_productCountArgs} args - Arguments to filter Order_products to count.
   * @example
   * // Count the number of Order_products
   * const count = await prisma.order_product.count({
   *   where: {
   *     // ... the filter for the Order_products we want to count
   *   }
   * })
  **/
  count<T extends order_productCountArgs>(
    args?: Prisma.Subset<T, order_productCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Order_productCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Order_product.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Order_productAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Order_productAggregateArgs>(args: Prisma.Subset<T, Order_productAggregateArgs>): Prisma.PrismaPromise<GetOrder_productAggregateType<T>>

  /**
   * Group by Order_product.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_productGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends order_productGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: order_productGroupByArgs['orderBy'] }
      : { orderBy?: order_productGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, order_productGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_productGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the order_product model
 */
readonly fields: order_productFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for order_product.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__order_productClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  order<T extends Prisma.orderDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.orderDefaultArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  product_price<T extends Prisma.product_priceDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.product_priceDefaultArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the order_product model
 */
export interface order_productFieldRefs {
  readonly order_product_id: Prisma.FieldRef<"order_product", 'Int'>
  readonly order_id: Prisma.FieldRef<"order_product", 'Int'>
  readonly product_price_id: Prisma.FieldRef<"order_product", 'Int'>
  readonly quantity: Prisma.FieldRef<"order_product", 'Int'>
  readonly option: Prisma.FieldRef<"order_product", 'String'>
  readonly created_at: Prisma.FieldRef<"order_product", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"order_product", 'DateTime'>
}
    

// Custom InputTypes
/**
 * order_product findUnique
 */
export type order_productFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * Filter, which order_product to fetch.
   */
  where: Prisma.order_productWhereUniqueInput
}

/**
 * order_product findUniqueOrThrow
 */
export type order_productFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * Filter, which order_product to fetch.
   */
  where: Prisma.order_productWhereUniqueInput
}

/**
 * order_product findFirst
 */
export type order_productFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * Filter, which order_product to fetch.
   */
  where?: Prisma.order_productWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_products to fetch.
   */
  orderBy?: Prisma.order_productOrderByWithRelationInput | Prisma.order_productOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for order_products.
   */
  cursor?: Prisma.order_productWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_products from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_products.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of order_products.
   */
  distinct?: Prisma.Order_productScalarFieldEnum | Prisma.Order_productScalarFieldEnum[]
}

/**
 * order_product findFirstOrThrow
 */
export type order_productFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * Filter, which order_product to fetch.
   */
  where?: Prisma.order_productWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_products to fetch.
   */
  orderBy?: Prisma.order_productOrderByWithRelationInput | Prisma.order_productOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for order_products.
   */
  cursor?: Prisma.order_productWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_products from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_products.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of order_products.
   */
  distinct?: Prisma.Order_productScalarFieldEnum | Prisma.Order_productScalarFieldEnum[]
}

/**
 * order_product findMany
 */
export type order_productFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * Filter, which order_products to fetch.
   */
  where?: Prisma.order_productWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_products to fetch.
   */
  orderBy?: Prisma.order_productOrderByWithRelationInput | Prisma.order_productOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing order_products.
   */
  cursor?: Prisma.order_productWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_products from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_products.
   */
  skip?: number
  distinct?: Prisma.Order_productScalarFieldEnum | Prisma.Order_productScalarFieldEnum[]
}

/**
 * order_product create
 */
export type order_productCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * The data needed to create a order_product.
   */
  data: Prisma.XOR<Prisma.order_productCreateInput, Prisma.order_productUncheckedCreateInput>
}

/**
 * order_product createMany
 */
export type order_productCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many order_products.
   */
  data: Prisma.order_productCreateManyInput | Prisma.order_productCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * order_product createManyAndReturn
 */
export type order_productCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * The data used to create many order_products.
   */
  data: Prisma.order_productCreateManyInput | Prisma.order_productCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * order_product update
 */
export type order_productUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * The data needed to update a order_product.
   */
  data: Prisma.XOR<Prisma.order_productUpdateInput, Prisma.order_productUncheckedUpdateInput>
  /**
   * Choose, which order_product to update.
   */
  where: Prisma.order_productWhereUniqueInput
}

/**
 * order_product updateMany
 */
export type order_productUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update order_products.
   */
  data: Prisma.XOR<Prisma.order_productUpdateManyMutationInput, Prisma.order_productUncheckedUpdateManyInput>
  /**
   * Filter which order_products to update
   */
  where?: Prisma.order_productWhereInput
  /**
   * Limit how many order_products to update.
   */
  limit?: number
}

/**
 * order_product updateManyAndReturn
 */
export type order_productUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * The data used to update order_products.
   */
  data: Prisma.XOR<Prisma.order_productUpdateManyMutationInput, Prisma.order_productUncheckedUpdateManyInput>
  /**
   * Filter which order_products to update
   */
  where?: Prisma.order_productWhereInput
  /**
   * Limit how many order_products to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * order_product upsert
 */
export type order_productUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * The filter to search for the order_product to update in case it exists.
   */
  where: Prisma.order_productWhereUniqueInput
  /**
   * In case the order_product found by the `where` argument doesn't exist, create a new order_product with this data.
   */
  create: Prisma.XOR<Prisma.order_productCreateInput, Prisma.order_productUncheckedCreateInput>
  /**
   * In case the order_product was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.order_productUpdateInput, Prisma.order_productUncheckedUpdateInput>
}

/**
 * order_product delete
 */
export type order_productDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  /**
   * Filter which order_product to delete.
   */
  where: Prisma.order_productWhereUniqueInput
}

/**
 * order_product deleteMany
 */
export type order_productDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order_products to delete
   */
  where?: Prisma.order_productWhereInput
  /**
   * Limit how many order_products to delete.
   */
  limit?: number
}

/**
 * order_product without action
 */
export type order_productDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
}
