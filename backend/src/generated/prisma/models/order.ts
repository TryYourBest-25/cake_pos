
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `order` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model order
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type orderModel = runtime.Types.Result.DefaultSelection<Prisma.$orderPayload>

export type AggregateOrder = {
  _count: OrderCountAggregateOutputType | null
  _avg: OrderAvgAggregateOutputType | null
  _sum: OrderSumAggregateOutputType | null
  _min: OrderMinAggregateOutputType | null
  _max: OrderMaxAggregateOutputType | null
}

export type OrderAvgAggregateOutputType = {
  order_id: number | null
  customer_id: number | null
  employee_id: number | null
  total_amount: number | null
  final_amount: number | null
}

export type OrderSumAggregateOutputType = {
  order_id: number | null
  customer_id: number | null
  employee_id: number | null
  total_amount: number | null
  final_amount: number | null
}

export type OrderMinAggregateOutputType = {
  order_id: number | null
  customer_id: number | null
  employee_id: number | null
  order_time: Date | null
  total_amount: number | null
  final_amount: number | null
  status: $Enums.order_status_enum | null
  customize_note: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type OrderMaxAggregateOutputType = {
  order_id: number | null
  customer_id: number | null
  employee_id: number | null
  order_time: Date | null
  total_amount: number | null
  final_amount: number | null
  status: $Enums.order_status_enum | null
  customize_note: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type OrderCountAggregateOutputType = {
  order_id: number
  customer_id: number
  employee_id: number
  order_time: number
  total_amount: number
  final_amount: number
  status: number
  customize_note: number
  created_at: number
  updated_at: number
  _all: number
}


export type OrderAvgAggregateInputType = {
  order_id?: true
  customer_id?: true
  employee_id?: true
  total_amount?: true
  final_amount?: true
}

export type OrderSumAggregateInputType = {
  order_id?: true
  customer_id?: true
  employee_id?: true
  total_amount?: true
  final_amount?: true
}

export type OrderMinAggregateInputType = {
  order_id?: true
  customer_id?: true
  employee_id?: true
  order_time?: true
  total_amount?: true
  final_amount?: true
  status?: true
  customize_note?: true
  created_at?: true
  updated_at?: true
}

export type OrderMaxAggregateInputType = {
  order_id?: true
  customer_id?: true
  employee_id?: true
  order_time?: true
  total_amount?: true
  final_amount?: true
  status?: true
  customize_note?: true
  created_at?: true
  updated_at?: true
}

export type OrderCountAggregateInputType = {
  order_id?: true
  customer_id?: true
  employee_id?: true
  order_time?: true
  total_amount?: true
  final_amount?: true
  status?: true
  customize_note?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type OrderAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order to aggregate.
   */
  where?: Prisma.orderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of orders to fetch.
   */
  orderBy?: Prisma.orderOrderByWithRelationInput | Prisma.orderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.orderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned orders
  **/
  _count?: true | OrderCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: OrderAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: OrderSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OrderMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OrderMaxAggregateInputType
}

export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
      [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrder[P]>
    : Prisma.GetScalarType<T[P], AggregateOrder[P]>
}




export type orderGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.orderWhereInput
  orderBy?: Prisma.orderOrderByWithAggregationInput | Prisma.orderOrderByWithAggregationInput[]
  by: Prisma.OrderScalarFieldEnum[] | Prisma.OrderScalarFieldEnum
  having?: Prisma.orderScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OrderCountAggregateInputType | true
  _avg?: OrderAvgAggregateInputType
  _sum?: OrderSumAggregateInputType
  _min?: OrderMinAggregateInputType
  _max?: OrderMaxAggregateInputType
}

export type OrderGroupByOutputType = {
  order_id: number
  customer_id: number | null
  employee_id: number
  order_time: Date | null
  total_amount: number | null
  final_amount: number | null
  status: $Enums.order_status_enum | null
  customize_note: string | null
  created_at: Date | null
  updated_at: Date | null
  _count: OrderCountAggregateOutputType | null
  _avg: OrderAvgAggregateOutputType | null
  _sum: OrderSumAggregateOutputType | null
  _min: OrderMinAggregateOutputType | null
  _max: OrderMaxAggregateOutputType | null
}

type GetOrderGroupByPayload<T extends orderGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OrderGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OrderGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OrderGroupByOutputType[P]>
      }
    >
  > 



export type orderWhereInput = {
  AND?: Prisma.orderWhereInput | Prisma.orderWhereInput[]
  OR?: Prisma.orderWhereInput[]
  NOT?: Prisma.orderWhereInput | Prisma.orderWhereInput[]
  order_id?: Prisma.IntFilter<"order"> | number
  customer_id?: Prisma.IntNullableFilter<"order"> | number | null
  employee_id?: Prisma.IntFilter<"order"> | number
  order_time?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  total_amount?: Prisma.IntNullableFilter<"order"> | number | null
  final_amount?: Prisma.IntNullableFilter<"order"> | number | null
  status?: Prisma.Enumorder_status_enumNullableFilter<"order"> | $Enums.order_status_enum | null
  customize_note?: Prisma.StringNullableFilter<"order"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  customer?: Prisma.XOR<Prisma.CustomerNullableScalarRelationFilter, Prisma.customerWhereInput> | null
  employee?: Prisma.XOR<Prisma.EmployeeScalarRelationFilter, Prisma.employeeWhereInput>
  order_discount?: Prisma.Order_discountListRelationFilter
  order_product?: Prisma.Order_productListRelationFilter
  payment?: Prisma.PaymentListRelationFilter
}

export type orderOrderByWithRelationInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrderInput | Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  order_time?: Prisma.SortOrderInput | Prisma.SortOrder
  total_amount?: Prisma.SortOrderInput | Prisma.SortOrder
  final_amount?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrderInput | Prisma.SortOrder
  customize_note?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  customer?: Prisma.customerOrderByWithRelationInput
  employee?: Prisma.employeeOrderByWithRelationInput
  order_discount?: Prisma.order_discountOrderByRelationAggregateInput
  order_product?: Prisma.order_productOrderByRelationAggregateInput
  payment?: Prisma.paymentOrderByRelationAggregateInput
}

export type orderWhereUniqueInput = Prisma.AtLeast<{
  order_id?: number
  AND?: Prisma.orderWhereInput | Prisma.orderWhereInput[]
  OR?: Prisma.orderWhereInput[]
  NOT?: Prisma.orderWhereInput | Prisma.orderWhereInput[]
  customer_id?: Prisma.IntNullableFilter<"order"> | number | null
  employee_id?: Prisma.IntFilter<"order"> | number
  order_time?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  total_amount?: Prisma.IntNullableFilter<"order"> | number | null
  final_amount?: Prisma.IntNullableFilter<"order"> | number | null
  status?: Prisma.Enumorder_status_enumNullableFilter<"order"> | $Enums.order_status_enum | null
  customize_note?: Prisma.StringNullableFilter<"order"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  customer?: Prisma.XOR<Prisma.CustomerNullableScalarRelationFilter, Prisma.customerWhereInput> | null
  employee?: Prisma.XOR<Prisma.EmployeeScalarRelationFilter, Prisma.employeeWhereInput>
  order_discount?: Prisma.Order_discountListRelationFilter
  order_product?: Prisma.Order_productListRelationFilter
  payment?: Prisma.PaymentListRelationFilter
}, "order_id">

export type orderOrderByWithAggregationInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrderInput | Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  order_time?: Prisma.SortOrderInput | Prisma.SortOrder
  total_amount?: Prisma.SortOrderInput | Prisma.SortOrder
  final_amount?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrderInput | Prisma.SortOrder
  customize_note?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.orderCountOrderByAggregateInput
  _avg?: Prisma.orderAvgOrderByAggregateInput
  _max?: Prisma.orderMaxOrderByAggregateInput
  _min?: Prisma.orderMinOrderByAggregateInput
  _sum?: Prisma.orderSumOrderByAggregateInput
}

export type orderScalarWhereWithAggregatesInput = {
  AND?: Prisma.orderScalarWhereWithAggregatesInput | Prisma.orderScalarWhereWithAggregatesInput[]
  OR?: Prisma.orderScalarWhereWithAggregatesInput[]
  NOT?: Prisma.orderScalarWhereWithAggregatesInput | Prisma.orderScalarWhereWithAggregatesInput[]
  order_id?: Prisma.IntWithAggregatesFilter<"order"> | number
  customer_id?: Prisma.IntNullableWithAggregatesFilter<"order"> | number | null
  employee_id?: Prisma.IntWithAggregatesFilter<"order"> | number
  order_time?: Prisma.DateTimeNullableWithAggregatesFilter<"order"> | Date | string | null
  total_amount?: Prisma.IntNullableWithAggregatesFilter<"order"> | number | null
  final_amount?: Prisma.IntNullableWithAggregatesFilter<"order"> | number | null
  status?: Prisma.Enumorder_status_enumNullableWithAggregatesFilter<"order"> | $Enums.order_status_enum | null
  customize_note?: Prisma.StringNullableWithAggregatesFilter<"order"> | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"order"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"order"> | Date | string | null
}

export type orderCreateInput = {
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  customer?: Prisma.customerCreateNestedOneWithoutOrderInput
  employee: Prisma.employeeCreateNestedOneWithoutOrderInput
  order_discount?: Prisma.order_discountCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentCreateNestedManyWithoutOrderInput
}

export type orderUncheckedCreateInput = {
  order_id?: number
  customer_id?: number | null
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountUncheckedCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentUncheckedCreateNestedManyWithoutOrderInput
}

export type orderUpdateInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customer?: Prisma.customerUpdateOneWithoutOrderNestedInput
  employee?: Prisma.employeeUpdateOneRequiredWithoutOrderNestedInput
  order_discount?: Prisma.order_discountUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUncheckedUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUncheckedUpdateManyWithoutOrderNestedInput
}

export type orderCreateManyInput = {
  order_id?: number
  customer_id?: number | null
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type orderUpdateManyMutationInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type orderUncheckedUpdateManyInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type OrderListRelationFilter = {
  every?: Prisma.orderWhereInput
  some?: Prisma.orderWhereInput
  none?: Prisma.orderWhereInput
}

export type orderOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type orderCountOrderByAggregateInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  order_time?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  final_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  customize_note?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type orderAvgOrderByAggregateInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  final_amount?: Prisma.SortOrder
}

export type orderMaxOrderByAggregateInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  order_time?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  final_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  customize_note?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type orderMinOrderByAggregateInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  order_time?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  final_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  customize_note?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type orderSumOrderByAggregateInput = {
  order_id?: Prisma.SortOrder
  customer_id?: Prisma.SortOrder
  employee_id?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  final_amount?: Prisma.SortOrder
}

export type OrderScalarRelationFilter = {
  is?: Prisma.orderWhereInput
  isNot?: Prisma.orderWhereInput
}

export type orderCreateNestedManyWithoutCustomerInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutCustomerInput, Prisma.orderUncheckedCreateWithoutCustomerInput> | Prisma.orderCreateWithoutCustomerInput[] | Prisma.orderUncheckedCreateWithoutCustomerInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutCustomerInput | Prisma.orderCreateOrConnectWithoutCustomerInput[]
  createMany?: Prisma.orderCreateManyCustomerInputEnvelope
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
}

export type orderUncheckedCreateNestedManyWithoutCustomerInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutCustomerInput, Prisma.orderUncheckedCreateWithoutCustomerInput> | Prisma.orderCreateWithoutCustomerInput[] | Prisma.orderUncheckedCreateWithoutCustomerInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutCustomerInput | Prisma.orderCreateOrConnectWithoutCustomerInput[]
  createMany?: Prisma.orderCreateManyCustomerInputEnvelope
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
}

export type orderUpdateManyWithoutCustomerNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutCustomerInput, Prisma.orderUncheckedCreateWithoutCustomerInput> | Prisma.orderCreateWithoutCustomerInput[] | Prisma.orderUncheckedCreateWithoutCustomerInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutCustomerInput | Prisma.orderCreateOrConnectWithoutCustomerInput[]
  upsert?: Prisma.orderUpsertWithWhereUniqueWithoutCustomerInput | Prisma.orderUpsertWithWhereUniqueWithoutCustomerInput[]
  createMany?: Prisma.orderCreateManyCustomerInputEnvelope
  set?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  disconnect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  delete?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  update?: Prisma.orderUpdateWithWhereUniqueWithoutCustomerInput | Prisma.orderUpdateWithWhereUniqueWithoutCustomerInput[]
  updateMany?: Prisma.orderUpdateManyWithWhereWithoutCustomerInput | Prisma.orderUpdateManyWithWhereWithoutCustomerInput[]
  deleteMany?: Prisma.orderScalarWhereInput | Prisma.orderScalarWhereInput[]
}

export type orderUncheckedUpdateManyWithoutCustomerNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutCustomerInput, Prisma.orderUncheckedCreateWithoutCustomerInput> | Prisma.orderCreateWithoutCustomerInput[] | Prisma.orderUncheckedCreateWithoutCustomerInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutCustomerInput | Prisma.orderCreateOrConnectWithoutCustomerInput[]
  upsert?: Prisma.orderUpsertWithWhereUniqueWithoutCustomerInput | Prisma.orderUpsertWithWhereUniqueWithoutCustomerInput[]
  createMany?: Prisma.orderCreateManyCustomerInputEnvelope
  set?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  disconnect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  delete?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  update?: Prisma.orderUpdateWithWhereUniqueWithoutCustomerInput | Prisma.orderUpdateWithWhereUniqueWithoutCustomerInput[]
  updateMany?: Prisma.orderUpdateManyWithWhereWithoutCustomerInput | Prisma.orderUpdateManyWithWhereWithoutCustomerInput[]
  deleteMany?: Prisma.orderScalarWhereInput | Prisma.orderScalarWhereInput[]
}

export type orderCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutEmployeeInput, Prisma.orderUncheckedCreateWithoutEmployeeInput> | Prisma.orderCreateWithoutEmployeeInput[] | Prisma.orderUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutEmployeeInput | Prisma.orderCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.orderCreateManyEmployeeInputEnvelope
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
}

export type orderUncheckedCreateNestedManyWithoutEmployeeInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutEmployeeInput, Prisma.orderUncheckedCreateWithoutEmployeeInput> | Prisma.orderCreateWithoutEmployeeInput[] | Prisma.orderUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutEmployeeInput | Prisma.orderCreateOrConnectWithoutEmployeeInput[]
  createMany?: Prisma.orderCreateManyEmployeeInputEnvelope
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
}

export type orderUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutEmployeeInput, Prisma.orderUncheckedCreateWithoutEmployeeInput> | Prisma.orderCreateWithoutEmployeeInput[] | Prisma.orderUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutEmployeeInput | Prisma.orderCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.orderUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.orderUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.orderCreateManyEmployeeInputEnvelope
  set?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  disconnect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  delete?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  update?: Prisma.orderUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.orderUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.orderUpdateManyWithWhereWithoutEmployeeInput | Prisma.orderUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.orderScalarWhereInput | Prisma.orderScalarWhereInput[]
}

export type orderUncheckedUpdateManyWithoutEmployeeNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutEmployeeInput, Prisma.orderUncheckedCreateWithoutEmployeeInput> | Prisma.orderCreateWithoutEmployeeInput[] | Prisma.orderUncheckedCreateWithoutEmployeeInput[]
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutEmployeeInput | Prisma.orderCreateOrConnectWithoutEmployeeInput[]
  upsert?: Prisma.orderUpsertWithWhereUniqueWithoutEmployeeInput | Prisma.orderUpsertWithWhereUniqueWithoutEmployeeInput[]
  createMany?: Prisma.orderCreateManyEmployeeInputEnvelope
  set?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  disconnect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  delete?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  connect?: Prisma.orderWhereUniqueInput | Prisma.orderWhereUniqueInput[]
  update?: Prisma.orderUpdateWithWhereUniqueWithoutEmployeeInput | Prisma.orderUpdateWithWhereUniqueWithoutEmployeeInput[]
  updateMany?: Prisma.orderUpdateManyWithWhereWithoutEmployeeInput | Prisma.orderUpdateManyWithWhereWithoutEmployeeInput[]
  deleteMany?: Prisma.orderScalarWhereInput | Prisma.orderScalarWhereInput[]
}

export type NullableEnumorder_status_enumFieldUpdateOperationsInput = {
  set?: $Enums.order_status_enum | null
}

export type orderCreateNestedOneWithoutOrder_discountInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutOrder_discountInput, Prisma.orderUncheckedCreateWithoutOrder_discountInput>
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutOrder_discountInput
  connect?: Prisma.orderWhereUniqueInput
}

export type orderUpdateOneRequiredWithoutOrder_discountNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutOrder_discountInput, Prisma.orderUncheckedCreateWithoutOrder_discountInput>
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutOrder_discountInput
  upsert?: Prisma.orderUpsertWithoutOrder_discountInput
  connect?: Prisma.orderWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.orderUpdateToOneWithWhereWithoutOrder_discountInput, Prisma.orderUpdateWithoutOrder_discountInput>, Prisma.orderUncheckedUpdateWithoutOrder_discountInput>
}

export type orderCreateNestedOneWithoutOrder_productInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutOrder_productInput, Prisma.orderUncheckedCreateWithoutOrder_productInput>
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutOrder_productInput
  connect?: Prisma.orderWhereUniqueInput
}

export type orderUpdateOneRequiredWithoutOrder_productNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutOrder_productInput, Prisma.orderUncheckedCreateWithoutOrder_productInput>
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutOrder_productInput
  upsert?: Prisma.orderUpsertWithoutOrder_productInput
  connect?: Prisma.orderWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.orderUpdateToOneWithWhereWithoutOrder_productInput, Prisma.orderUpdateWithoutOrder_productInput>, Prisma.orderUncheckedUpdateWithoutOrder_productInput>
}

export type orderCreateNestedOneWithoutPaymentInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutPaymentInput, Prisma.orderUncheckedCreateWithoutPaymentInput>
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutPaymentInput
  connect?: Prisma.orderWhereUniqueInput
}

export type orderUpdateOneRequiredWithoutPaymentNestedInput = {
  create?: Prisma.XOR<Prisma.orderCreateWithoutPaymentInput, Prisma.orderUncheckedCreateWithoutPaymentInput>
  connectOrCreate?: Prisma.orderCreateOrConnectWithoutPaymentInput
  upsert?: Prisma.orderUpsertWithoutPaymentInput
  connect?: Prisma.orderWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.orderUpdateToOneWithWhereWithoutPaymentInput, Prisma.orderUpdateWithoutPaymentInput>, Prisma.orderUncheckedUpdateWithoutPaymentInput>
}

export type orderCreateWithoutCustomerInput = {
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  employee: Prisma.employeeCreateNestedOneWithoutOrderInput
  order_discount?: Prisma.order_discountCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentCreateNestedManyWithoutOrderInput
}

export type orderUncheckedCreateWithoutCustomerInput = {
  order_id?: number
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountUncheckedCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentUncheckedCreateNestedManyWithoutOrderInput
}

export type orderCreateOrConnectWithoutCustomerInput = {
  where: Prisma.orderWhereUniqueInput
  create: Prisma.XOR<Prisma.orderCreateWithoutCustomerInput, Prisma.orderUncheckedCreateWithoutCustomerInput>
}

export type orderCreateManyCustomerInputEnvelope = {
  data: Prisma.orderCreateManyCustomerInput | Prisma.orderCreateManyCustomerInput[]
  skipDuplicates?: boolean
}

export type orderUpsertWithWhereUniqueWithoutCustomerInput = {
  where: Prisma.orderWhereUniqueInput
  update: Prisma.XOR<Prisma.orderUpdateWithoutCustomerInput, Prisma.orderUncheckedUpdateWithoutCustomerInput>
  create: Prisma.XOR<Prisma.orderCreateWithoutCustomerInput, Prisma.orderUncheckedCreateWithoutCustomerInput>
}

export type orderUpdateWithWhereUniqueWithoutCustomerInput = {
  where: Prisma.orderWhereUniqueInput
  data: Prisma.XOR<Prisma.orderUpdateWithoutCustomerInput, Prisma.orderUncheckedUpdateWithoutCustomerInput>
}

export type orderUpdateManyWithWhereWithoutCustomerInput = {
  where: Prisma.orderScalarWhereInput
  data: Prisma.XOR<Prisma.orderUpdateManyMutationInput, Prisma.orderUncheckedUpdateManyWithoutCustomerInput>
}

export type orderScalarWhereInput = {
  AND?: Prisma.orderScalarWhereInput | Prisma.orderScalarWhereInput[]
  OR?: Prisma.orderScalarWhereInput[]
  NOT?: Prisma.orderScalarWhereInput | Prisma.orderScalarWhereInput[]
  order_id?: Prisma.IntFilter<"order"> | number
  customer_id?: Prisma.IntNullableFilter<"order"> | number | null
  employee_id?: Prisma.IntFilter<"order"> | number
  order_time?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  total_amount?: Prisma.IntNullableFilter<"order"> | number | null
  final_amount?: Prisma.IntNullableFilter<"order"> | number | null
  status?: Prisma.Enumorder_status_enumNullableFilter<"order"> | $Enums.order_status_enum | null
  customize_note?: Prisma.StringNullableFilter<"order"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order"> | Date | string | null
}

export type orderCreateWithoutEmployeeInput = {
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  customer?: Prisma.customerCreateNestedOneWithoutOrderInput
  order_discount?: Prisma.order_discountCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentCreateNestedManyWithoutOrderInput
}

export type orderUncheckedCreateWithoutEmployeeInput = {
  order_id?: number
  customer_id?: number | null
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountUncheckedCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentUncheckedCreateNestedManyWithoutOrderInput
}

export type orderCreateOrConnectWithoutEmployeeInput = {
  where: Prisma.orderWhereUniqueInput
  create: Prisma.XOR<Prisma.orderCreateWithoutEmployeeInput, Prisma.orderUncheckedCreateWithoutEmployeeInput>
}

export type orderCreateManyEmployeeInputEnvelope = {
  data: Prisma.orderCreateManyEmployeeInput | Prisma.orderCreateManyEmployeeInput[]
  skipDuplicates?: boolean
}

export type orderUpsertWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.orderWhereUniqueInput
  update: Prisma.XOR<Prisma.orderUpdateWithoutEmployeeInput, Prisma.orderUncheckedUpdateWithoutEmployeeInput>
  create: Prisma.XOR<Prisma.orderCreateWithoutEmployeeInput, Prisma.orderUncheckedCreateWithoutEmployeeInput>
}

export type orderUpdateWithWhereUniqueWithoutEmployeeInput = {
  where: Prisma.orderWhereUniqueInput
  data: Prisma.XOR<Prisma.orderUpdateWithoutEmployeeInput, Prisma.orderUncheckedUpdateWithoutEmployeeInput>
}

export type orderUpdateManyWithWhereWithoutEmployeeInput = {
  where: Prisma.orderScalarWhereInput
  data: Prisma.XOR<Prisma.orderUpdateManyMutationInput, Prisma.orderUncheckedUpdateManyWithoutEmployeeInput>
}

export type orderCreateWithoutOrder_discountInput = {
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  customer?: Prisma.customerCreateNestedOneWithoutOrderInput
  employee: Prisma.employeeCreateNestedOneWithoutOrderInput
  order_product?: Prisma.order_productCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentCreateNestedManyWithoutOrderInput
}

export type orderUncheckedCreateWithoutOrder_discountInput = {
  order_id?: number
  customer_id?: number | null
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentUncheckedCreateNestedManyWithoutOrderInput
}

export type orderCreateOrConnectWithoutOrder_discountInput = {
  where: Prisma.orderWhereUniqueInput
  create: Prisma.XOR<Prisma.orderCreateWithoutOrder_discountInput, Prisma.orderUncheckedCreateWithoutOrder_discountInput>
}

export type orderUpsertWithoutOrder_discountInput = {
  update: Prisma.XOR<Prisma.orderUpdateWithoutOrder_discountInput, Prisma.orderUncheckedUpdateWithoutOrder_discountInput>
  create: Prisma.XOR<Prisma.orderCreateWithoutOrder_discountInput, Prisma.orderUncheckedCreateWithoutOrder_discountInput>
  where?: Prisma.orderWhereInput
}

export type orderUpdateToOneWithWhereWithoutOrder_discountInput = {
  where?: Prisma.orderWhereInput
  data: Prisma.XOR<Prisma.orderUpdateWithoutOrder_discountInput, Prisma.orderUncheckedUpdateWithoutOrder_discountInput>
}

export type orderUpdateWithoutOrder_discountInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customer?: Prisma.customerUpdateOneWithoutOrderNestedInput
  employee?: Prisma.employeeUpdateOneRequiredWithoutOrderNestedInput
  order_product?: Prisma.order_productUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateWithoutOrder_discountInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUncheckedUpdateManyWithoutOrderNestedInput
}

export type orderCreateWithoutOrder_productInput = {
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  customer?: Prisma.customerCreateNestedOneWithoutOrderInput
  employee: Prisma.employeeCreateNestedOneWithoutOrderInput
  order_discount?: Prisma.order_discountCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentCreateNestedManyWithoutOrderInput
}

export type orderUncheckedCreateWithoutOrder_productInput = {
  order_id?: number
  customer_id?: number | null
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountUncheckedCreateNestedManyWithoutOrderInput
  payment?: Prisma.paymentUncheckedCreateNestedManyWithoutOrderInput
}

export type orderCreateOrConnectWithoutOrder_productInput = {
  where: Prisma.orderWhereUniqueInput
  create: Prisma.XOR<Prisma.orderCreateWithoutOrder_productInput, Prisma.orderUncheckedCreateWithoutOrder_productInput>
}

export type orderUpsertWithoutOrder_productInput = {
  update: Prisma.XOR<Prisma.orderUpdateWithoutOrder_productInput, Prisma.orderUncheckedUpdateWithoutOrder_productInput>
  create: Prisma.XOR<Prisma.orderCreateWithoutOrder_productInput, Prisma.orderUncheckedCreateWithoutOrder_productInput>
  where?: Prisma.orderWhereInput
}

export type orderUpdateToOneWithWhereWithoutOrder_productInput = {
  where?: Prisma.orderWhereInput
  data: Prisma.XOR<Prisma.orderUpdateWithoutOrder_productInput, Prisma.orderUncheckedUpdateWithoutOrder_productInput>
}

export type orderUpdateWithoutOrder_productInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customer?: Prisma.customerUpdateOneWithoutOrderNestedInput
  employee?: Prisma.employeeUpdateOneRequiredWithoutOrderNestedInput
  order_discount?: Prisma.order_discountUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateWithoutOrder_productInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUncheckedUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUncheckedUpdateManyWithoutOrderNestedInput
}

export type orderCreateWithoutPaymentInput = {
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  customer?: Prisma.customerCreateNestedOneWithoutOrderInput
  employee: Prisma.employeeCreateNestedOneWithoutOrderInput
  order_discount?: Prisma.order_discountCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productCreateNestedManyWithoutOrderInput
}

export type orderUncheckedCreateWithoutPaymentInput = {
  order_id?: number
  customer_id?: number | null
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountUncheckedCreateNestedManyWithoutOrderInput
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutOrderInput
}

export type orderCreateOrConnectWithoutPaymentInput = {
  where: Prisma.orderWhereUniqueInput
  create: Prisma.XOR<Prisma.orderCreateWithoutPaymentInput, Prisma.orderUncheckedCreateWithoutPaymentInput>
}

export type orderUpsertWithoutPaymentInput = {
  update: Prisma.XOR<Prisma.orderUpdateWithoutPaymentInput, Prisma.orderUncheckedUpdateWithoutPaymentInput>
  create: Prisma.XOR<Prisma.orderCreateWithoutPaymentInput, Prisma.orderUncheckedCreateWithoutPaymentInput>
  where?: Prisma.orderWhereInput
}

export type orderUpdateToOneWithWhereWithoutPaymentInput = {
  where?: Prisma.orderWhereInput
  data: Prisma.XOR<Prisma.orderUpdateWithoutPaymentInput, Prisma.orderUncheckedUpdateWithoutPaymentInput>
}

export type orderUpdateWithoutPaymentInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customer?: Prisma.customerUpdateOneWithoutOrderNestedInput
  employee?: Prisma.employeeUpdateOneRequiredWithoutOrderNestedInput
  order_discount?: Prisma.order_discountUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateWithoutPaymentInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUncheckedUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutOrderNestedInput
}

export type orderCreateManyCustomerInput = {
  order_id?: number
  employee_id: number
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type orderUpdateWithoutCustomerInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  employee?: Prisma.employeeUpdateOneRequiredWithoutOrderNestedInput
  order_discount?: Prisma.order_discountUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateWithoutCustomerInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUncheckedUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUncheckedUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateManyWithoutCustomerInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  employee_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type orderCreateManyEmployeeInput = {
  order_id?: number
  customer_id?: number | null
  order_time?: Date | string | null
  total_amount?: number | null
  final_amount?: number | null
  status?: $Enums.order_status_enum | null
  customize_note?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type orderUpdateWithoutEmployeeInput = {
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customer?: Prisma.customerUpdateOneWithoutOrderNestedInput
  order_discount?: Prisma.order_discountUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateWithoutEmployeeInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUncheckedUpdateManyWithoutOrderNestedInput
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutOrderNestedInput
  payment?: Prisma.paymentUncheckedUpdateManyWithoutOrderNestedInput
}

export type orderUncheckedUpdateManyWithoutEmployeeInput = {
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  customer_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  order_time?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  total_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  final_amount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.NullableEnumorder_status_enumFieldUpdateOperationsInput | $Enums.order_status_enum | null
  customize_note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type OrderCountOutputType
 */

export type OrderCountOutputType = {
  order_discount: number
  order_product: number
  payment: number
}

export type OrderCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order_discount?: boolean | OrderCountOutputTypeCountOrder_discountArgs
  order_product?: boolean | OrderCountOutputTypeCountOrder_productArgs
  payment?: boolean | OrderCountOutputTypeCountPaymentArgs
}

/**
 * OrderCountOutputType without action
 */
export type OrderCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderCountOutputType
   */
  select?: Prisma.OrderCountOutputTypeSelect<ExtArgs> | null
}

/**
 * OrderCountOutputType without action
 */
export type OrderCountOutputTypeCountOrder_discountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_discountWhereInput
}

/**
 * OrderCountOutputType without action
 */
export type OrderCountOutputTypeCountOrder_productArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_productWhereInput
}

/**
 * OrderCountOutputType without action
 */
export type OrderCountOutputTypeCountPaymentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.paymentWhereInput
}


export type orderSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_id?: boolean
  customer_id?: boolean
  employee_id?: boolean
  order_time?: boolean
  total_amount?: boolean
  final_amount?: boolean
  status?: boolean
  customize_note?: boolean
  created_at?: boolean
  updated_at?: boolean
  customer?: boolean | Prisma.order$customerArgs<ExtArgs>
  employee?: boolean | Prisma.employeeDefaultArgs<ExtArgs>
  order_discount?: boolean | Prisma.order$order_discountArgs<ExtArgs>
  order_product?: boolean | Prisma.order$order_productArgs<ExtArgs>
  payment?: boolean | Prisma.order$paymentArgs<ExtArgs>
  _count?: boolean | Prisma.OrderCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order"]>

export type orderSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_id?: boolean
  customer_id?: boolean
  employee_id?: boolean
  order_time?: boolean
  total_amount?: boolean
  final_amount?: boolean
  status?: boolean
  customize_note?: boolean
  created_at?: boolean
  updated_at?: boolean
  customer?: boolean | Prisma.order$customerArgs<ExtArgs>
  employee?: boolean | Prisma.employeeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order"]>

export type orderSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_id?: boolean
  customer_id?: boolean
  employee_id?: boolean
  order_time?: boolean
  total_amount?: boolean
  final_amount?: boolean
  status?: boolean
  customize_note?: boolean
  created_at?: boolean
  updated_at?: boolean
  customer?: boolean | Prisma.order$customerArgs<ExtArgs>
  employee?: boolean | Prisma.employeeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order"]>

export type orderSelectScalar = {
  order_id?: boolean
  customer_id?: boolean
  employee_id?: boolean
  order_time?: boolean
  total_amount?: boolean
  final_amount?: boolean
  status?: boolean
  customize_note?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type orderOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"order_id" | "customer_id" | "employee_id" | "order_time" | "total_amount" | "final_amount" | "status" | "customize_note" | "created_at" | "updated_at", ExtArgs["result"]["order"]>
export type orderInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  customer?: boolean | Prisma.order$customerArgs<ExtArgs>
  employee?: boolean | Prisma.employeeDefaultArgs<ExtArgs>
  order_discount?: boolean | Prisma.order$order_discountArgs<ExtArgs>
  order_product?: boolean | Prisma.order$order_productArgs<ExtArgs>
  payment?: boolean | Prisma.order$paymentArgs<ExtArgs>
  _count?: boolean | Prisma.OrderCountOutputTypeDefaultArgs<ExtArgs>
}
export type orderIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  customer?: boolean | Prisma.order$customerArgs<ExtArgs>
  employee?: boolean | Prisma.employeeDefaultArgs<ExtArgs>
}
export type orderIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  customer?: boolean | Prisma.order$customerArgs<ExtArgs>
  employee?: boolean | Prisma.employeeDefaultArgs<ExtArgs>
}

export type $orderPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "order"
  objects: {
    customer: Prisma.$customerPayload<ExtArgs> | null
    employee: Prisma.$employeePayload<ExtArgs>
    order_discount: Prisma.$order_discountPayload<ExtArgs>[]
    order_product: Prisma.$order_productPayload<ExtArgs>[]
    payment: Prisma.$paymentPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    order_id: number
    customer_id: number | null
    employee_id: number
    order_time: Date | null
    total_amount: number | null
    final_amount: number | null
    status: $Enums.order_status_enum | null
    customize_note: string | null
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["order"]>
  composites: {}
}

export type orderGetPayload<S extends boolean | null | undefined | orderDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$orderPayload, S>

export type orderCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<orderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OrderCountAggregateInputType | true
  }

export interface orderDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order'], meta: { name: 'order' } }
  /**
   * Find zero or one Order that matches the filter.
   * @param {orderFindUniqueArgs} args - Arguments to find a Order
   * @example
   * // Get one Order
   * const order = await prisma.order.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends orderFindUniqueArgs>(args: Prisma.SelectSubset<T, orderFindUniqueArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Order that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {orderFindUniqueOrThrowArgs} args - Arguments to find a Order
   * @example
   * // Get one Order
   * const order = await prisma.order.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends orderFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, orderFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {orderFindFirstArgs} args - Arguments to find a Order
   * @example
   * // Get one Order
   * const order = await prisma.order.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends orderFindFirstArgs>(args?: Prisma.SelectSubset<T, orderFindFirstArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {orderFindFirstOrThrowArgs} args - Arguments to find a Order
   * @example
   * // Get one Order
   * const order = await prisma.order.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends orderFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, orderFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Orders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {orderFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Orders
   * const orders = await prisma.order.findMany()
   * 
   * // Get first 10 Orders
   * const orders = await prisma.order.findMany({ take: 10 })
   * 
   * // Only select the `order_id`
   * const orderWithOrder_idOnly = await prisma.order.findMany({ select: { order_id: true } })
   * 
   */
  findMany<T extends orderFindManyArgs>(args?: Prisma.SelectSubset<T, orderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Order.
   * @param {orderCreateArgs} args - Arguments to create a Order.
   * @example
   * // Create one Order
   * const Order = await prisma.order.create({
   *   data: {
   *     // ... data to create a Order
   *   }
   * })
   * 
   */
  create<T extends orderCreateArgs>(args: Prisma.SelectSubset<T, orderCreateArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Orders.
   * @param {orderCreateManyArgs} args - Arguments to create many Orders.
   * @example
   * // Create many Orders
   * const order = await prisma.order.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends orderCreateManyArgs>(args?: Prisma.SelectSubset<T, orderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Orders and returns the data saved in the database.
   * @param {orderCreateManyAndReturnArgs} args - Arguments to create many Orders.
   * @example
   * // Create many Orders
   * const order = await prisma.order.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Orders and only return the `order_id`
   * const orderWithOrder_idOnly = await prisma.order.createManyAndReturn({
   *   select: { order_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends orderCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, orderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Order.
   * @param {orderDeleteArgs} args - Arguments to delete one Order.
   * @example
   * // Delete one Order
   * const Order = await prisma.order.delete({
   *   where: {
   *     // ... filter to delete one Order
   *   }
   * })
   * 
   */
  delete<T extends orderDeleteArgs>(args: Prisma.SelectSubset<T, orderDeleteArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Order.
   * @param {orderUpdateArgs} args - Arguments to update one Order.
   * @example
   * // Update one Order
   * const order = await prisma.order.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends orderUpdateArgs>(args: Prisma.SelectSubset<T, orderUpdateArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Orders.
   * @param {orderDeleteManyArgs} args - Arguments to filter Orders to delete.
   * @example
   * // Delete a few Orders
   * const { count } = await prisma.order.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends orderDeleteManyArgs>(args?: Prisma.SelectSubset<T, orderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {orderUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Orders
   * const order = await prisma.order.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends orderUpdateManyArgs>(args: Prisma.SelectSubset<T, orderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Orders and returns the data updated in the database.
   * @param {orderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
   * @example
   * // Update many Orders
   * const order = await prisma.order.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Orders and only return the `order_id`
   * const orderWithOrder_idOnly = await prisma.order.updateManyAndReturn({
   *   select: { order_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends orderUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, orderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Order.
   * @param {orderUpsertArgs} args - Arguments to update or create a Order.
   * @example
   * // Update or create a Order
   * const order = await prisma.order.upsert({
   *   create: {
   *     // ... data to create a Order
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Order we want to update
   *   }
   * })
   */
  upsert<T extends orderUpsertArgs>(args: Prisma.SelectSubset<T, orderUpsertArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {orderCountArgs} args - Arguments to filter Orders to count.
   * @example
   * // Count the number of Orders
   * const count = await prisma.order.count({
   *   where: {
   *     // ... the filter for the Orders we want to count
   *   }
   * })
  **/
  count<T extends orderCountArgs>(
    args?: Prisma.Subset<T, orderCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OrderCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Order.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OrderAggregateArgs>(args: Prisma.Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

  /**
   * Group by Order.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {orderGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends orderGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: orderGroupByArgs['orderBy'] }
      : { orderBy?: orderGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, orderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the order model
 */
readonly fields: orderFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for order.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__orderClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  customer<T extends Prisma.order$customerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.order$customerArgs<ExtArgs>>): Prisma.Prisma__customerClient<runtime.Types.Result.GetResult<Prisma.$customerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  employee<T extends Prisma.employeeDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.employeeDefaultArgs<ExtArgs>>): Prisma.Prisma__employeeClient<runtime.Types.Result.GetResult<Prisma.$employeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  order_discount<T extends Prisma.order$order_discountArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.order$order_discountArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  order_product<T extends Prisma.order$order_productArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.order$order_productArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  payment<T extends Prisma.order$paymentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.order$paymentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$paymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the order model
 */
export interface orderFieldRefs {
  readonly order_id: Prisma.FieldRef<"order", 'Int'>
  readonly customer_id: Prisma.FieldRef<"order", 'Int'>
  readonly employee_id: Prisma.FieldRef<"order", 'Int'>
  readonly order_time: Prisma.FieldRef<"order", 'DateTime'>
  readonly total_amount: Prisma.FieldRef<"order", 'Int'>
  readonly final_amount: Prisma.FieldRef<"order", 'Int'>
  readonly status: Prisma.FieldRef<"order", 'order_status_enum'>
  readonly customize_note: Prisma.FieldRef<"order", 'String'>
  readonly created_at: Prisma.FieldRef<"order", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"order", 'DateTime'>
}
    

// Custom InputTypes
/**
 * order findUnique
 */
export type orderFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * Filter, which order to fetch.
   */
  where: Prisma.orderWhereUniqueInput
}

/**
 * order findUniqueOrThrow
 */
export type orderFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * Filter, which order to fetch.
   */
  where: Prisma.orderWhereUniqueInput
}

/**
 * order findFirst
 */
export type orderFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * Filter, which order to fetch.
   */
  where?: Prisma.orderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of orders to fetch.
   */
  orderBy?: Prisma.orderOrderByWithRelationInput | Prisma.orderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for orders.
   */
  cursor?: Prisma.orderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of orders.
   */
  distinct?: Prisma.OrderScalarFieldEnum | Prisma.OrderScalarFieldEnum[]
}

/**
 * order findFirstOrThrow
 */
export type orderFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * Filter, which order to fetch.
   */
  where?: Prisma.orderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of orders to fetch.
   */
  orderBy?: Prisma.orderOrderByWithRelationInput | Prisma.orderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for orders.
   */
  cursor?: Prisma.orderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of orders.
   */
  distinct?: Prisma.OrderScalarFieldEnum | Prisma.OrderScalarFieldEnum[]
}

/**
 * order findMany
 */
export type orderFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * Filter, which orders to fetch.
   */
  where?: Prisma.orderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of orders to fetch.
   */
  orderBy?: Prisma.orderOrderByWithRelationInput | Prisma.orderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing orders.
   */
  cursor?: Prisma.orderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` orders.
   */
  skip?: number
  distinct?: Prisma.OrderScalarFieldEnum | Prisma.OrderScalarFieldEnum[]
}

/**
 * order create
 */
export type orderCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * The data needed to create a order.
   */
  data: Prisma.XOR<Prisma.orderCreateInput, Prisma.orderUncheckedCreateInput>
}

/**
 * order createMany
 */
export type orderCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many orders.
   */
  data: Prisma.orderCreateManyInput | Prisma.orderCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * order createManyAndReturn
 */
export type orderCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * The data used to create many orders.
   */
  data: Prisma.orderCreateManyInput | Prisma.orderCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * order update
 */
export type orderUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * The data needed to update a order.
   */
  data: Prisma.XOR<Prisma.orderUpdateInput, Prisma.orderUncheckedUpdateInput>
  /**
   * Choose, which order to update.
   */
  where: Prisma.orderWhereUniqueInput
}

/**
 * order updateMany
 */
export type orderUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update orders.
   */
  data: Prisma.XOR<Prisma.orderUpdateManyMutationInput, Prisma.orderUncheckedUpdateManyInput>
  /**
   * Filter which orders to update
   */
  where?: Prisma.orderWhereInput
  /**
   * Limit how many orders to update.
   */
  limit?: number
}

/**
 * order updateManyAndReturn
 */
export type orderUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * The data used to update orders.
   */
  data: Prisma.XOR<Prisma.orderUpdateManyMutationInput, Prisma.orderUncheckedUpdateManyInput>
  /**
   * Filter which orders to update
   */
  where?: Prisma.orderWhereInput
  /**
   * Limit how many orders to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * order upsert
 */
export type orderUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * The filter to search for the order to update in case it exists.
   */
  where: Prisma.orderWhereUniqueInput
  /**
   * In case the order found by the `where` argument doesn't exist, create a new order with this data.
   */
  create: Prisma.XOR<Prisma.orderCreateInput, Prisma.orderUncheckedCreateInput>
  /**
   * In case the order was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.orderUpdateInput, Prisma.orderUncheckedUpdateInput>
}

/**
 * order delete
 */
export type orderDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
  /**
   * Filter which order to delete.
   */
  where: Prisma.orderWhereUniqueInput
}

/**
 * order deleteMany
 */
export type orderDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which orders to delete
   */
  where?: Prisma.orderWhereInput
  /**
   * Limit how many orders to delete.
   */
  limit?: number
}

/**
 * order.customer
 */
export type order$customerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the customer
   */
  select?: Prisma.customerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the customer
   */
  omit?: Prisma.customerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.customerInclude<ExtArgs> | null
  where?: Prisma.customerWhereInput
}

/**
 * order.order_discount
 */
export type order$order_discountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  where?: Prisma.order_discountWhereInput
  orderBy?: Prisma.order_discountOrderByWithRelationInput | Prisma.order_discountOrderByWithRelationInput[]
  cursor?: Prisma.order_discountWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Order_discountScalarFieldEnum | Prisma.Order_discountScalarFieldEnum[]
}

/**
 * order.order_product
 */
export type order$order_productArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  where?: Prisma.order_productWhereInput
  orderBy?: Prisma.order_productOrderByWithRelationInput | Prisma.order_productOrderByWithRelationInput[]
  cursor?: Prisma.order_productWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Order_productScalarFieldEnum | Prisma.Order_productScalarFieldEnum[]
}

/**
 * order.payment
 */
export type order$paymentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the payment
   */
  select?: Prisma.paymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the payment
   */
  omit?: Prisma.paymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.paymentInclude<ExtArgs> | null
  where?: Prisma.paymentWhereInput
  orderBy?: Prisma.paymentOrderByWithRelationInput | Prisma.paymentOrderByWithRelationInput[]
  cursor?: Prisma.paymentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PaymentScalarFieldEnum | Prisma.PaymentScalarFieldEnum[]
}

/**
 * order without action
 */
export type orderDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order
   */
  select?: Prisma.orderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order
   */
  omit?: Prisma.orderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.orderInclude<ExtArgs> | null
}
