
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `discount` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model discount
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type discountModel = runtime.Types.Result.DefaultSelection<Prisma.$discountPayload>

export type AggregateDiscount = {
  _count: DiscountCountAggregateOutputType | null
  _avg: DiscountAvgAggregateOutputType | null
  _sum: DiscountSumAggregateOutputType | null
  _min: DiscountMinAggregateOutputType | null
  _max: DiscountMaxAggregateOutputType | null
}

export type DiscountAvgAggregateOutputType = {
  discount_id: number | null
  discount_value: runtime.Decimal | null
  min_required_order_value: number | null
  max_discount_amount: number | null
  min_required_product: number | null
  current_uses: number | null
  max_uses: number | null
  max_uses_per_customer: number | null
}

export type DiscountSumAggregateOutputType = {
  discount_id: number | null
  discount_value: runtime.Decimal | null
  min_required_order_value: number | null
  max_discount_amount: number | null
  min_required_product: number | null
  current_uses: number | null
  max_uses: number | null
  max_uses_per_customer: number | null
}

export type DiscountMinAggregateOutputType = {
  discount_id: number | null
  name: string | null
  description: string | null
  coupon_code: string | null
  discount_value: runtime.Decimal | null
  min_required_order_value: number | null
  max_discount_amount: number | null
  min_required_product: number | null
  valid_from: Date | null
  valid_until: Date | null
  current_uses: number | null
  max_uses: number | null
  max_uses_per_customer: number | null
  is_active: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type DiscountMaxAggregateOutputType = {
  discount_id: number | null
  name: string | null
  description: string | null
  coupon_code: string | null
  discount_value: runtime.Decimal | null
  min_required_order_value: number | null
  max_discount_amount: number | null
  min_required_product: number | null
  valid_from: Date | null
  valid_until: Date | null
  current_uses: number | null
  max_uses: number | null
  max_uses_per_customer: number | null
  is_active: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type DiscountCountAggregateOutputType = {
  discount_id: number
  name: number
  description: number
  coupon_code: number
  discount_value: number
  min_required_order_value: number
  max_discount_amount: number
  min_required_product: number
  valid_from: number
  valid_until: number
  current_uses: number
  max_uses: number
  max_uses_per_customer: number
  is_active: number
  created_at: number
  updated_at: number
  _all: number
}


export type DiscountAvgAggregateInputType = {
  discount_id?: true
  discount_value?: true
  min_required_order_value?: true
  max_discount_amount?: true
  min_required_product?: true
  current_uses?: true
  max_uses?: true
  max_uses_per_customer?: true
}

export type DiscountSumAggregateInputType = {
  discount_id?: true
  discount_value?: true
  min_required_order_value?: true
  max_discount_amount?: true
  min_required_product?: true
  current_uses?: true
  max_uses?: true
  max_uses_per_customer?: true
}

export type DiscountMinAggregateInputType = {
  discount_id?: true
  name?: true
  description?: true
  coupon_code?: true
  discount_value?: true
  min_required_order_value?: true
  max_discount_amount?: true
  min_required_product?: true
  valid_from?: true
  valid_until?: true
  current_uses?: true
  max_uses?: true
  max_uses_per_customer?: true
  is_active?: true
  created_at?: true
  updated_at?: true
}

export type DiscountMaxAggregateInputType = {
  discount_id?: true
  name?: true
  description?: true
  coupon_code?: true
  discount_value?: true
  min_required_order_value?: true
  max_discount_amount?: true
  min_required_product?: true
  valid_from?: true
  valid_until?: true
  current_uses?: true
  max_uses?: true
  max_uses_per_customer?: true
  is_active?: true
  created_at?: true
  updated_at?: true
}

export type DiscountCountAggregateInputType = {
  discount_id?: true
  name?: true
  description?: true
  coupon_code?: true
  discount_value?: true
  min_required_order_value?: true
  max_discount_amount?: true
  min_required_product?: true
  valid_from?: true
  valid_until?: true
  current_uses?: true
  max_uses?: true
  max_uses_per_customer?: true
  is_active?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type DiscountAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which discount to aggregate.
   */
  where?: Prisma.discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of discounts to fetch.
   */
  orderBy?: Prisma.discountOrderByWithRelationInput | Prisma.discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` discounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned discounts
  **/
  _count?: true | DiscountCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: DiscountAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: DiscountSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: DiscountMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: DiscountMaxAggregateInputType
}

export type GetDiscountAggregateType<T extends DiscountAggregateArgs> = {
      [P in keyof T & keyof AggregateDiscount]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateDiscount[P]>
    : Prisma.GetScalarType<T[P], AggregateDiscount[P]>
}




export type discountGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.discountWhereInput
  orderBy?: Prisma.discountOrderByWithAggregationInput | Prisma.discountOrderByWithAggregationInput[]
  by: Prisma.DiscountScalarFieldEnum[] | Prisma.DiscountScalarFieldEnum
  having?: Prisma.discountScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: DiscountCountAggregateInputType | true
  _avg?: DiscountAvgAggregateInputType
  _sum?: DiscountSumAggregateInputType
  _min?: DiscountMinAggregateInputType
  _max?: DiscountMaxAggregateInputType
}

export type DiscountGroupByOutputType = {
  discount_id: number
  name: string
  description: string | null
  coupon_code: string
  discount_value: runtime.Decimal
  min_required_order_value: number
  max_discount_amount: number
  min_required_product: number | null
  valid_from: Date | null
  valid_until: Date
  current_uses: number | null
  max_uses: number | null
  max_uses_per_customer: number | null
  is_active: boolean
  created_at: Date | null
  updated_at: Date | null
  _count: DiscountCountAggregateOutputType | null
  _avg: DiscountAvgAggregateOutputType | null
  _sum: DiscountSumAggregateOutputType | null
  _min: DiscountMinAggregateOutputType | null
  _max: DiscountMaxAggregateOutputType | null
}

type GetDiscountGroupByPayload<T extends discountGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<DiscountGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof DiscountGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], DiscountGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], DiscountGroupByOutputType[P]>
      }
    >
  > 



export type discountWhereInput = {
  AND?: Prisma.discountWhereInput | Prisma.discountWhereInput[]
  OR?: Prisma.discountWhereInput[]
  NOT?: Prisma.discountWhereInput | Prisma.discountWhereInput[]
  discount_id?: Prisma.IntFilter<"discount"> | number
  name?: Prisma.StringFilter<"discount"> | string
  description?: Prisma.StringNullableFilter<"discount"> | string | null
  coupon_code?: Prisma.StringFilter<"discount"> | string
  discount_value?: Prisma.DecimalFilter<"discount"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFilter<"discount"> | number
  max_discount_amount?: Prisma.IntFilter<"discount"> | number
  min_required_product?: Prisma.IntNullableFilter<"discount"> | number | null
  valid_from?: Prisma.DateTimeNullableFilter<"discount"> | Date | string | null
  valid_until?: Prisma.DateTimeFilter<"discount"> | Date | string
  current_uses?: Prisma.IntNullableFilter<"discount"> | number | null
  max_uses?: Prisma.IntNullableFilter<"discount"> | number | null
  max_uses_per_customer?: Prisma.IntNullableFilter<"discount"> | number | null
  is_active?: Prisma.BoolFilter<"discount"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"discount"> | Date | string | null
  order_discount?: Prisma.Order_discountListRelationFilter
}

export type discountOrderByWithRelationInput = {
  discount_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  coupon_code?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrderInput | Prisma.SortOrder
  valid_from?: Prisma.SortOrderInput | Prisma.SortOrder
  valid_until?: Prisma.SortOrder
  current_uses?: Prisma.SortOrderInput | Prisma.SortOrder
  max_uses?: Prisma.SortOrderInput | Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrderInput | Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  order_discount?: Prisma.order_discountOrderByRelationAggregateInput
}

export type discountWhereUniqueInput = Prisma.AtLeast<{
  discount_id?: number
  name?: string
  coupon_code?: string
  AND?: Prisma.discountWhereInput | Prisma.discountWhereInput[]
  OR?: Prisma.discountWhereInput[]
  NOT?: Prisma.discountWhereInput | Prisma.discountWhereInput[]
  description?: Prisma.StringNullableFilter<"discount"> | string | null
  discount_value?: Prisma.DecimalFilter<"discount"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFilter<"discount"> | number
  max_discount_amount?: Prisma.IntFilter<"discount"> | number
  min_required_product?: Prisma.IntNullableFilter<"discount"> | number | null
  valid_from?: Prisma.DateTimeNullableFilter<"discount"> | Date | string | null
  valid_until?: Prisma.DateTimeFilter<"discount"> | Date | string
  current_uses?: Prisma.IntNullableFilter<"discount"> | number | null
  max_uses?: Prisma.IntNullableFilter<"discount"> | number | null
  max_uses_per_customer?: Prisma.IntNullableFilter<"discount"> | number | null
  is_active?: Prisma.BoolFilter<"discount"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"discount"> | Date | string | null
  order_discount?: Prisma.Order_discountListRelationFilter
}, "discount_id" | "name" | "coupon_code">

export type discountOrderByWithAggregationInput = {
  discount_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  coupon_code?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrderInput | Prisma.SortOrder
  valid_from?: Prisma.SortOrderInput | Prisma.SortOrder
  valid_until?: Prisma.SortOrder
  current_uses?: Prisma.SortOrderInput | Prisma.SortOrder
  max_uses?: Prisma.SortOrderInput | Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrderInput | Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.discountCountOrderByAggregateInput
  _avg?: Prisma.discountAvgOrderByAggregateInput
  _max?: Prisma.discountMaxOrderByAggregateInput
  _min?: Prisma.discountMinOrderByAggregateInput
  _sum?: Prisma.discountSumOrderByAggregateInput
}

export type discountScalarWhereWithAggregatesInput = {
  AND?: Prisma.discountScalarWhereWithAggregatesInput | Prisma.discountScalarWhereWithAggregatesInput[]
  OR?: Prisma.discountScalarWhereWithAggregatesInput[]
  NOT?: Prisma.discountScalarWhereWithAggregatesInput | Prisma.discountScalarWhereWithAggregatesInput[]
  discount_id?: Prisma.IntWithAggregatesFilter<"discount"> | number
  name?: Prisma.StringWithAggregatesFilter<"discount"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"discount"> | string | null
  coupon_code?: Prisma.StringWithAggregatesFilter<"discount"> | string
  discount_value?: Prisma.DecimalWithAggregatesFilter<"discount"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntWithAggregatesFilter<"discount"> | number
  max_discount_amount?: Prisma.IntWithAggregatesFilter<"discount"> | number
  min_required_product?: Prisma.IntNullableWithAggregatesFilter<"discount"> | number | null
  valid_from?: Prisma.DateTimeNullableWithAggregatesFilter<"discount"> | Date | string | null
  valid_until?: Prisma.DateTimeWithAggregatesFilter<"discount"> | Date | string
  current_uses?: Prisma.IntNullableWithAggregatesFilter<"discount"> | number | null
  max_uses?: Prisma.IntNullableWithAggregatesFilter<"discount"> | number | null
  max_uses_per_customer?: Prisma.IntNullableWithAggregatesFilter<"discount"> | number | null
  is_active?: Prisma.BoolWithAggregatesFilter<"discount"> | boolean
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"discount"> | Date | string | null
}

export type discountCreateInput = {
  name: string
  description?: string | null
  coupon_code: string
  discount_value: runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value: number
  max_discount_amount: number
  min_required_product?: number | null
  valid_from?: Date | string | null
  valid_until: Date | string
  current_uses?: number | null
  max_uses?: number | null
  max_uses_per_customer?: number | null
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountCreateNestedManyWithoutDiscountInput
}

export type discountUncheckedCreateInput = {
  discount_id?: number
  name: string
  description?: string | null
  coupon_code: string
  discount_value: runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value: number
  max_discount_amount: number
  min_required_product?: number | null
  valid_from?: Date | string | null
  valid_until: Date | string
  current_uses?: number | null
  max_uses?: number | null
  max_uses_per_customer?: number | null
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_discount?: Prisma.order_discountUncheckedCreateNestedManyWithoutDiscountInput
}

export type discountUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  coupon_code?: Prisma.StringFieldUpdateOperationsInput | string
  discount_value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFieldUpdateOperationsInput | number
  max_discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  min_required_product?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  valid_from?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  valid_until?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  current_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses_per_customer?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUpdateManyWithoutDiscountNestedInput
}

export type discountUncheckedUpdateInput = {
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  coupon_code?: Prisma.StringFieldUpdateOperationsInput | string
  discount_value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFieldUpdateOperationsInput | number
  max_discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  min_required_product?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  valid_from?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  valid_until?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  current_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses_per_customer?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_discount?: Prisma.order_discountUncheckedUpdateManyWithoutDiscountNestedInput
}

export type discountCreateManyInput = {
  discount_id?: number
  name: string
  description?: string | null
  coupon_code: string
  discount_value: runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value: number
  max_discount_amount: number
  min_required_product?: number | null
  valid_from?: Date | string | null
  valid_until: Date | string
  current_uses?: number | null
  max_uses?: number | null
  max_uses_per_customer?: number | null
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type discountUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  coupon_code?: Prisma.StringFieldUpdateOperationsInput | string
  discount_value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFieldUpdateOperationsInput | number
  max_discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  min_required_product?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  valid_from?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  valid_until?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  current_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses_per_customer?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type discountUncheckedUpdateManyInput = {
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  coupon_code?: Prisma.StringFieldUpdateOperationsInput | string
  discount_value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFieldUpdateOperationsInput | number
  max_discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  min_required_product?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  valid_from?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  valid_until?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  current_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses_per_customer?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type discountCountOrderByAggregateInput = {
  discount_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  coupon_code?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrder
  valid_from?: Prisma.SortOrder
  valid_until?: Prisma.SortOrder
  current_uses?: Prisma.SortOrder
  max_uses?: Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type discountAvgOrderByAggregateInput = {
  discount_id?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrder
  current_uses?: Prisma.SortOrder
  max_uses?: Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrder
}

export type discountMaxOrderByAggregateInput = {
  discount_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  coupon_code?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrder
  valid_from?: Prisma.SortOrder
  valid_until?: Prisma.SortOrder
  current_uses?: Prisma.SortOrder
  max_uses?: Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type discountMinOrderByAggregateInput = {
  discount_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  coupon_code?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrder
  valid_from?: Prisma.SortOrder
  valid_until?: Prisma.SortOrder
  current_uses?: Prisma.SortOrder
  max_uses?: Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type discountSumOrderByAggregateInput = {
  discount_id?: Prisma.SortOrder
  discount_value?: Prisma.SortOrder
  min_required_order_value?: Prisma.SortOrder
  max_discount_amount?: Prisma.SortOrder
  min_required_product?: Prisma.SortOrder
  current_uses?: Prisma.SortOrder
  max_uses?: Prisma.SortOrder
  max_uses_per_customer?: Prisma.SortOrder
}

export type DiscountScalarRelationFilter = {
  is?: Prisma.discountWhereInput
  isNot?: Prisma.discountWhereInput
}

export type DecimalFieldUpdateOperationsInput = {
  set?: runtime.Decimal | runtime.DecimalJsLike | number | string
  increment?: runtime.Decimal | runtime.DecimalJsLike | number | string
  decrement?: runtime.Decimal | runtime.DecimalJsLike | number | string
  multiply?: runtime.Decimal | runtime.DecimalJsLike | number | string
  divide?: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type discountCreateNestedOneWithoutOrder_discountInput = {
  create?: Prisma.XOR<Prisma.discountCreateWithoutOrder_discountInput, Prisma.discountUncheckedCreateWithoutOrder_discountInput>
  connectOrCreate?: Prisma.discountCreateOrConnectWithoutOrder_discountInput
  connect?: Prisma.discountWhereUniqueInput
}

export type discountUpdateOneRequiredWithoutOrder_discountNestedInput = {
  create?: Prisma.XOR<Prisma.discountCreateWithoutOrder_discountInput, Prisma.discountUncheckedCreateWithoutOrder_discountInput>
  connectOrCreate?: Prisma.discountCreateOrConnectWithoutOrder_discountInput
  upsert?: Prisma.discountUpsertWithoutOrder_discountInput
  connect?: Prisma.discountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.discountUpdateToOneWithWhereWithoutOrder_discountInput, Prisma.discountUpdateWithoutOrder_discountInput>, Prisma.discountUncheckedUpdateWithoutOrder_discountInput>
}

export type discountCreateWithoutOrder_discountInput = {
  name: string
  description?: string | null
  coupon_code: string
  discount_value: runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value: number
  max_discount_amount: number
  min_required_product?: number | null
  valid_from?: Date | string | null
  valid_until: Date | string
  current_uses?: number | null
  max_uses?: number | null
  max_uses_per_customer?: number | null
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type discountUncheckedCreateWithoutOrder_discountInput = {
  discount_id?: number
  name: string
  description?: string | null
  coupon_code: string
  discount_value: runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value: number
  max_discount_amount: number
  min_required_product?: number | null
  valid_from?: Date | string | null
  valid_until: Date | string
  current_uses?: number | null
  max_uses?: number | null
  max_uses_per_customer?: number | null
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type discountCreateOrConnectWithoutOrder_discountInput = {
  where: Prisma.discountWhereUniqueInput
  create: Prisma.XOR<Prisma.discountCreateWithoutOrder_discountInput, Prisma.discountUncheckedCreateWithoutOrder_discountInput>
}

export type discountUpsertWithoutOrder_discountInput = {
  update: Prisma.XOR<Prisma.discountUpdateWithoutOrder_discountInput, Prisma.discountUncheckedUpdateWithoutOrder_discountInput>
  create: Prisma.XOR<Prisma.discountCreateWithoutOrder_discountInput, Prisma.discountUncheckedCreateWithoutOrder_discountInput>
  where?: Prisma.discountWhereInput
}

export type discountUpdateToOneWithWhereWithoutOrder_discountInput = {
  where?: Prisma.discountWhereInput
  data: Prisma.XOR<Prisma.discountUpdateWithoutOrder_discountInput, Prisma.discountUncheckedUpdateWithoutOrder_discountInput>
}

export type discountUpdateWithoutOrder_discountInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  coupon_code?: Prisma.StringFieldUpdateOperationsInput | string
  discount_value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFieldUpdateOperationsInput | number
  max_discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  min_required_product?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  valid_from?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  valid_until?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  current_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses_per_customer?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type discountUncheckedUpdateWithoutOrder_discountInput = {
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  coupon_code?: Prisma.StringFieldUpdateOperationsInput | string
  discount_value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  min_required_order_value?: Prisma.IntFieldUpdateOperationsInput | number
  max_discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  min_required_product?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  valid_from?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  valid_until?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  current_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  max_uses_per_customer?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type DiscountCountOutputType
 */

export type DiscountCountOutputType = {
  order_discount: number
}

export type DiscountCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order_discount?: boolean | DiscountCountOutputTypeCountOrder_discountArgs
}

/**
 * DiscountCountOutputType without action
 */
export type DiscountCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DiscountCountOutputType
   */
  select?: Prisma.DiscountCountOutputTypeSelect<ExtArgs> | null
}

/**
 * DiscountCountOutputType without action
 */
export type DiscountCountOutputTypeCountOrder_discountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_discountWhereInput
}


export type discountSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  discount_id?: boolean
  name?: boolean
  description?: boolean
  coupon_code?: boolean
  discount_value?: boolean
  min_required_order_value?: boolean
  max_discount_amount?: boolean
  min_required_product?: boolean
  valid_from?: boolean
  valid_until?: boolean
  current_uses?: boolean
  max_uses?: boolean
  max_uses_per_customer?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
  order_discount?: boolean | Prisma.discount$order_discountArgs<ExtArgs>
  _count?: boolean | Prisma.DiscountCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["discount"]>

export type discountSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  discount_id?: boolean
  name?: boolean
  description?: boolean
  coupon_code?: boolean
  discount_value?: boolean
  min_required_order_value?: boolean
  max_discount_amount?: boolean
  min_required_product?: boolean
  valid_from?: boolean
  valid_until?: boolean
  current_uses?: boolean
  max_uses?: boolean
  max_uses_per_customer?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["discount"]>

export type discountSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  discount_id?: boolean
  name?: boolean
  description?: boolean
  coupon_code?: boolean
  discount_value?: boolean
  min_required_order_value?: boolean
  max_discount_amount?: boolean
  min_required_product?: boolean
  valid_from?: boolean
  valid_until?: boolean
  current_uses?: boolean
  max_uses?: boolean
  max_uses_per_customer?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["discount"]>

export type discountSelectScalar = {
  discount_id?: boolean
  name?: boolean
  description?: boolean
  coupon_code?: boolean
  discount_value?: boolean
  min_required_order_value?: boolean
  max_discount_amount?: boolean
  min_required_product?: boolean
  valid_from?: boolean
  valid_until?: boolean
  current_uses?: boolean
  max_uses?: boolean
  max_uses_per_customer?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type discountOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"discount_id" | "name" | "description" | "coupon_code" | "discount_value" | "min_required_order_value" | "max_discount_amount" | "min_required_product" | "valid_from" | "valid_until" | "current_uses" | "max_uses" | "max_uses_per_customer" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["discount"]>
export type discountInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order_discount?: boolean | Prisma.discount$order_discountArgs<ExtArgs>
  _count?: boolean | Prisma.DiscountCountOutputTypeDefaultArgs<ExtArgs>
}
export type discountIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type discountIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $discountPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "discount"
  objects: {
    order_discount: Prisma.$order_discountPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    discount_id: number
    name: string
    description: string | null
    coupon_code: string
    discount_value: runtime.Decimal
    min_required_order_value: number
    max_discount_amount: number
    min_required_product: number | null
    valid_from: Date | null
    valid_until: Date
    current_uses: number | null
    max_uses: number | null
    max_uses_per_customer: number | null
    is_active: boolean
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["discount"]>
  composites: {}
}

export type discountGetPayload<S extends boolean | null | undefined | discountDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$discountPayload, S>

export type discountCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<discountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: DiscountCountAggregateInputType | true
  }

export interface discountDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discount'], meta: { name: 'discount' } }
  /**
   * Find zero or one Discount that matches the filter.
   * @param {discountFindUniqueArgs} args - Arguments to find a Discount
   * @example
   * // Get one Discount
   * const discount = await prisma.discount.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends discountFindUniqueArgs>(args: Prisma.SelectSubset<T, discountFindUniqueArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Discount that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {discountFindUniqueOrThrowArgs} args - Arguments to find a Discount
   * @example
   * // Get one Discount
   * const discount = await prisma.discount.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends discountFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, discountFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Discount that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {discountFindFirstArgs} args - Arguments to find a Discount
   * @example
   * // Get one Discount
   * const discount = await prisma.discount.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends discountFindFirstArgs>(args?: Prisma.SelectSubset<T, discountFindFirstArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Discount that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {discountFindFirstOrThrowArgs} args - Arguments to find a Discount
   * @example
   * // Get one Discount
   * const discount = await prisma.discount.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends discountFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, discountFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Discounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {discountFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Discounts
   * const discounts = await prisma.discount.findMany()
   * 
   * // Get first 10 Discounts
   * const discounts = await prisma.discount.findMany({ take: 10 })
   * 
   * // Only select the `discount_id`
   * const discountWithDiscount_idOnly = await prisma.discount.findMany({ select: { discount_id: true } })
   * 
   */
  findMany<T extends discountFindManyArgs>(args?: Prisma.SelectSubset<T, discountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Discount.
   * @param {discountCreateArgs} args - Arguments to create a Discount.
   * @example
   * // Create one Discount
   * const Discount = await prisma.discount.create({
   *   data: {
   *     // ... data to create a Discount
   *   }
   * })
   * 
   */
  create<T extends discountCreateArgs>(args: Prisma.SelectSubset<T, discountCreateArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Discounts.
   * @param {discountCreateManyArgs} args - Arguments to create many Discounts.
   * @example
   * // Create many Discounts
   * const discount = await prisma.discount.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends discountCreateManyArgs>(args?: Prisma.SelectSubset<T, discountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Discounts and returns the data saved in the database.
   * @param {discountCreateManyAndReturnArgs} args - Arguments to create many Discounts.
   * @example
   * // Create many Discounts
   * const discount = await prisma.discount.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Discounts and only return the `discount_id`
   * const discountWithDiscount_idOnly = await prisma.discount.createManyAndReturn({
   *   select: { discount_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends discountCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, discountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Discount.
   * @param {discountDeleteArgs} args - Arguments to delete one Discount.
   * @example
   * // Delete one Discount
   * const Discount = await prisma.discount.delete({
   *   where: {
   *     // ... filter to delete one Discount
   *   }
   * })
   * 
   */
  delete<T extends discountDeleteArgs>(args: Prisma.SelectSubset<T, discountDeleteArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Discount.
   * @param {discountUpdateArgs} args - Arguments to update one Discount.
   * @example
   * // Update one Discount
   * const discount = await prisma.discount.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends discountUpdateArgs>(args: Prisma.SelectSubset<T, discountUpdateArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Discounts.
   * @param {discountDeleteManyArgs} args - Arguments to filter Discounts to delete.
   * @example
   * // Delete a few Discounts
   * const { count } = await prisma.discount.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends discountDeleteManyArgs>(args?: Prisma.SelectSubset<T, discountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Discounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {discountUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Discounts
   * const discount = await prisma.discount.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends discountUpdateManyArgs>(args: Prisma.SelectSubset<T, discountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Discounts and returns the data updated in the database.
   * @param {discountUpdateManyAndReturnArgs} args - Arguments to update many Discounts.
   * @example
   * // Update many Discounts
   * const discount = await prisma.discount.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Discounts and only return the `discount_id`
   * const discountWithDiscount_idOnly = await prisma.discount.updateManyAndReturn({
   *   select: { discount_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends discountUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, discountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Discount.
   * @param {discountUpsertArgs} args - Arguments to update or create a Discount.
   * @example
   * // Update or create a Discount
   * const discount = await prisma.discount.upsert({
   *   create: {
   *     // ... data to create a Discount
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Discount we want to update
   *   }
   * })
   */
  upsert<T extends discountUpsertArgs>(args: Prisma.SelectSubset<T, discountUpsertArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Discounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {discountCountArgs} args - Arguments to filter Discounts to count.
   * @example
   * // Count the number of Discounts
   * const count = await prisma.discount.count({
   *   where: {
   *     // ... the filter for the Discounts we want to count
   *   }
   * })
  **/
  count<T extends discountCountArgs>(
    args?: Prisma.Subset<T, discountCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], DiscountCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Discount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DiscountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends DiscountAggregateArgs>(args: Prisma.Subset<T, DiscountAggregateArgs>): Prisma.PrismaPromise<GetDiscountAggregateType<T>>

  /**
   * Group by Discount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {discountGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends discountGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: discountGroupByArgs['orderBy'] }
      : { orderBy?: discountGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, discountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the discount model
 */
readonly fields: discountFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for discount.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__discountClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  order_discount<T extends Prisma.discount$order_discountArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.discount$order_discountArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the discount model
 */
export interface discountFieldRefs {
  readonly discount_id: Prisma.FieldRef<"discount", 'Int'>
  readonly name: Prisma.FieldRef<"discount", 'String'>
  readonly description: Prisma.FieldRef<"discount", 'String'>
  readonly coupon_code: Prisma.FieldRef<"discount", 'String'>
  readonly discount_value: Prisma.FieldRef<"discount", 'Decimal'>
  readonly min_required_order_value: Prisma.FieldRef<"discount", 'Int'>
  readonly max_discount_amount: Prisma.FieldRef<"discount", 'Int'>
  readonly min_required_product: Prisma.FieldRef<"discount", 'Int'>
  readonly valid_from: Prisma.FieldRef<"discount", 'DateTime'>
  readonly valid_until: Prisma.FieldRef<"discount", 'DateTime'>
  readonly current_uses: Prisma.FieldRef<"discount", 'Int'>
  readonly max_uses: Prisma.FieldRef<"discount", 'Int'>
  readonly max_uses_per_customer: Prisma.FieldRef<"discount", 'Int'>
  readonly is_active: Prisma.FieldRef<"discount", 'Boolean'>
  readonly created_at: Prisma.FieldRef<"discount", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"discount", 'DateTime'>
}
    

// Custom InputTypes
/**
 * discount findUnique
 */
export type discountFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * Filter, which discount to fetch.
   */
  where: Prisma.discountWhereUniqueInput
}

/**
 * discount findUniqueOrThrow
 */
export type discountFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * Filter, which discount to fetch.
   */
  where: Prisma.discountWhereUniqueInput
}

/**
 * discount findFirst
 */
export type discountFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * Filter, which discount to fetch.
   */
  where?: Prisma.discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of discounts to fetch.
   */
  orderBy?: Prisma.discountOrderByWithRelationInput | Prisma.discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for discounts.
   */
  cursor?: Prisma.discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` discounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of discounts.
   */
  distinct?: Prisma.DiscountScalarFieldEnum | Prisma.DiscountScalarFieldEnum[]
}

/**
 * discount findFirstOrThrow
 */
export type discountFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * Filter, which discount to fetch.
   */
  where?: Prisma.discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of discounts to fetch.
   */
  orderBy?: Prisma.discountOrderByWithRelationInput | Prisma.discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for discounts.
   */
  cursor?: Prisma.discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` discounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of discounts.
   */
  distinct?: Prisma.DiscountScalarFieldEnum | Prisma.DiscountScalarFieldEnum[]
}

/**
 * discount findMany
 */
export type discountFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * Filter, which discounts to fetch.
   */
  where?: Prisma.discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of discounts to fetch.
   */
  orderBy?: Prisma.discountOrderByWithRelationInput | Prisma.discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing discounts.
   */
  cursor?: Prisma.discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` discounts.
   */
  skip?: number
  distinct?: Prisma.DiscountScalarFieldEnum | Prisma.DiscountScalarFieldEnum[]
}

/**
 * discount create
 */
export type discountCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * The data needed to create a discount.
   */
  data: Prisma.XOR<Prisma.discountCreateInput, Prisma.discountUncheckedCreateInput>
}

/**
 * discount createMany
 */
export type discountCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many discounts.
   */
  data: Prisma.discountCreateManyInput | Prisma.discountCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * discount createManyAndReturn
 */
export type discountCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * The data used to create many discounts.
   */
  data: Prisma.discountCreateManyInput | Prisma.discountCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * discount update
 */
export type discountUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * The data needed to update a discount.
   */
  data: Prisma.XOR<Prisma.discountUpdateInput, Prisma.discountUncheckedUpdateInput>
  /**
   * Choose, which discount to update.
   */
  where: Prisma.discountWhereUniqueInput
}

/**
 * discount updateMany
 */
export type discountUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update discounts.
   */
  data: Prisma.XOR<Prisma.discountUpdateManyMutationInput, Prisma.discountUncheckedUpdateManyInput>
  /**
   * Filter which discounts to update
   */
  where?: Prisma.discountWhereInput
  /**
   * Limit how many discounts to update.
   */
  limit?: number
}

/**
 * discount updateManyAndReturn
 */
export type discountUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * The data used to update discounts.
   */
  data: Prisma.XOR<Prisma.discountUpdateManyMutationInput, Prisma.discountUncheckedUpdateManyInput>
  /**
   * Filter which discounts to update
   */
  where?: Prisma.discountWhereInput
  /**
   * Limit how many discounts to update.
   */
  limit?: number
}

/**
 * discount upsert
 */
export type discountUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * The filter to search for the discount to update in case it exists.
   */
  where: Prisma.discountWhereUniqueInput
  /**
   * In case the discount found by the `where` argument doesn't exist, create a new discount with this data.
   */
  create: Prisma.XOR<Prisma.discountCreateInput, Prisma.discountUncheckedCreateInput>
  /**
   * In case the discount was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.discountUpdateInput, Prisma.discountUncheckedUpdateInput>
}

/**
 * discount delete
 */
export type discountDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
  /**
   * Filter which discount to delete.
   */
  where: Prisma.discountWhereUniqueInput
}

/**
 * discount deleteMany
 */
export type discountDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which discounts to delete
   */
  where?: Prisma.discountWhereInput
  /**
   * Limit how many discounts to delete.
   */
  limit?: number
}

/**
 * discount.order_discount
 */
export type discount$order_discountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  where?: Prisma.order_discountWhereInput
  orderBy?: Prisma.order_discountOrderByWithRelationInput | Prisma.order_discountOrderByWithRelationInput[]
  cursor?: Prisma.order_discountWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Order_discountScalarFieldEnum | Prisma.Order_discountScalarFieldEnum[]
}

/**
 * discount without action
 */
export type discountDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the discount
   */
  select?: Prisma.discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the discount
   */
  omit?: Prisma.discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.discountInclude<ExtArgs> | null
}
