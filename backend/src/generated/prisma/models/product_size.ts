
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `product_size` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model product_size
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type product_sizeModel = runtime.Types.Result.DefaultSelection<Prisma.$product_sizePayload>

export type AggregateProduct_size = {
  _count: Product_sizeCountAggregateOutputType | null
  _avg: Product_sizeAvgAggregateOutputType | null
  _sum: Product_sizeSumAggregateOutputType | null
  _min: Product_sizeMinAggregateOutputType | null
  _max: Product_sizeMaxAggregateOutputType | null
}

export type Product_sizeAvgAggregateOutputType = {
  size_id: number | null
  quantity: number | null
}

export type Product_sizeSumAggregateOutputType = {
  size_id: number | null
  quantity: number | null
}

export type Product_sizeMinAggregateOutputType = {
  size_id: number | null
  name: string | null
  unit: string | null
  quantity: number | null
  description: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Product_sizeMaxAggregateOutputType = {
  size_id: number | null
  name: string | null
  unit: string | null
  quantity: number | null
  description: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Product_sizeCountAggregateOutputType = {
  size_id: number
  name: number
  unit: number
  quantity: number
  description: number
  created_at: number
  updated_at: number
  _all: number
}


export type Product_sizeAvgAggregateInputType = {
  size_id?: true
  quantity?: true
}

export type Product_sizeSumAggregateInputType = {
  size_id?: true
  quantity?: true
}

export type Product_sizeMinAggregateInputType = {
  size_id?: true
  name?: true
  unit?: true
  quantity?: true
  description?: true
  created_at?: true
  updated_at?: true
}

export type Product_sizeMaxAggregateInputType = {
  size_id?: true
  name?: true
  unit?: true
  quantity?: true
  description?: true
  created_at?: true
  updated_at?: true
}

export type Product_sizeCountAggregateInputType = {
  size_id?: true
  name?: true
  unit?: true
  quantity?: true
  description?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Product_sizeAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which product_size to aggregate.
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_sizes to fetch.
   */
  orderBy?: Prisma.product_sizeOrderByWithRelationInput | Prisma.product_sizeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.product_sizeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_sizes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_sizes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned product_sizes
  **/
  _count?: true | Product_sizeCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Product_sizeAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Product_sizeSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Product_sizeMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Product_sizeMaxAggregateInputType
}

export type GetProduct_sizeAggregateType<T extends Product_sizeAggregateArgs> = {
      [P in keyof T & keyof AggregateProduct_size]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProduct_size[P]>
    : Prisma.GetScalarType<T[P], AggregateProduct_size[P]>
}




export type product_sizeGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.product_sizeWhereInput
  orderBy?: Prisma.product_sizeOrderByWithAggregationInput | Prisma.product_sizeOrderByWithAggregationInput[]
  by: Prisma.Product_sizeScalarFieldEnum[] | Prisma.Product_sizeScalarFieldEnum
  having?: Prisma.product_sizeScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Product_sizeCountAggregateInputType | true
  _avg?: Product_sizeAvgAggregateInputType
  _sum?: Product_sizeSumAggregateInputType
  _min?: Product_sizeMinAggregateInputType
  _max?: Product_sizeMaxAggregateInputType
}

export type Product_sizeGroupByOutputType = {
  size_id: number
  name: string
  unit: string
  quantity: number
  description: string | null
  created_at: Date | null
  updated_at: Date | null
  _count: Product_sizeCountAggregateOutputType | null
  _avg: Product_sizeAvgAggregateOutputType | null
  _sum: Product_sizeSumAggregateOutputType | null
  _min: Product_sizeMinAggregateOutputType | null
  _max: Product_sizeMaxAggregateOutputType | null
}

type GetProduct_sizeGroupByPayload<T extends product_sizeGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Product_sizeGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Product_sizeGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Product_sizeGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Product_sizeGroupByOutputType[P]>
      }
    >
  > 



export type product_sizeWhereInput = {
  AND?: Prisma.product_sizeWhereInput | Prisma.product_sizeWhereInput[]
  OR?: Prisma.product_sizeWhereInput[]
  NOT?: Prisma.product_sizeWhereInput | Prisma.product_sizeWhereInput[]
  size_id?: Prisma.IntFilter<"product_size"> | number
  name?: Prisma.StringFilter<"product_size"> | string
  unit?: Prisma.StringFilter<"product_size"> | string
  quantity?: Prisma.IntFilter<"product_size"> | number
  description?: Prisma.StringNullableFilter<"product_size"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"product_size"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"product_size"> | Date | string | null
  product_price?: Prisma.Product_priceListRelationFilter
}

export type product_sizeOrderByWithRelationInput = {
  size_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  unit?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  product_price?: Prisma.product_priceOrderByRelationAggregateInput
}

export type product_sizeWhereUniqueInput = Prisma.AtLeast<{
  size_id?: number
  unit_name?: Prisma.product_sizeUnitNameCompoundUniqueInput
  AND?: Prisma.product_sizeWhereInput | Prisma.product_sizeWhereInput[]
  OR?: Prisma.product_sizeWhereInput[]
  NOT?: Prisma.product_sizeWhereInput | Prisma.product_sizeWhereInput[]
  name?: Prisma.StringFilter<"product_size"> | string
  unit?: Prisma.StringFilter<"product_size"> | string
  quantity?: Prisma.IntFilter<"product_size"> | number
  description?: Prisma.StringNullableFilter<"product_size"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"product_size"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"product_size"> | Date | string | null
  product_price?: Prisma.Product_priceListRelationFilter
}, "size_id" | "unit_name">

export type product_sizeOrderByWithAggregationInput = {
  size_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  unit?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.product_sizeCountOrderByAggregateInput
  _avg?: Prisma.product_sizeAvgOrderByAggregateInput
  _max?: Prisma.product_sizeMaxOrderByAggregateInput
  _min?: Prisma.product_sizeMinOrderByAggregateInput
  _sum?: Prisma.product_sizeSumOrderByAggregateInput
}

export type product_sizeScalarWhereWithAggregatesInput = {
  AND?: Prisma.product_sizeScalarWhereWithAggregatesInput | Prisma.product_sizeScalarWhereWithAggregatesInput[]
  OR?: Prisma.product_sizeScalarWhereWithAggregatesInput[]
  NOT?: Prisma.product_sizeScalarWhereWithAggregatesInput | Prisma.product_sizeScalarWhereWithAggregatesInput[]
  size_id?: Prisma.IntWithAggregatesFilter<"product_size"> | number
  name?: Prisma.StringWithAggregatesFilter<"product_size"> | string
  unit?: Prisma.StringWithAggregatesFilter<"product_size"> | string
  quantity?: Prisma.IntWithAggregatesFilter<"product_size"> | number
  description?: Prisma.StringNullableWithAggregatesFilter<"product_size"> | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"product_size"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"product_size"> | Date | string | null
}

export type product_sizeCreateInput = {
  name: string
  unit: string
  quantity: number
  description?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  product_price?: Prisma.product_priceCreateNestedManyWithoutProduct_sizeInput
}

export type product_sizeUncheckedCreateInput = {
  size_id?: number
  name: string
  unit: string
  quantity: number
  description?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  product_price?: Prisma.product_priceUncheckedCreateNestedManyWithoutProduct_sizeInput
}

export type product_sizeUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  unit?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  product_price?: Prisma.product_priceUpdateManyWithoutProduct_sizeNestedInput
}

export type product_sizeUncheckedUpdateInput = {
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  unit?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  product_price?: Prisma.product_priceUncheckedUpdateManyWithoutProduct_sizeNestedInput
}

export type product_sizeCreateManyInput = {
  size_id?: number
  name: string
  unit: string
  quantity: number
  description?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_sizeUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  unit?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type product_sizeUncheckedUpdateManyInput = {
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  unit?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Product_sizeScalarRelationFilter = {
  is?: Prisma.product_sizeWhereInput
  isNot?: Prisma.product_sizeWhereInput
}

export type product_sizeUnitNameCompoundUniqueInput = {
  unit: string
  name: string
}

export type product_sizeCountOrderByAggregateInput = {
  size_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  unit?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  description?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type product_sizeAvgOrderByAggregateInput = {
  size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
}

export type product_sizeMaxOrderByAggregateInput = {
  size_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  unit?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  description?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type product_sizeMinOrderByAggregateInput = {
  size_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  unit?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  description?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type product_sizeSumOrderByAggregateInput = {
  size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
}

export type product_sizeCreateNestedOneWithoutProduct_priceInput = {
  create?: Prisma.XOR<Prisma.product_sizeCreateWithoutProduct_priceInput, Prisma.product_sizeUncheckedCreateWithoutProduct_priceInput>
  connectOrCreate?: Prisma.product_sizeCreateOrConnectWithoutProduct_priceInput
  connect?: Prisma.product_sizeWhereUniqueInput
}

export type product_sizeUpdateOneRequiredWithoutProduct_priceNestedInput = {
  create?: Prisma.XOR<Prisma.product_sizeCreateWithoutProduct_priceInput, Prisma.product_sizeUncheckedCreateWithoutProduct_priceInput>
  connectOrCreate?: Prisma.product_sizeCreateOrConnectWithoutProduct_priceInput
  upsert?: Prisma.product_sizeUpsertWithoutProduct_priceInput
  connect?: Prisma.product_sizeWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.product_sizeUpdateToOneWithWhereWithoutProduct_priceInput, Prisma.product_sizeUpdateWithoutProduct_priceInput>, Prisma.product_sizeUncheckedUpdateWithoutProduct_priceInput>
}

export type product_sizeCreateWithoutProduct_priceInput = {
  name: string
  unit: string
  quantity: number
  description?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_sizeUncheckedCreateWithoutProduct_priceInput = {
  size_id?: number
  name: string
  unit: string
  quantity: number
  description?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_sizeCreateOrConnectWithoutProduct_priceInput = {
  where: Prisma.product_sizeWhereUniqueInput
  create: Prisma.XOR<Prisma.product_sizeCreateWithoutProduct_priceInput, Prisma.product_sizeUncheckedCreateWithoutProduct_priceInput>
}

export type product_sizeUpsertWithoutProduct_priceInput = {
  update: Prisma.XOR<Prisma.product_sizeUpdateWithoutProduct_priceInput, Prisma.product_sizeUncheckedUpdateWithoutProduct_priceInput>
  create: Prisma.XOR<Prisma.product_sizeCreateWithoutProduct_priceInput, Prisma.product_sizeUncheckedCreateWithoutProduct_priceInput>
  where?: Prisma.product_sizeWhereInput
}

export type product_sizeUpdateToOneWithWhereWithoutProduct_priceInput = {
  where?: Prisma.product_sizeWhereInput
  data: Prisma.XOR<Prisma.product_sizeUpdateWithoutProduct_priceInput, Prisma.product_sizeUncheckedUpdateWithoutProduct_priceInput>
}

export type product_sizeUpdateWithoutProduct_priceInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  unit?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type product_sizeUncheckedUpdateWithoutProduct_priceInput = {
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  unit?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type Product_sizeCountOutputType
 */

export type Product_sizeCountOutputType = {
  product_price: number
}

export type Product_sizeCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product_price?: boolean | Product_sizeCountOutputTypeCountProduct_priceArgs
}

/**
 * Product_sizeCountOutputType without action
 */
export type Product_sizeCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Product_sizeCountOutputType
   */
  select?: Prisma.Product_sizeCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Product_sizeCountOutputType without action
 */
export type Product_sizeCountOutputTypeCountProduct_priceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.product_priceWhereInput
}


export type product_sizeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  size_id?: boolean
  name?: boolean
  unit?: boolean
  quantity?: boolean
  description?: boolean
  created_at?: boolean
  updated_at?: boolean
  product_price?: boolean | Prisma.product_size$product_priceArgs<ExtArgs>
  _count?: boolean | Prisma.Product_sizeCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["product_size"]>

export type product_sizeSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  size_id?: boolean
  name?: boolean
  unit?: boolean
  quantity?: boolean
  description?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["product_size"]>

export type product_sizeSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  size_id?: boolean
  name?: boolean
  unit?: boolean
  quantity?: boolean
  description?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["product_size"]>

export type product_sizeSelectScalar = {
  size_id?: boolean
  name?: boolean
  unit?: boolean
  quantity?: boolean
  description?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type product_sizeOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"size_id" | "name" | "unit" | "quantity" | "description" | "created_at" | "updated_at", ExtArgs["result"]["product_size"]>
export type product_sizeInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product_price?: boolean | Prisma.product_size$product_priceArgs<ExtArgs>
  _count?: boolean | Prisma.Product_sizeCountOutputTypeDefaultArgs<ExtArgs>
}
export type product_sizeIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type product_sizeIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $product_sizePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "product_size"
  objects: {
    product_price: Prisma.$product_pricePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    size_id: number
    name: string
    unit: string
    quantity: number
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["product_size"]>
  composites: {}
}

export type product_sizeGetPayload<S extends boolean | null | undefined | product_sizeDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$product_sizePayload, S>

export type product_sizeCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<product_sizeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Product_sizeCountAggregateInputType | true
  }

export interface product_sizeDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_size'], meta: { name: 'product_size' } }
  /**
   * Find zero or one Product_size that matches the filter.
   * @param {product_sizeFindUniqueArgs} args - Arguments to find a Product_size
   * @example
   * // Get one Product_size
   * const product_size = await prisma.product_size.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends product_sizeFindUniqueArgs>(args: Prisma.SelectSubset<T, product_sizeFindUniqueArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Product_size that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {product_sizeFindUniqueOrThrowArgs} args - Arguments to find a Product_size
   * @example
   * // Get one Product_size
   * const product_size = await prisma.product_size.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends product_sizeFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, product_sizeFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Product_size that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_sizeFindFirstArgs} args - Arguments to find a Product_size
   * @example
   * // Get one Product_size
   * const product_size = await prisma.product_size.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends product_sizeFindFirstArgs>(args?: Prisma.SelectSubset<T, product_sizeFindFirstArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Product_size that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_sizeFindFirstOrThrowArgs} args - Arguments to find a Product_size
   * @example
   * // Get one Product_size
   * const product_size = await prisma.product_size.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends product_sizeFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, product_sizeFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Product_sizes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_sizeFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Product_sizes
   * const product_sizes = await prisma.product_size.findMany()
   * 
   * // Get first 10 Product_sizes
   * const product_sizes = await prisma.product_size.findMany({ take: 10 })
   * 
   * // Only select the `size_id`
   * const product_sizeWithSize_idOnly = await prisma.product_size.findMany({ select: { size_id: true } })
   * 
   */
  findMany<T extends product_sizeFindManyArgs>(args?: Prisma.SelectSubset<T, product_sizeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Product_size.
   * @param {product_sizeCreateArgs} args - Arguments to create a Product_size.
   * @example
   * // Create one Product_size
   * const Product_size = await prisma.product_size.create({
   *   data: {
   *     // ... data to create a Product_size
   *   }
   * })
   * 
   */
  create<T extends product_sizeCreateArgs>(args: Prisma.SelectSubset<T, product_sizeCreateArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Product_sizes.
   * @param {product_sizeCreateManyArgs} args - Arguments to create many Product_sizes.
   * @example
   * // Create many Product_sizes
   * const product_size = await prisma.product_size.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends product_sizeCreateManyArgs>(args?: Prisma.SelectSubset<T, product_sizeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Product_sizes and returns the data saved in the database.
   * @param {product_sizeCreateManyAndReturnArgs} args - Arguments to create many Product_sizes.
   * @example
   * // Create many Product_sizes
   * const product_size = await prisma.product_size.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Product_sizes and only return the `size_id`
   * const product_sizeWithSize_idOnly = await prisma.product_size.createManyAndReturn({
   *   select: { size_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends product_sizeCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, product_sizeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Product_size.
   * @param {product_sizeDeleteArgs} args - Arguments to delete one Product_size.
   * @example
   * // Delete one Product_size
   * const Product_size = await prisma.product_size.delete({
   *   where: {
   *     // ... filter to delete one Product_size
   *   }
   * })
   * 
   */
  delete<T extends product_sizeDeleteArgs>(args: Prisma.SelectSubset<T, product_sizeDeleteArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Product_size.
   * @param {product_sizeUpdateArgs} args - Arguments to update one Product_size.
   * @example
   * // Update one Product_size
   * const product_size = await prisma.product_size.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends product_sizeUpdateArgs>(args: Prisma.SelectSubset<T, product_sizeUpdateArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Product_sizes.
   * @param {product_sizeDeleteManyArgs} args - Arguments to filter Product_sizes to delete.
   * @example
   * // Delete a few Product_sizes
   * const { count } = await prisma.product_size.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends product_sizeDeleteManyArgs>(args?: Prisma.SelectSubset<T, product_sizeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Product_sizes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_sizeUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Product_sizes
   * const product_size = await prisma.product_size.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends product_sizeUpdateManyArgs>(args: Prisma.SelectSubset<T, product_sizeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Product_sizes and returns the data updated in the database.
   * @param {product_sizeUpdateManyAndReturnArgs} args - Arguments to update many Product_sizes.
   * @example
   * // Update many Product_sizes
   * const product_size = await prisma.product_size.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Product_sizes and only return the `size_id`
   * const product_sizeWithSize_idOnly = await prisma.product_size.updateManyAndReturn({
   *   select: { size_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends product_sizeUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, product_sizeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Product_size.
   * @param {product_sizeUpsertArgs} args - Arguments to update or create a Product_size.
   * @example
   * // Update or create a Product_size
   * const product_size = await prisma.product_size.upsert({
   *   create: {
   *     // ... data to create a Product_size
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Product_size we want to update
   *   }
   * })
   */
  upsert<T extends product_sizeUpsertArgs>(args: Prisma.SelectSubset<T, product_sizeUpsertArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Product_sizes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_sizeCountArgs} args - Arguments to filter Product_sizes to count.
   * @example
   * // Count the number of Product_sizes
   * const count = await prisma.product_size.count({
   *   where: {
   *     // ... the filter for the Product_sizes we want to count
   *   }
   * })
  **/
  count<T extends product_sizeCountArgs>(
    args?: Prisma.Subset<T, product_sizeCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Product_sizeCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Product_size.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Product_sizeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Product_sizeAggregateArgs>(args: Prisma.Subset<T, Product_sizeAggregateArgs>): Prisma.PrismaPromise<GetProduct_sizeAggregateType<T>>

  /**
   * Group by Product_size.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_sizeGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends product_sizeGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: product_sizeGroupByArgs['orderBy'] }
      : { orderBy?: product_sizeGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, product_sizeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_sizeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the product_size model
 */
readonly fields: product_sizeFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for product_size.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__product_sizeClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  product_price<T extends Prisma.product_size$product_priceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.product_size$product_priceArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the product_size model
 */
export interface product_sizeFieldRefs {
  readonly size_id: Prisma.FieldRef<"product_size", 'Int'>
  readonly name: Prisma.FieldRef<"product_size", 'String'>
  readonly unit: Prisma.FieldRef<"product_size", 'String'>
  readonly quantity: Prisma.FieldRef<"product_size", 'Int'>
  readonly description: Prisma.FieldRef<"product_size", 'String'>
  readonly created_at: Prisma.FieldRef<"product_size", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"product_size", 'DateTime'>
}
    

// Custom InputTypes
/**
 * product_size findUnique
 */
export type product_sizeFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * Filter, which product_size to fetch.
   */
  where: Prisma.product_sizeWhereUniqueInput
}

/**
 * product_size findUniqueOrThrow
 */
export type product_sizeFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * Filter, which product_size to fetch.
   */
  where: Prisma.product_sizeWhereUniqueInput
}

/**
 * product_size findFirst
 */
export type product_sizeFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * Filter, which product_size to fetch.
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_sizes to fetch.
   */
  orderBy?: Prisma.product_sizeOrderByWithRelationInput | Prisma.product_sizeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for product_sizes.
   */
  cursor?: Prisma.product_sizeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_sizes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_sizes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of product_sizes.
   */
  distinct?: Prisma.Product_sizeScalarFieldEnum | Prisma.Product_sizeScalarFieldEnum[]
}

/**
 * product_size findFirstOrThrow
 */
export type product_sizeFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * Filter, which product_size to fetch.
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_sizes to fetch.
   */
  orderBy?: Prisma.product_sizeOrderByWithRelationInput | Prisma.product_sizeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for product_sizes.
   */
  cursor?: Prisma.product_sizeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_sizes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_sizes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of product_sizes.
   */
  distinct?: Prisma.Product_sizeScalarFieldEnum | Prisma.Product_sizeScalarFieldEnum[]
}

/**
 * product_size findMany
 */
export type product_sizeFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * Filter, which product_sizes to fetch.
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_sizes to fetch.
   */
  orderBy?: Prisma.product_sizeOrderByWithRelationInput | Prisma.product_sizeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing product_sizes.
   */
  cursor?: Prisma.product_sizeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_sizes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_sizes.
   */
  skip?: number
  distinct?: Prisma.Product_sizeScalarFieldEnum | Prisma.Product_sizeScalarFieldEnum[]
}

/**
 * product_size create
 */
export type product_sizeCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * The data needed to create a product_size.
   */
  data: Prisma.XOR<Prisma.product_sizeCreateInput, Prisma.product_sizeUncheckedCreateInput>
}

/**
 * product_size createMany
 */
export type product_sizeCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many product_sizes.
   */
  data: Prisma.product_sizeCreateManyInput | Prisma.product_sizeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * product_size createManyAndReturn
 */
export type product_sizeCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * The data used to create many product_sizes.
   */
  data: Prisma.product_sizeCreateManyInput | Prisma.product_sizeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * product_size update
 */
export type product_sizeUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * The data needed to update a product_size.
   */
  data: Prisma.XOR<Prisma.product_sizeUpdateInput, Prisma.product_sizeUncheckedUpdateInput>
  /**
   * Choose, which product_size to update.
   */
  where: Prisma.product_sizeWhereUniqueInput
}

/**
 * product_size updateMany
 */
export type product_sizeUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update product_sizes.
   */
  data: Prisma.XOR<Prisma.product_sizeUpdateManyMutationInput, Prisma.product_sizeUncheckedUpdateManyInput>
  /**
   * Filter which product_sizes to update
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * Limit how many product_sizes to update.
   */
  limit?: number
}

/**
 * product_size updateManyAndReturn
 */
export type product_sizeUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * The data used to update product_sizes.
   */
  data: Prisma.XOR<Prisma.product_sizeUpdateManyMutationInput, Prisma.product_sizeUncheckedUpdateManyInput>
  /**
   * Filter which product_sizes to update
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * Limit how many product_sizes to update.
   */
  limit?: number
}

/**
 * product_size upsert
 */
export type product_sizeUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * The filter to search for the product_size to update in case it exists.
   */
  where: Prisma.product_sizeWhereUniqueInput
  /**
   * In case the product_size found by the `where` argument doesn't exist, create a new product_size with this data.
   */
  create: Prisma.XOR<Prisma.product_sizeCreateInput, Prisma.product_sizeUncheckedCreateInput>
  /**
   * In case the product_size was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.product_sizeUpdateInput, Prisma.product_sizeUncheckedUpdateInput>
}

/**
 * product_size delete
 */
export type product_sizeDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
  /**
   * Filter which product_size to delete.
   */
  where: Prisma.product_sizeWhereUniqueInput
}

/**
 * product_size deleteMany
 */
export type product_sizeDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which product_sizes to delete
   */
  where?: Prisma.product_sizeWhereInput
  /**
   * Limit how many product_sizes to delete.
   */
  limit?: number
}

/**
 * product_size.product_price
 */
export type product_size$product_priceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  where?: Prisma.product_priceWhereInput
  orderBy?: Prisma.product_priceOrderByWithRelationInput | Prisma.product_priceOrderByWithRelationInput[]
  cursor?: Prisma.product_priceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Product_priceScalarFieldEnum | Prisma.Product_priceScalarFieldEnum[]
}

/**
 * product_size without action
 */
export type product_sizeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_size
   */
  select?: Prisma.product_sizeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_size
   */
  omit?: Prisma.product_sizeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_sizeInclude<ExtArgs> | null
}
