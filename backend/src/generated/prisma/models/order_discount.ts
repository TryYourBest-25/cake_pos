/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `order_discount` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model order_discount
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type order_discountModel = runtime.Types.Result.DefaultSelection<Prisma.$order_discountPayload>

export type AggregateOrder_discount = {
  _count: Order_discountCountAggregateOutputType | null
  _avg: Order_discountAvgAggregateOutputType | null
  _sum: Order_discountSumAggregateOutputType | null
  _min: Order_discountMinAggregateOutputType | null
  _max: Order_discountMaxAggregateOutputType | null
}

export type Order_discountAvgAggregateOutputType = {
  order_discount_id: number | null
  order_id: number | null
  discount_id: number | null
  discount_amount: number | null
}

export type Order_discountSumAggregateOutputType = {
  order_discount_id: number | null
  order_id: number | null
  discount_id: number | null
  discount_amount: number | null
}

export type Order_discountMinAggregateOutputType = {
  order_discount_id: number | null
  order_id: number | null
  discount_id: number | null
  discount_amount: number | null
  created_at: Date | null
  updated_at: Date | null
}

export type Order_discountMaxAggregateOutputType = {
  order_discount_id: number | null
  order_id: number | null
  discount_id: number | null
  discount_amount: number | null
  created_at: Date | null
  updated_at: Date | null
}

export type Order_discountCountAggregateOutputType = {
  order_discount_id: number
  order_id: number
  discount_id: number
  discount_amount: number
  created_at: number
  updated_at: number
  _all: number
}


export type Order_discountAvgAggregateInputType = {
  order_discount_id?: true
  order_id?: true
  discount_id?: true
  discount_amount?: true
}

export type Order_discountSumAggregateInputType = {
  order_discount_id?: true
  order_id?: true
  discount_id?: true
  discount_amount?: true
}

export type Order_discountMinAggregateInputType = {
  order_discount_id?: true
  order_id?: true
  discount_id?: true
  discount_amount?: true
  created_at?: true
  updated_at?: true
}

export type Order_discountMaxAggregateInputType = {
  order_discount_id?: true
  order_id?: true
  discount_id?: true
  discount_amount?: true
  created_at?: true
  updated_at?: true
}

export type Order_discountCountAggregateInputType = {
  order_discount_id?: true
  order_id?: true
  discount_id?: true
  discount_amount?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Order_discountAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order_discount to aggregate.
   */
  where?: Prisma.order_discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_discounts to fetch.
   */
  orderBy?: Prisma.order_discountOrderByWithRelationInput | Prisma.order_discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.order_discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_discounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned order_discounts
  **/
  _count?: true | Order_discountCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Order_discountAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Order_discountSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Order_discountMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Order_discountMaxAggregateInputType
}

export type GetOrder_discountAggregateType<T extends Order_discountAggregateArgs> = {
      [P in keyof T & keyof AggregateOrder_discount]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrder_discount[P]>
    : Prisma.GetScalarType<T[P], AggregateOrder_discount[P]>
}




export type order_discountGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_discountWhereInput
  orderBy?: Prisma.order_discountOrderByWithAggregationInput | Prisma.order_discountOrderByWithAggregationInput[]
  by: Prisma.Order_discountScalarFieldEnum[] | Prisma.Order_discountScalarFieldEnum
  having?: Prisma.order_discountScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Order_discountCountAggregateInputType | true
  _avg?: Order_discountAvgAggregateInputType
  _sum?: Order_discountSumAggregateInputType
  _min?: Order_discountMinAggregateInputType
  _max?: Order_discountMaxAggregateInputType
}

export type Order_discountGroupByOutputType = {
  order_discount_id: number
  order_id: number
  discount_id: number
  discount_amount: number
  created_at: Date | null
  updated_at: Date | null
  _count: Order_discountCountAggregateOutputType | null
  _avg: Order_discountAvgAggregateOutputType | null
  _sum: Order_discountSumAggregateOutputType | null
  _min: Order_discountMinAggregateOutputType | null
  _max: Order_discountMaxAggregateOutputType | null
}

type GetOrder_discountGroupByPayload<T extends order_discountGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Order_discountGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Order_discountGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Order_discountGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Order_discountGroupByOutputType[P]>
      }
    >
  > 



export type order_discountWhereInput = {
  AND?: Prisma.order_discountWhereInput | Prisma.order_discountWhereInput[]
  OR?: Prisma.order_discountWhereInput[]
  NOT?: Prisma.order_discountWhereInput | Prisma.order_discountWhereInput[]
  order_discount_id?: Prisma.IntFilter<"order_discount"> | number
  order_id?: Prisma.IntFilter<"order_discount"> | number
  discount_id?: Prisma.IntFilter<"order_discount"> | number
  discount_amount?: Prisma.IntFilter<"order_discount"> | number
  created_at?: Prisma.DateTimeNullableFilter<"order_discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order_discount"> | Date | string | null
  discount?: Prisma.XOR<Prisma.DiscountScalarRelationFilter, Prisma.discountWhereInput>
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.orderWhereInput>
}

export type order_discountOrderByWithRelationInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  discount?: Prisma.discountOrderByWithRelationInput
  order?: Prisma.orderOrderByWithRelationInput
}

export type order_discountWhereUniqueInput = Prisma.AtLeast<{
  order_discount_id?: number
  order_id_discount_id?: Prisma.order_discountOrder_idDiscount_idCompoundUniqueInput
  AND?: Prisma.order_discountWhereInput | Prisma.order_discountWhereInput[]
  OR?: Prisma.order_discountWhereInput[]
  NOT?: Prisma.order_discountWhereInput | Prisma.order_discountWhereInput[]
  order_id?: Prisma.IntFilter<"order_discount"> | number
  discount_id?: Prisma.IntFilter<"order_discount"> | number
  discount_amount?: Prisma.IntFilter<"order_discount"> | number
  created_at?: Prisma.DateTimeNullableFilter<"order_discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order_discount"> | Date | string | null
  discount?: Prisma.XOR<Prisma.DiscountScalarRelationFilter, Prisma.discountWhereInput>
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.orderWhereInput>
}, "order_discount_id" | "order_id_discount_id">

export type order_discountOrderByWithAggregationInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.order_discountCountOrderByAggregateInput
  _avg?: Prisma.order_discountAvgOrderByAggregateInput
  _max?: Prisma.order_discountMaxOrderByAggregateInput
  _min?: Prisma.order_discountMinOrderByAggregateInput
  _sum?: Prisma.order_discountSumOrderByAggregateInput
}

export type order_discountScalarWhereWithAggregatesInput = {
  AND?: Prisma.order_discountScalarWhereWithAggregatesInput | Prisma.order_discountScalarWhereWithAggregatesInput[]
  OR?: Prisma.order_discountScalarWhereWithAggregatesInput[]
  NOT?: Prisma.order_discountScalarWhereWithAggregatesInput | Prisma.order_discountScalarWhereWithAggregatesInput[]
  order_discount_id?: Prisma.IntWithAggregatesFilter<"order_discount"> | number
  order_id?: Prisma.IntWithAggregatesFilter<"order_discount"> | number
  discount_id?: Prisma.IntWithAggregatesFilter<"order_discount"> | number
  discount_amount?: Prisma.IntWithAggregatesFilter<"order_discount"> | number
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"order_discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"order_discount"> | Date | string | null
}

export type order_discountCreateInput = {
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  discount: Prisma.discountCreateNestedOneWithoutOrder_discountInput
  order: Prisma.orderCreateNestedOneWithoutOrder_discountInput
}

export type order_discountUncheckedCreateInput = {
  order_discount_id?: number
  order_id: number
  discount_id: number
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_discountUpdateInput = {
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  discount?: Prisma.discountUpdateOneRequiredWithoutOrder_discountNestedInput
  order?: Prisma.orderUpdateOneRequiredWithoutOrder_discountNestedInput
}

export type order_discountUncheckedUpdateInput = {
  order_discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_discountCreateManyInput = {
  order_discount_id?: number
  order_id: number
  discount_id: number
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_discountUpdateManyMutationInput = {
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_discountUncheckedUpdateManyInput = {
  order_discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Order_discountListRelationFilter = {
  every?: Prisma.order_discountWhereInput
  some?: Prisma.order_discountWhereInput
  none?: Prisma.order_discountWhereInput
}

export type order_discountOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type order_discountOrder_idDiscount_idCompoundUniqueInput = {
  order_id: number
  discount_id: number
}

export type order_discountCountOrderByAggregateInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type order_discountAvgOrderByAggregateInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
}

export type order_discountMaxOrderByAggregateInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type order_discountMinOrderByAggregateInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type order_discountSumOrderByAggregateInput = {
  order_discount_id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  discount_id?: Prisma.SortOrder
  discount_amount?: Prisma.SortOrder
}

export type order_discountCreateNestedManyWithoutDiscountInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutDiscountInput, Prisma.order_discountUncheckedCreateWithoutDiscountInput> | Prisma.order_discountCreateWithoutDiscountInput[] | Prisma.order_discountUncheckedCreateWithoutDiscountInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutDiscountInput | Prisma.order_discountCreateOrConnectWithoutDiscountInput[]
  createMany?: Prisma.order_discountCreateManyDiscountInputEnvelope
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
}

export type order_discountUncheckedCreateNestedManyWithoutDiscountInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutDiscountInput, Prisma.order_discountUncheckedCreateWithoutDiscountInput> | Prisma.order_discountCreateWithoutDiscountInput[] | Prisma.order_discountUncheckedCreateWithoutDiscountInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutDiscountInput | Prisma.order_discountCreateOrConnectWithoutDiscountInput[]
  createMany?: Prisma.order_discountCreateManyDiscountInputEnvelope
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
}

export type order_discountUpdateManyWithoutDiscountNestedInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutDiscountInput, Prisma.order_discountUncheckedCreateWithoutDiscountInput> | Prisma.order_discountCreateWithoutDiscountInput[] | Prisma.order_discountUncheckedCreateWithoutDiscountInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutDiscountInput | Prisma.order_discountCreateOrConnectWithoutDiscountInput[]
  upsert?: Prisma.order_discountUpsertWithWhereUniqueWithoutDiscountInput | Prisma.order_discountUpsertWithWhereUniqueWithoutDiscountInput[]
  createMany?: Prisma.order_discountCreateManyDiscountInputEnvelope
  set?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  disconnect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  delete?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  update?: Prisma.order_discountUpdateWithWhereUniqueWithoutDiscountInput | Prisma.order_discountUpdateWithWhereUniqueWithoutDiscountInput[]
  updateMany?: Prisma.order_discountUpdateManyWithWhereWithoutDiscountInput | Prisma.order_discountUpdateManyWithWhereWithoutDiscountInput[]
  deleteMany?: Prisma.order_discountScalarWhereInput | Prisma.order_discountScalarWhereInput[]
}

export type order_discountUncheckedUpdateManyWithoutDiscountNestedInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutDiscountInput, Prisma.order_discountUncheckedCreateWithoutDiscountInput> | Prisma.order_discountCreateWithoutDiscountInput[] | Prisma.order_discountUncheckedCreateWithoutDiscountInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutDiscountInput | Prisma.order_discountCreateOrConnectWithoutDiscountInput[]
  upsert?: Prisma.order_discountUpsertWithWhereUniqueWithoutDiscountInput | Prisma.order_discountUpsertWithWhereUniqueWithoutDiscountInput[]
  createMany?: Prisma.order_discountCreateManyDiscountInputEnvelope
  set?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  disconnect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  delete?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  update?: Prisma.order_discountUpdateWithWhereUniqueWithoutDiscountInput | Prisma.order_discountUpdateWithWhereUniqueWithoutDiscountInput[]
  updateMany?: Prisma.order_discountUpdateManyWithWhereWithoutDiscountInput | Prisma.order_discountUpdateManyWithWhereWithoutDiscountInput[]
  deleteMany?: Prisma.order_discountScalarWhereInput | Prisma.order_discountScalarWhereInput[]
}

export type order_discountCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutOrderInput, Prisma.order_discountUncheckedCreateWithoutOrderInput> | Prisma.order_discountCreateWithoutOrderInput[] | Prisma.order_discountUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutOrderInput | Prisma.order_discountCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.order_discountCreateManyOrderInputEnvelope
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
}

export type order_discountUncheckedCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutOrderInput, Prisma.order_discountUncheckedCreateWithoutOrderInput> | Prisma.order_discountCreateWithoutOrderInput[] | Prisma.order_discountUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutOrderInput | Prisma.order_discountCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.order_discountCreateManyOrderInputEnvelope
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
}

export type order_discountUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutOrderInput, Prisma.order_discountUncheckedCreateWithoutOrderInput> | Prisma.order_discountCreateWithoutOrderInput[] | Prisma.order_discountUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutOrderInput | Prisma.order_discountCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.order_discountUpsertWithWhereUniqueWithoutOrderInput | Prisma.order_discountUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.order_discountCreateManyOrderInputEnvelope
  set?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  disconnect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  delete?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  update?: Prisma.order_discountUpdateWithWhereUniqueWithoutOrderInput | Prisma.order_discountUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.order_discountUpdateManyWithWhereWithoutOrderInput | Prisma.order_discountUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.order_discountScalarWhereInput | Prisma.order_discountScalarWhereInput[]
}

export type order_discountUncheckedUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.order_discountCreateWithoutOrderInput, Prisma.order_discountUncheckedCreateWithoutOrderInput> | Prisma.order_discountCreateWithoutOrderInput[] | Prisma.order_discountUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_discountCreateOrConnectWithoutOrderInput | Prisma.order_discountCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.order_discountUpsertWithWhereUniqueWithoutOrderInput | Prisma.order_discountUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.order_discountCreateManyOrderInputEnvelope
  set?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  disconnect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  delete?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  connect?: Prisma.order_discountWhereUniqueInput | Prisma.order_discountWhereUniqueInput[]
  update?: Prisma.order_discountUpdateWithWhereUniqueWithoutOrderInput | Prisma.order_discountUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.order_discountUpdateManyWithWhereWithoutOrderInput | Prisma.order_discountUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.order_discountScalarWhereInput | Prisma.order_discountScalarWhereInput[]
}

export type order_discountCreateWithoutDiscountInput = {
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order: Prisma.orderCreateNestedOneWithoutOrder_discountInput
}

export type order_discountUncheckedCreateWithoutDiscountInput = {
  order_discount_id?: number
  order_id: number
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_discountCreateOrConnectWithoutDiscountInput = {
  where: Prisma.order_discountWhereUniqueInput
  create: Prisma.XOR<Prisma.order_discountCreateWithoutDiscountInput, Prisma.order_discountUncheckedCreateWithoutDiscountInput>
}

export type order_discountCreateManyDiscountInputEnvelope = {
  data: Prisma.order_discountCreateManyDiscountInput | Prisma.order_discountCreateManyDiscountInput[]
  skipDuplicates?: boolean
}

export type order_discountUpsertWithWhereUniqueWithoutDiscountInput = {
  where: Prisma.order_discountWhereUniqueInput
  update: Prisma.XOR<Prisma.order_discountUpdateWithoutDiscountInput, Prisma.order_discountUncheckedUpdateWithoutDiscountInput>
  create: Prisma.XOR<Prisma.order_discountCreateWithoutDiscountInput, Prisma.order_discountUncheckedCreateWithoutDiscountInput>
}

export type order_discountUpdateWithWhereUniqueWithoutDiscountInput = {
  where: Prisma.order_discountWhereUniqueInput
  data: Prisma.XOR<Prisma.order_discountUpdateWithoutDiscountInput, Prisma.order_discountUncheckedUpdateWithoutDiscountInput>
}

export type order_discountUpdateManyWithWhereWithoutDiscountInput = {
  where: Prisma.order_discountScalarWhereInput
  data: Prisma.XOR<Prisma.order_discountUpdateManyMutationInput, Prisma.order_discountUncheckedUpdateManyWithoutDiscountInput>
}

export type order_discountScalarWhereInput = {
  AND?: Prisma.order_discountScalarWhereInput | Prisma.order_discountScalarWhereInput[]
  OR?: Prisma.order_discountScalarWhereInput[]
  NOT?: Prisma.order_discountScalarWhereInput | Prisma.order_discountScalarWhereInput[]
  order_discount_id?: Prisma.IntFilter<"order_discount"> | number
  order_id?: Prisma.IntFilter<"order_discount"> | number
  discount_id?: Prisma.IntFilter<"order_discount"> | number
  discount_amount?: Prisma.IntFilter<"order_discount"> | number
  created_at?: Prisma.DateTimeNullableFilter<"order_discount"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"order_discount"> | Date | string | null
}

export type order_discountCreateWithoutOrderInput = {
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  discount: Prisma.discountCreateNestedOneWithoutOrder_discountInput
}

export type order_discountUncheckedCreateWithoutOrderInput = {
  order_discount_id?: number
  discount_id: number
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_discountCreateOrConnectWithoutOrderInput = {
  where: Prisma.order_discountWhereUniqueInput
  create: Prisma.XOR<Prisma.order_discountCreateWithoutOrderInput, Prisma.order_discountUncheckedCreateWithoutOrderInput>
}

export type order_discountCreateManyOrderInputEnvelope = {
  data: Prisma.order_discountCreateManyOrderInput | Prisma.order_discountCreateManyOrderInput[]
  skipDuplicates?: boolean
}

export type order_discountUpsertWithWhereUniqueWithoutOrderInput = {
  where: Prisma.order_discountWhereUniqueInput
  update: Prisma.XOR<Prisma.order_discountUpdateWithoutOrderInput, Prisma.order_discountUncheckedUpdateWithoutOrderInput>
  create: Prisma.XOR<Prisma.order_discountCreateWithoutOrderInput, Prisma.order_discountUncheckedCreateWithoutOrderInput>
}

export type order_discountUpdateWithWhereUniqueWithoutOrderInput = {
  where: Prisma.order_discountWhereUniqueInput
  data: Prisma.XOR<Prisma.order_discountUpdateWithoutOrderInput, Prisma.order_discountUncheckedUpdateWithoutOrderInput>
}

export type order_discountUpdateManyWithWhereWithoutOrderInput = {
  where: Prisma.order_discountScalarWhereInput
  data: Prisma.XOR<Prisma.order_discountUpdateManyMutationInput, Prisma.order_discountUncheckedUpdateManyWithoutOrderInput>
}

export type order_discountCreateManyDiscountInput = {
  order_discount_id?: number
  order_id: number
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_discountUpdateWithoutDiscountInput = {
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order?: Prisma.orderUpdateOneRequiredWithoutOrder_discountNestedInput
}

export type order_discountUncheckedUpdateWithoutDiscountInput = {
  order_discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_discountUncheckedUpdateManyWithoutDiscountInput = {
  order_discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  order_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_discountCreateManyOrderInput = {
  order_discount_id?: number
  discount_id: number
  discount_amount: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type order_discountUpdateWithoutOrderInput = {
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  discount?: Prisma.discountUpdateOneRequiredWithoutOrder_discountNestedInput
}

export type order_discountUncheckedUpdateWithoutOrderInput = {
  order_discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type order_discountUncheckedUpdateManyWithoutOrderInput = {
  order_discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_id?: Prisma.IntFieldUpdateOperationsInput | number
  discount_amount?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type order_discountSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_discount_id?: boolean
  order_id?: boolean
  discount_id?: boolean
  discount_amount?: boolean
  created_at?: boolean
  updated_at?: boolean
  discount?: boolean | Prisma.discountDefaultArgs<ExtArgs>
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_discount"]>

export type order_discountSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_discount_id?: boolean
  order_id?: boolean
  discount_id?: boolean
  discount_amount?: boolean
  created_at?: boolean
  updated_at?: boolean
  discount?: boolean | Prisma.discountDefaultArgs<ExtArgs>
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_discount"]>

export type order_discountSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  order_discount_id?: boolean
  order_id?: boolean
  discount_id?: boolean
  discount_amount?: boolean
  created_at?: boolean
  updated_at?: boolean
  discount?: boolean | Prisma.discountDefaultArgs<ExtArgs>
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_discount"]>

export type order_discountSelectScalar = {
  order_discount_id?: boolean
  order_id?: boolean
  discount_id?: boolean
  discount_amount?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type order_discountOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"order_discount_id" | "order_id" | "discount_id" | "discount_amount" | "created_at" | "updated_at", ExtArgs["result"]["order_discount"]>
export type order_discountInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  discount?: boolean | Prisma.discountDefaultArgs<ExtArgs>
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
}
export type order_discountIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  discount?: boolean | Prisma.discountDefaultArgs<ExtArgs>
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
}
export type order_discountIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  discount?: boolean | Prisma.discountDefaultArgs<ExtArgs>
  order?: boolean | Prisma.orderDefaultArgs<ExtArgs>
}

export type $order_discountPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "order_discount"
  objects: {
    discount: Prisma.$discountPayload<ExtArgs>
    order: Prisma.$orderPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    order_discount_id: number
    order_id: number
    discount_id: number
    discount_amount: number
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["order_discount"]>
  composites: {}
}

export type order_discountGetPayload<S extends boolean | null | undefined | order_discountDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$order_discountPayload, S>

export type order_discountCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<order_discountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Order_discountCountAggregateInputType | true
  }

export interface order_discountDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_discount'], meta: { name: 'order_discount' } }
  /**
   * Find zero or one Order_discount that matches the filter.
   * @param {order_discountFindUniqueArgs} args - Arguments to find a Order_discount
   * @example
   * // Get one Order_discount
   * const order_discount = await prisma.order_discount.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends order_discountFindUniqueArgs>(args: Prisma.SelectSubset<T, order_discountFindUniqueArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Order_discount that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {order_discountFindUniqueOrThrowArgs} args - Arguments to find a Order_discount
   * @example
   * // Get one Order_discount
   * const order_discount = await prisma.order_discount.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends order_discountFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, order_discountFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order_discount that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_discountFindFirstArgs} args - Arguments to find a Order_discount
   * @example
   * // Get one Order_discount
   * const order_discount = await prisma.order_discount.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends order_discountFindFirstArgs>(args?: Prisma.SelectSubset<T, order_discountFindFirstArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order_discount that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_discountFindFirstOrThrowArgs} args - Arguments to find a Order_discount
   * @example
   * // Get one Order_discount
   * const order_discount = await prisma.order_discount.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends order_discountFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, order_discountFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Order_discounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_discountFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Order_discounts
   * const order_discounts = await prisma.order_discount.findMany()
   * 
   * // Get first 10 Order_discounts
   * const order_discounts = await prisma.order_discount.findMany({ take: 10 })
   * 
   * // Only select the `order_discount_id`
   * const order_discountWithOrder_discount_idOnly = await prisma.order_discount.findMany({ select: { order_discount_id: true } })
   * 
   */
  findMany<T extends order_discountFindManyArgs>(args?: Prisma.SelectSubset<T, order_discountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Order_discount.
   * @param {order_discountCreateArgs} args - Arguments to create a Order_discount.
   * @example
   * // Create one Order_discount
   * const Order_discount = await prisma.order_discount.create({
   *   data: {
   *     // ... data to create a Order_discount
   *   }
   * })
   * 
   */
  create<T extends order_discountCreateArgs>(args: Prisma.SelectSubset<T, order_discountCreateArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Order_discounts.
   * @param {order_discountCreateManyArgs} args - Arguments to create many Order_discounts.
   * @example
   * // Create many Order_discounts
   * const order_discount = await prisma.order_discount.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends order_discountCreateManyArgs>(args?: Prisma.SelectSubset<T, order_discountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Order_discounts and returns the data saved in the database.
   * @param {order_discountCreateManyAndReturnArgs} args - Arguments to create many Order_discounts.
   * @example
   * // Create many Order_discounts
   * const order_discount = await prisma.order_discount.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Order_discounts and only return the `order_discount_id`
   * const order_discountWithOrder_discount_idOnly = await prisma.order_discount.createManyAndReturn({
   *   select: { order_discount_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends order_discountCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, order_discountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Order_discount.
   * @param {order_discountDeleteArgs} args - Arguments to delete one Order_discount.
   * @example
   * // Delete one Order_discount
   * const Order_discount = await prisma.order_discount.delete({
   *   where: {
   *     // ... filter to delete one Order_discount
   *   }
   * })
   * 
   */
  delete<T extends order_discountDeleteArgs>(args: Prisma.SelectSubset<T, order_discountDeleteArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Order_discount.
   * @param {order_discountUpdateArgs} args - Arguments to update one Order_discount.
   * @example
   * // Update one Order_discount
   * const order_discount = await prisma.order_discount.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends order_discountUpdateArgs>(args: Prisma.SelectSubset<T, order_discountUpdateArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Order_discounts.
   * @param {order_discountDeleteManyArgs} args - Arguments to filter Order_discounts to delete.
   * @example
   * // Delete a few Order_discounts
   * const { count } = await prisma.order_discount.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends order_discountDeleteManyArgs>(args?: Prisma.SelectSubset<T, order_discountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Order_discounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_discountUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Order_discounts
   * const order_discount = await prisma.order_discount.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends order_discountUpdateManyArgs>(args: Prisma.SelectSubset<T, order_discountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Order_discounts and returns the data updated in the database.
   * @param {order_discountUpdateManyAndReturnArgs} args - Arguments to update many Order_discounts.
   * @example
   * // Update many Order_discounts
   * const order_discount = await prisma.order_discount.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Order_discounts and only return the `order_discount_id`
   * const order_discountWithOrder_discount_idOnly = await prisma.order_discount.updateManyAndReturn({
   *   select: { order_discount_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends order_discountUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, order_discountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Order_discount.
   * @param {order_discountUpsertArgs} args - Arguments to update or create a Order_discount.
   * @example
   * // Update or create a Order_discount
   * const order_discount = await prisma.order_discount.upsert({
   *   create: {
   *     // ... data to create a Order_discount
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Order_discount we want to update
   *   }
   * })
   */
  upsert<T extends order_discountUpsertArgs>(args: Prisma.SelectSubset<T, order_discountUpsertArgs<ExtArgs>>): Prisma.Prisma__order_discountClient<runtime.Types.Result.GetResult<Prisma.$order_discountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Order_discounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_discountCountArgs} args - Arguments to filter Order_discounts to count.
   * @example
   * // Count the number of Order_discounts
   * const count = await prisma.order_discount.count({
   *   where: {
   *     // ... the filter for the Order_discounts we want to count
   *   }
   * })
  **/
  count<T extends order_discountCountArgs>(
    args?: Prisma.Subset<T, order_discountCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Order_discountCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Order_discount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Order_discountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Order_discountAggregateArgs>(args: Prisma.Subset<T, Order_discountAggregateArgs>): Prisma.PrismaPromise<GetOrder_discountAggregateType<T>>

  /**
   * Group by Order_discount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_discountGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends order_discountGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: order_discountGroupByArgs['orderBy'] }
      : { orderBy?: order_discountGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, order_discountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_discountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the order_discount model
 */
readonly fields: order_discountFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for order_discount.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__order_discountClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  discount<T extends Prisma.discountDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.discountDefaultArgs<ExtArgs>>): Prisma.Prisma__discountClient<runtime.Types.Result.GetResult<Prisma.$discountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  order<T extends Prisma.orderDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.orderDefaultArgs<ExtArgs>>): Prisma.Prisma__orderClient<runtime.Types.Result.GetResult<Prisma.$orderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the order_discount model
 */
export interface order_discountFieldRefs {
  readonly order_discount_id: Prisma.FieldRef<"order_discount", 'Int'>
  readonly order_id: Prisma.FieldRef<"order_discount", 'Int'>
  readonly discount_id: Prisma.FieldRef<"order_discount", 'Int'>
  readonly discount_amount: Prisma.FieldRef<"order_discount", 'Int'>
  readonly created_at: Prisma.FieldRef<"order_discount", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"order_discount", 'DateTime'>
}
    

// Custom InputTypes
/**
 * order_discount findUnique
 */
export type order_discountFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * Filter, which order_discount to fetch.
   */
  where: Prisma.order_discountWhereUniqueInput
}

/**
 * order_discount findUniqueOrThrow
 */
export type order_discountFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * Filter, which order_discount to fetch.
   */
  where: Prisma.order_discountWhereUniqueInput
}

/**
 * order_discount findFirst
 */
export type order_discountFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * Filter, which order_discount to fetch.
   */
  where?: Prisma.order_discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_discounts to fetch.
   */
  orderBy?: Prisma.order_discountOrderByWithRelationInput | Prisma.order_discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for order_discounts.
   */
  cursor?: Prisma.order_discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_discounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of order_discounts.
   */
  distinct?: Prisma.Order_discountScalarFieldEnum | Prisma.Order_discountScalarFieldEnum[]
}

/**
 * order_discount findFirstOrThrow
 */
export type order_discountFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * Filter, which order_discount to fetch.
   */
  where?: Prisma.order_discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_discounts to fetch.
   */
  orderBy?: Prisma.order_discountOrderByWithRelationInput | Prisma.order_discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for order_discounts.
   */
  cursor?: Prisma.order_discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_discounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of order_discounts.
   */
  distinct?: Prisma.Order_discountScalarFieldEnum | Prisma.Order_discountScalarFieldEnum[]
}

/**
 * order_discount findMany
 */
export type order_discountFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * Filter, which order_discounts to fetch.
   */
  where?: Prisma.order_discountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_discounts to fetch.
   */
  orderBy?: Prisma.order_discountOrderByWithRelationInput | Prisma.order_discountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing order_discounts.
   */
  cursor?: Prisma.order_discountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_discounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_discounts.
   */
  skip?: number
  distinct?: Prisma.Order_discountScalarFieldEnum | Prisma.Order_discountScalarFieldEnum[]
}

/**
 * order_discount create
 */
export type order_discountCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * The data needed to create a order_discount.
   */
  data: Prisma.XOR<Prisma.order_discountCreateInput, Prisma.order_discountUncheckedCreateInput>
}

/**
 * order_discount createMany
 */
export type order_discountCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many order_discounts.
   */
  data: Prisma.order_discountCreateManyInput | Prisma.order_discountCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * order_discount createManyAndReturn
 */
export type order_discountCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * The data used to create many order_discounts.
   */
  data: Prisma.order_discountCreateManyInput | Prisma.order_discountCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * order_discount update
 */
export type order_discountUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * The data needed to update a order_discount.
   */
  data: Prisma.XOR<Prisma.order_discountUpdateInput, Prisma.order_discountUncheckedUpdateInput>
  /**
   * Choose, which order_discount to update.
   */
  where: Prisma.order_discountWhereUniqueInput
}

/**
 * order_discount updateMany
 */
export type order_discountUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update order_discounts.
   */
  data: Prisma.XOR<Prisma.order_discountUpdateManyMutationInput, Prisma.order_discountUncheckedUpdateManyInput>
  /**
   * Filter which order_discounts to update
   */
  where?: Prisma.order_discountWhereInput
  /**
   * Limit how many order_discounts to update.
   */
  limit?: number
}

/**
 * order_discount updateManyAndReturn
 */
export type order_discountUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * The data used to update order_discounts.
   */
  data: Prisma.XOR<Prisma.order_discountUpdateManyMutationInput, Prisma.order_discountUncheckedUpdateManyInput>
  /**
   * Filter which order_discounts to update
   */
  where?: Prisma.order_discountWhereInput
  /**
   * Limit how many order_discounts to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * order_discount upsert
 */
export type order_discountUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * The filter to search for the order_discount to update in case it exists.
   */
  where: Prisma.order_discountWhereUniqueInput
  /**
   * In case the order_discount found by the `where` argument doesn't exist, create a new order_discount with this data.
   */
  create: Prisma.XOR<Prisma.order_discountCreateInput, Prisma.order_discountUncheckedCreateInput>
  /**
   * In case the order_discount was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.order_discountUpdateInput, Prisma.order_discountUncheckedUpdateInput>
}

/**
 * order_discount delete
 */
export type order_discountDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
  /**
   * Filter which order_discount to delete.
   */
  where: Prisma.order_discountWhereUniqueInput
}

/**
 * order_discount deleteMany
 */
export type order_discountDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order_discounts to delete
   */
  where?: Prisma.order_discountWhereInput
  /**
   * Limit how many order_discounts to delete.
   */
  limit?: number
}

/**
 * order_discount without action
 */
export type order_discountDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_discount
   */
  select?: Prisma.order_discountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_discount
   */
  omit?: Prisma.order_discountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_discountInclude<ExtArgs> | null
}
