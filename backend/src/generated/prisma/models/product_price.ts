/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `product_price` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model product_price
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type product_priceModel = runtime.Types.Result.DefaultSelection<Prisma.$product_pricePayload>

export type AggregateProduct_price = {
  _count: Product_priceCountAggregateOutputType | null
  _avg: Product_priceAvgAggregateOutputType | null
  _sum: Product_priceSumAggregateOutputType | null
  _min: Product_priceMinAggregateOutputType | null
  _max: Product_priceMaxAggregateOutputType | null
}

export type Product_priceAvgAggregateOutputType = {
  product_price_id: number | null
  product_id: number | null
  size_id: number | null
  price: number | null
}

export type Product_priceSumAggregateOutputType = {
  product_price_id: number | null
  product_id: number | null
  size_id: number | null
  price: number | null
}

export type Product_priceMinAggregateOutputType = {
  product_price_id: number | null
  product_id: number | null
  size_id: number | null
  price: number | null
  is_active: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type Product_priceMaxAggregateOutputType = {
  product_price_id: number | null
  product_id: number | null
  size_id: number | null
  price: number | null
  is_active: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type Product_priceCountAggregateOutputType = {
  product_price_id: number
  product_id: number
  size_id: number
  price: number
  is_active: number
  created_at: number
  updated_at: number
  _all: number
}


export type Product_priceAvgAggregateInputType = {
  product_price_id?: true
  product_id?: true
  size_id?: true
  price?: true
}

export type Product_priceSumAggregateInputType = {
  product_price_id?: true
  product_id?: true
  size_id?: true
  price?: true
}

export type Product_priceMinAggregateInputType = {
  product_price_id?: true
  product_id?: true
  size_id?: true
  price?: true
  is_active?: true
  created_at?: true
  updated_at?: true
}

export type Product_priceMaxAggregateInputType = {
  product_price_id?: true
  product_id?: true
  size_id?: true
  price?: true
  is_active?: true
  created_at?: true
  updated_at?: true
}

export type Product_priceCountAggregateInputType = {
  product_price_id?: true
  product_id?: true
  size_id?: true
  price?: true
  is_active?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Product_priceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which product_price to aggregate.
   */
  where?: Prisma.product_priceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_prices to fetch.
   */
  orderBy?: Prisma.product_priceOrderByWithRelationInput | Prisma.product_priceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.product_priceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_prices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_prices.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned product_prices
  **/
  _count?: true | Product_priceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Product_priceAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Product_priceSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Product_priceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Product_priceMaxAggregateInputType
}

export type GetProduct_priceAggregateType<T extends Product_priceAggregateArgs> = {
      [P in keyof T & keyof AggregateProduct_price]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProduct_price[P]>
    : Prisma.GetScalarType<T[P], AggregateProduct_price[P]>
}




export type product_priceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.product_priceWhereInput
  orderBy?: Prisma.product_priceOrderByWithAggregationInput | Prisma.product_priceOrderByWithAggregationInput[]
  by: Prisma.Product_priceScalarFieldEnum[] | Prisma.Product_priceScalarFieldEnum
  having?: Prisma.product_priceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Product_priceCountAggregateInputType | true
  _avg?: Product_priceAvgAggregateInputType
  _sum?: Product_priceSumAggregateInputType
  _min?: Product_priceMinAggregateInputType
  _max?: Product_priceMaxAggregateInputType
}

export type Product_priceGroupByOutputType = {
  product_price_id: number
  product_id: number
  size_id: number
  price: number
  is_active: boolean
  created_at: Date | null
  updated_at: Date | null
  _count: Product_priceCountAggregateOutputType | null
  _avg: Product_priceAvgAggregateOutputType | null
  _sum: Product_priceSumAggregateOutputType | null
  _min: Product_priceMinAggregateOutputType | null
  _max: Product_priceMaxAggregateOutputType | null
}

type GetProduct_priceGroupByPayload<T extends product_priceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Product_priceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Product_priceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Product_priceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Product_priceGroupByOutputType[P]>
      }
    >
  > 



export type product_priceWhereInput = {
  AND?: Prisma.product_priceWhereInput | Prisma.product_priceWhereInput[]
  OR?: Prisma.product_priceWhereInput[]
  NOT?: Prisma.product_priceWhereInput | Prisma.product_priceWhereInput[]
  product_price_id?: Prisma.IntFilter<"product_price"> | number
  product_id?: Prisma.IntFilter<"product_price"> | number
  size_id?: Prisma.IntFilter<"product_price"> | number
  price?: Prisma.IntFilter<"product_price"> | number
  is_active?: Prisma.BoolFilter<"product_price"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"product_price"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"product_price"> | Date | string | null
  order_product?: Prisma.Order_productListRelationFilter
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.productWhereInput>
  product_size?: Prisma.XOR<Prisma.Product_sizeScalarRelationFilter, Prisma.product_sizeWhereInput>
}

export type product_priceOrderByWithRelationInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  order_product?: Prisma.order_productOrderByRelationAggregateInput
  product?: Prisma.productOrderByWithRelationInput
  product_size?: Prisma.product_sizeOrderByWithRelationInput
}

export type product_priceWhereUniqueInput = Prisma.AtLeast<{
  product_price_id?: number
  product_id_size_id?: Prisma.product_priceProduct_idSize_idCompoundUniqueInput
  AND?: Prisma.product_priceWhereInput | Prisma.product_priceWhereInput[]
  OR?: Prisma.product_priceWhereInput[]
  NOT?: Prisma.product_priceWhereInput | Prisma.product_priceWhereInput[]
  product_id?: Prisma.IntFilter<"product_price"> | number
  size_id?: Prisma.IntFilter<"product_price"> | number
  price?: Prisma.IntFilter<"product_price"> | number
  is_active?: Prisma.BoolFilter<"product_price"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"product_price"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"product_price"> | Date | string | null
  order_product?: Prisma.Order_productListRelationFilter
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.productWhereInput>
  product_size?: Prisma.XOR<Prisma.Product_sizeScalarRelationFilter, Prisma.product_sizeWhereInput>
}, "product_price_id" | "product_id_size_id">

export type product_priceOrderByWithAggregationInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.product_priceCountOrderByAggregateInput
  _avg?: Prisma.product_priceAvgOrderByAggregateInput
  _max?: Prisma.product_priceMaxOrderByAggregateInput
  _min?: Prisma.product_priceMinOrderByAggregateInput
  _sum?: Prisma.product_priceSumOrderByAggregateInput
}

export type product_priceScalarWhereWithAggregatesInput = {
  AND?: Prisma.product_priceScalarWhereWithAggregatesInput | Prisma.product_priceScalarWhereWithAggregatesInput[]
  OR?: Prisma.product_priceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.product_priceScalarWhereWithAggregatesInput | Prisma.product_priceScalarWhereWithAggregatesInput[]
  product_price_id?: Prisma.IntWithAggregatesFilter<"product_price"> | number
  product_id?: Prisma.IntWithAggregatesFilter<"product_price"> | number
  size_id?: Prisma.IntWithAggregatesFilter<"product_price"> | number
  price?: Prisma.IntWithAggregatesFilter<"product_price"> | number
  is_active?: Prisma.BoolWithAggregatesFilter<"product_price"> | boolean
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"product_price"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"product_price"> | Date | string | null
}

export type product_priceCreateInput = {
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productCreateNestedManyWithoutProduct_priceInput
  product: Prisma.productCreateNestedOneWithoutProduct_priceInput
  product_size: Prisma.product_sizeCreateNestedOneWithoutProduct_priceInput
}

export type product_priceUncheckedCreateInput = {
  product_price_id?: number
  product_id: number
  size_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutProduct_priceInput
}

export type product_priceUpdateInput = {
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUpdateManyWithoutProduct_priceNestedInput
  product?: Prisma.productUpdateOneRequiredWithoutProduct_priceNestedInput
  product_size?: Prisma.product_sizeUpdateOneRequiredWithoutProduct_priceNestedInput
}

export type product_priceUncheckedUpdateInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_id?: Prisma.IntFieldUpdateOperationsInput | number
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutProduct_priceNestedInput
}

export type product_priceCreateManyInput = {
  product_price_id?: number
  product_id: number
  size_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_priceUpdateManyMutationInput = {
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type product_priceUncheckedUpdateManyInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_id?: Prisma.IntFieldUpdateOperationsInput | number
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Product_priceScalarRelationFilter = {
  is?: Prisma.product_priceWhereInput
  isNot?: Prisma.product_priceWhereInput
}

export type Product_priceListRelationFilter = {
  every?: Prisma.product_priceWhereInput
  some?: Prisma.product_priceWhereInput
  none?: Prisma.product_priceWhereInput
}

export type product_priceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type product_priceProduct_idSize_idCompoundUniqueInput = {
  product_id: number
  size_id: number
}

export type product_priceCountOrderByAggregateInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type product_priceAvgOrderByAggregateInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
}

export type product_priceMaxOrderByAggregateInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type product_priceMinOrderByAggregateInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type product_priceSumOrderByAggregateInput = {
  product_price_id?: Prisma.SortOrder
  product_id?: Prisma.SortOrder
  size_id?: Prisma.SortOrder
  price?: Prisma.SortOrder
}

export type product_priceCreateNestedOneWithoutOrder_productInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutOrder_productInput, Prisma.product_priceUncheckedCreateWithoutOrder_productInput>
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutOrder_productInput
  connect?: Prisma.product_priceWhereUniqueInput
}

export type product_priceUpdateOneRequiredWithoutOrder_productNestedInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutOrder_productInput, Prisma.product_priceUncheckedCreateWithoutOrder_productInput>
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutOrder_productInput
  upsert?: Prisma.product_priceUpsertWithoutOrder_productInput
  connect?: Prisma.product_priceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.product_priceUpdateToOneWithWhereWithoutOrder_productInput, Prisma.product_priceUpdateWithoutOrder_productInput>, Prisma.product_priceUncheckedUpdateWithoutOrder_productInput>
}

export type product_priceCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProductInput, Prisma.product_priceUncheckedCreateWithoutProductInput> | Prisma.product_priceCreateWithoutProductInput[] | Prisma.product_priceUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProductInput | Prisma.product_priceCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.product_priceCreateManyProductInputEnvelope
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
}

export type product_priceUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProductInput, Prisma.product_priceUncheckedCreateWithoutProductInput> | Prisma.product_priceCreateWithoutProductInput[] | Prisma.product_priceUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProductInput | Prisma.product_priceCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.product_priceCreateManyProductInputEnvelope
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
}

export type product_priceUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProductInput, Prisma.product_priceUncheckedCreateWithoutProductInput> | Prisma.product_priceCreateWithoutProductInput[] | Prisma.product_priceUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProductInput | Prisma.product_priceCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.product_priceUpsertWithWhereUniqueWithoutProductInput | Prisma.product_priceUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.product_priceCreateManyProductInputEnvelope
  set?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  disconnect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  delete?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  update?: Prisma.product_priceUpdateWithWhereUniqueWithoutProductInput | Prisma.product_priceUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.product_priceUpdateManyWithWhereWithoutProductInput | Prisma.product_priceUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.product_priceScalarWhereInput | Prisma.product_priceScalarWhereInput[]
}

export type product_priceUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProductInput, Prisma.product_priceUncheckedCreateWithoutProductInput> | Prisma.product_priceCreateWithoutProductInput[] | Prisma.product_priceUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProductInput | Prisma.product_priceCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.product_priceUpsertWithWhereUniqueWithoutProductInput | Prisma.product_priceUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.product_priceCreateManyProductInputEnvelope
  set?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  disconnect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  delete?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  update?: Prisma.product_priceUpdateWithWhereUniqueWithoutProductInput | Prisma.product_priceUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.product_priceUpdateManyWithWhereWithoutProductInput | Prisma.product_priceUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.product_priceScalarWhereInput | Prisma.product_priceScalarWhereInput[]
}

export type product_priceCreateNestedManyWithoutProduct_sizeInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProduct_sizeInput, Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput> | Prisma.product_priceCreateWithoutProduct_sizeInput[] | Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput | Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput[]
  createMany?: Prisma.product_priceCreateManyProduct_sizeInputEnvelope
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
}

export type product_priceUncheckedCreateNestedManyWithoutProduct_sizeInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProduct_sizeInput, Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput> | Prisma.product_priceCreateWithoutProduct_sizeInput[] | Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput | Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput[]
  createMany?: Prisma.product_priceCreateManyProduct_sizeInputEnvelope
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
}

export type product_priceUpdateManyWithoutProduct_sizeNestedInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProduct_sizeInput, Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput> | Prisma.product_priceCreateWithoutProduct_sizeInput[] | Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput | Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput[]
  upsert?: Prisma.product_priceUpsertWithWhereUniqueWithoutProduct_sizeInput | Prisma.product_priceUpsertWithWhereUniqueWithoutProduct_sizeInput[]
  createMany?: Prisma.product_priceCreateManyProduct_sizeInputEnvelope
  set?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  disconnect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  delete?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  update?: Prisma.product_priceUpdateWithWhereUniqueWithoutProduct_sizeInput | Prisma.product_priceUpdateWithWhereUniqueWithoutProduct_sizeInput[]
  updateMany?: Prisma.product_priceUpdateManyWithWhereWithoutProduct_sizeInput | Prisma.product_priceUpdateManyWithWhereWithoutProduct_sizeInput[]
  deleteMany?: Prisma.product_priceScalarWhereInput | Prisma.product_priceScalarWhereInput[]
}

export type product_priceUncheckedUpdateManyWithoutProduct_sizeNestedInput = {
  create?: Prisma.XOR<Prisma.product_priceCreateWithoutProduct_sizeInput, Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput> | Prisma.product_priceCreateWithoutProduct_sizeInput[] | Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput[]
  connectOrCreate?: Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput | Prisma.product_priceCreateOrConnectWithoutProduct_sizeInput[]
  upsert?: Prisma.product_priceUpsertWithWhereUniqueWithoutProduct_sizeInput | Prisma.product_priceUpsertWithWhereUniqueWithoutProduct_sizeInput[]
  createMany?: Prisma.product_priceCreateManyProduct_sizeInputEnvelope
  set?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  disconnect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  delete?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  connect?: Prisma.product_priceWhereUniqueInput | Prisma.product_priceWhereUniqueInput[]
  update?: Prisma.product_priceUpdateWithWhereUniqueWithoutProduct_sizeInput | Prisma.product_priceUpdateWithWhereUniqueWithoutProduct_sizeInput[]
  updateMany?: Prisma.product_priceUpdateManyWithWhereWithoutProduct_sizeInput | Prisma.product_priceUpdateManyWithWhereWithoutProduct_sizeInput[]
  deleteMany?: Prisma.product_priceScalarWhereInput | Prisma.product_priceScalarWhereInput[]
}

export type product_priceCreateWithoutOrder_productInput = {
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  product: Prisma.productCreateNestedOneWithoutProduct_priceInput
  product_size: Prisma.product_sizeCreateNestedOneWithoutProduct_priceInput
}

export type product_priceUncheckedCreateWithoutOrder_productInput = {
  product_price_id?: number
  product_id: number
  size_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_priceCreateOrConnectWithoutOrder_productInput = {
  where: Prisma.product_priceWhereUniqueInput
  create: Prisma.XOR<Prisma.product_priceCreateWithoutOrder_productInput, Prisma.product_priceUncheckedCreateWithoutOrder_productInput>
}

export type product_priceUpsertWithoutOrder_productInput = {
  update: Prisma.XOR<Prisma.product_priceUpdateWithoutOrder_productInput, Prisma.product_priceUncheckedUpdateWithoutOrder_productInput>
  create: Prisma.XOR<Prisma.product_priceCreateWithoutOrder_productInput, Prisma.product_priceUncheckedCreateWithoutOrder_productInput>
  where?: Prisma.product_priceWhereInput
}

export type product_priceUpdateToOneWithWhereWithoutOrder_productInput = {
  where?: Prisma.product_priceWhereInput
  data: Prisma.XOR<Prisma.product_priceUpdateWithoutOrder_productInput, Prisma.product_priceUncheckedUpdateWithoutOrder_productInput>
}

export type product_priceUpdateWithoutOrder_productInput = {
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  product?: Prisma.productUpdateOneRequiredWithoutProduct_priceNestedInput
  product_size?: Prisma.product_sizeUpdateOneRequiredWithoutProduct_priceNestedInput
}

export type product_priceUncheckedUpdateWithoutOrder_productInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_id?: Prisma.IntFieldUpdateOperationsInput | number
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type product_priceCreateWithoutProductInput = {
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productCreateNestedManyWithoutProduct_priceInput
  product_size: Prisma.product_sizeCreateNestedOneWithoutProduct_priceInput
}

export type product_priceUncheckedCreateWithoutProductInput = {
  product_price_id?: number
  size_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutProduct_priceInput
}

export type product_priceCreateOrConnectWithoutProductInput = {
  where: Prisma.product_priceWhereUniqueInput
  create: Prisma.XOR<Prisma.product_priceCreateWithoutProductInput, Prisma.product_priceUncheckedCreateWithoutProductInput>
}

export type product_priceCreateManyProductInputEnvelope = {
  data: Prisma.product_priceCreateManyProductInput | Prisma.product_priceCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type product_priceUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.product_priceWhereUniqueInput
  update: Prisma.XOR<Prisma.product_priceUpdateWithoutProductInput, Prisma.product_priceUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.product_priceCreateWithoutProductInput, Prisma.product_priceUncheckedCreateWithoutProductInput>
}

export type product_priceUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.product_priceWhereUniqueInput
  data: Prisma.XOR<Prisma.product_priceUpdateWithoutProductInput, Prisma.product_priceUncheckedUpdateWithoutProductInput>
}

export type product_priceUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.product_priceScalarWhereInput
  data: Prisma.XOR<Prisma.product_priceUpdateManyMutationInput, Prisma.product_priceUncheckedUpdateManyWithoutProductInput>
}

export type product_priceScalarWhereInput = {
  AND?: Prisma.product_priceScalarWhereInput | Prisma.product_priceScalarWhereInput[]
  OR?: Prisma.product_priceScalarWhereInput[]
  NOT?: Prisma.product_priceScalarWhereInput | Prisma.product_priceScalarWhereInput[]
  product_price_id?: Prisma.IntFilter<"product_price"> | number
  product_id?: Prisma.IntFilter<"product_price"> | number
  size_id?: Prisma.IntFilter<"product_price"> | number
  price?: Prisma.IntFilter<"product_price"> | number
  is_active?: Prisma.BoolFilter<"product_price"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"product_price"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"product_price"> | Date | string | null
}

export type product_priceCreateWithoutProduct_sizeInput = {
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productCreateNestedManyWithoutProduct_priceInput
  product: Prisma.productCreateNestedOneWithoutProduct_priceInput
}

export type product_priceUncheckedCreateWithoutProduct_sizeInput = {
  product_price_id?: number
  product_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
  order_product?: Prisma.order_productUncheckedCreateNestedManyWithoutProduct_priceInput
}

export type product_priceCreateOrConnectWithoutProduct_sizeInput = {
  where: Prisma.product_priceWhereUniqueInput
  create: Prisma.XOR<Prisma.product_priceCreateWithoutProduct_sizeInput, Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput>
}

export type product_priceCreateManyProduct_sizeInputEnvelope = {
  data: Prisma.product_priceCreateManyProduct_sizeInput | Prisma.product_priceCreateManyProduct_sizeInput[]
  skipDuplicates?: boolean
}

export type product_priceUpsertWithWhereUniqueWithoutProduct_sizeInput = {
  where: Prisma.product_priceWhereUniqueInput
  update: Prisma.XOR<Prisma.product_priceUpdateWithoutProduct_sizeInput, Prisma.product_priceUncheckedUpdateWithoutProduct_sizeInput>
  create: Prisma.XOR<Prisma.product_priceCreateWithoutProduct_sizeInput, Prisma.product_priceUncheckedCreateWithoutProduct_sizeInput>
}

export type product_priceUpdateWithWhereUniqueWithoutProduct_sizeInput = {
  where: Prisma.product_priceWhereUniqueInput
  data: Prisma.XOR<Prisma.product_priceUpdateWithoutProduct_sizeInput, Prisma.product_priceUncheckedUpdateWithoutProduct_sizeInput>
}

export type product_priceUpdateManyWithWhereWithoutProduct_sizeInput = {
  where: Prisma.product_priceScalarWhereInput
  data: Prisma.XOR<Prisma.product_priceUpdateManyMutationInput, Prisma.product_priceUncheckedUpdateManyWithoutProduct_sizeInput>
}

export type product_priceCreateManyProductInput = {
  product_price_id?: number
  size_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_priceUpdateWithoutProductInput = {
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUpdateManyWithoutProduct_priceNestedInput
  product_size?: Prisma.product_sizeUpdateOneRequiredWithoutProduct_priceNestedInput
}

export type product_priceUncheckedUpdateWithoutProductInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutProduct_priceNestedInput
}

export type product_priceUncheckedUpdateManyWithoutProductInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  size_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type product_priceCreateManyProduct_sizeInput = {
  product_price_id?: number
  product_id: number
  price: number
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type product_priceUpdateWithoutProduct_sizeInput = {
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUpdateManyWithoutProduct_priceNestedInput
  product?: Prisma.productUpdateOneRequiredWithoutProduct_priceNestedInput
}

export type product_priceUncheckedUpdateWithoutProduct_sizeInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  order_product?: Prisma.order_productUncheckedUpdateManyWithoutProduct_priceNestedInput
}

export type product_priceUncheckedUpdateManyWithoutProduct_sizeInput = {
  product_price_id?: Prisma.IntFieldUpdateOperationsInput | number
  product_id?: Prisma.IntFieldUpdateOperationsInput | number
  price?: Prisma.IntFieldUpdateOperationsInput | number
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type Product_priceCountOutputType
 */

export type Product_priceCountOutputType = {
  order_product: number
}

export type Product_priceCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order_product?: boolean | Product_priceCountOutputTypeCountOrder_productArgs
}

/**
 * Product_priceCountOutputType without action
 */
export type Product_priceCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Product_priceCountOutputType
   */
  select?: Prisma.Product_priceCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Product_priceCountOutputType without action
 */
export type Product_priceCountOutputTypeCountOrder_productArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_productWhereInput
}


export type product_priceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  product_price_id?: boolean
  product_id?: boolean
  size_id?: boolean
  price?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
  order_product?: boolean | Prisma.product_price$order_productArgs<ExtArgs>
  product?: boolean | Prisma.productDefaultArgs<ExtArgs>
  product_size?: boolean | Prisma.product_sizeDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.Product_priceCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["product_price"]>

export type product_priceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  product_price_id?: boolean
  product_id?: boolean
  size_id?: boolean
  price?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
  product?: boolean | Prisma.productDefaultArgs<ExtArgs>
  product_size?: boolean | Prisma.product_sizeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["product_price"]>

export type product_priceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  product_price_id?: boolean
  product_id?: boolean
  size_id?: boolean
  price?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
  product?: boolean | Prisma.productDefaultArgs<ExtArgs>
  product_size?: boolean | Prisma.product_sizeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["product_price"]>

export type product_priceSelectScalar = {
  product_price_id?: boolean
  product_id?: boolean
  size_id?: boolean
  price?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type product_priceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"product_price_id" | "product_id" | "size_id" | "price" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["product_price"]>
export type product_priceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order_product?: boolean | Prisma.product_price$order_productArgs<ExtArgs>
  product?: boolean | Prisma.productDefaultArgs<ExtArgs>
  product_size?: boolean | Prisma.product_sizeDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.Product_priceCountOutputTypeDefaultArgs<ExtArgs>
}
export type product_priceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.productDefaultArgs<ExtArgs>
  product_size?: boolean | Prisma.product_sizeDefaultArgs<ExtArgs>
}
export type product_priceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.productDefaultArgs<ExtArgs>
  product_size?: boolean | Prisma.product_sizeDefaultArgs<ExtArgs>
}

export type $product_pricePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "product_price"
  objects: {
    order_product: Prisma.$order_productPayload<ExtArgs>[]
    product: Prisma.$productPayload<ExtArgs>
    product_size: Prisma.$product_sizePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    product_price_id: number
    product_id: number
    size_id: number
    price: number
    is_active: boolean
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["product_price"]>
  composites: {}
}

export type product_priceGetPayload<S extends boolean | null | undefined | product_priceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$product_pricePayload, S>

export type product_priceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<product_priceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Product_priceCountAggregateInputType | true
  }

export interface product_priceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_price'], meta: { name: 'product_price' } }
  /**
   * Find zero or one Product_price that matches the filter.
   * @param {product_priceFindUniqueArgs} args - Arguments to find a Product_price
   * @example
   * // Get one Product_price
   * const product_price = await prisma.product_price.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends product_priceFindUniqueArgs>(args: Prisma.SelectSubset<T, product_priceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Product_price that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {product_priceFindUniqueOrThrowArgs} args - Arguments to find a Product_price
   * @example
   * // Get one Product_price
   * const product_price = await prisma.product_price.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends product_priceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, product_priceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Product_price that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_priceFindFirstArgs} args - Arguments to find a Product_price
   * @example
   * // Get one Product_price
   * const product_price = await prisma.product_price.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends product_priceFindFirstArgs>(args?: Prisma.SelectSubset<T, product_priceFindFirstArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Product_price that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_priceFindFirstOrThrowArgs} args - Arguments to find a Product_price
   * @example
   * // Get one Product_price
   * const product_price = await prisma.product_price.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends product_priceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, product_priceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Product_prices that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_priceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Product_prices
   * const product_prices = await prisma.product_price.findMany()
   * 
   * // Get first 10 Product_prices
   * const product_prices = await prisma.product_price.findMany({ take: 10 })
   * 
   * // Only select the `product_price_id`
   * const product_priceWithProduct_price_idOnly = await prisma.product_price.findMany({ select: { product_price_id: true } })
   * 
   */
  findMany<T extends product_priceFindManyArgs>(args?: Prisma.SelectSubset<T, product_priceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Product_price.
   * @param {product_priceCreateArgs} args - Arguments to create a Product_price.
   * @example
   * // Create one Product_price
   * const Product_price = await prisma.product_price.create({
   *   data: {
   *     // ... data to create a Product_price
   *   }
   * })
   * 
   */
  create<T extends product_priceCreateArgs>(args: Prisma.SelectSubset<T, product_priceCreateArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Product_prices.
   * @param {product_priceCreateManyArgs} args - Arguments to create many Product_prices.
   * @example
   * // Create many Product_prices
   * const product_price = await prisma.product_price.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends product_priceCreateManyArgs>(args?: Prisma.SelectSubset<T, product_priceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Product_prices and returns the data saved in the database.
   * @param {product_priceCreateManyAndReturnArgs} args - Arguments to create many Product_prices.
   * @example
   * // Create many Product_prices
   * const product_price = await prisma.product_price.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Product_prices and only return the `product_price_id`
   * const product_priceWithProduct_price_idOnly = await prisma.product_price.createManyAndReturn({
   *   select: { product_price_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends product_priceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, product_priceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Product_price.
   * @param {product_priceDeleteArgs} args - Arguments to delete one Product_price.
   * @example
   * // Delete one Product_price
   * const Product_price = await prisma.product_price.delete({
   *   where: {
   *     // ... filter to delete one Product_price
   *   }
   * })
   * 
   */
  delete<T extends product_priceDeleteArgs>(args: Prisma.SelectSubset<T, product_priceDeleteArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Product_price.
   * @param {product_priceUpdateArgs} args - Arguments to update one Product_price.
   * @example
   * // Update one Product_price
   * const product_price = await prisma.product_price.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends product_priceUpdateArgs>(args: Prisma.SelectSubset<T, product_priceUpdateArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Product_prices.
   * @param {product_priceDeleteManyArgs} args - Arguments to filter Product_prices to delete.
   * @example
   * // Delete a few Product_prices
   * const { count } = await prisma.product_price.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends product_priceDeleteManyArgs>(args?: Prisma.SelectSubset<T, product_priceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Product_prices.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_priceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Product_prices
   * const product_price = await prisma.product_price.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends product_priceUpdateManyArgs>(args: Prisma.SelectSubset<T, product_priceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Product_prices and returns the data updated in the database.
   * @param {product_priceUpdateManyAndReturnArgs} args - Arguments to update many Product_prices.
   * @example
   * // Update many Product_prices
   * const product_price = await prisma.product_price.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Product_prices and only return the `product_price_id`
   * const product_priceWithProduct_price_idOnly = await prisma.product_price.updateManyAndReturn({
   *   select: { product_price_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends product_priceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, product_priceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Product_price.
   * @param {product_priceUpsertArgs} args - Arguments to update or create a Product_price.
   * @example
   * // Update or create a Product_price
   * const product_price = await prisma.product_price.upsert({
   *   create: {
   *     // ... data to create a Product_price
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Product_price we want to update
   *   }
   * })
   */
  upsert<T extends product_priceUpsertArgs>(args: Prisma.SelectSubset<T, product_priceUpsertArgs<ExtArgs>>): Prisma.Prisma__product_priceClient<runtime.Types.Result.GetResult<Prisma.$product_pricePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Product_prices.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_priceCountArgs} args - Arguments to filter Product_prices to count.
   * @example
   * // Count the number of Product_prices
   * const count = await prisma.product_price.count({
   *   where: {
   *     // ... the filter for the Product_prices we want to count
   *   }
   * })
  **/
  count<T extends product_priceCountArgs>(
    args?: Prisma.Subset<T, product_priceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Product_priceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Product_price.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Product_priceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Product_priceAggregateArgs>(args: Prisma.Subset<T, Product_priceAggregateArgs>): Prisma.PrismaPromise<GetProduct_priceAggregateType<T>>

  /**
   * Group by Product_price.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {product_priceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends product_priceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: product_priceGroupByArgs['orderBy'] }
      : { orderBy?: product_priceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, product_priceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_priceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the product_price model
 */
readonly fields: product_priceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for product_price.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__product_priceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  order_product<T extends Prisma.product_price$order_productArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.product_price$order_productArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  product<T extends Prisma.productDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.productDefaultArgs<ExtArgs>>): Prisma.Prisma__productClient<runtime.Types.Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  product_size<T extends Prisma.product_sizeDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.product_sizeDefaultArgs<ExtArgs>>): Prisma.Prisma__product_sizeClient<runtime.Types.Result.GetResult<Prisma.$product_sizePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the product_price model
 */
export interface product_priceFieldRefs {
  readonly product_price_id: Prisma.FieldRef<"product_price", 'Int'>
  readonly product_id: Prisma.FieldRef<"product_price", 'Int'>
  readonly size_id: Prisma.FieldRef<"product_price", 'Int'>
  readonly price: Prisma.FieldRef<"product_price", 'Int'>
  readonly is_active: Prisma.FieldRef<"product_price", 'Boolean'>
  readonly created_at: Prisma.FieldRef<"product_price", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"product_price", 'DateTime'>
}
    

// Custom InputTypes
/**
 * product_price findUnique
 */
export type product_priceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * Filter, which product_price to fetch.
   */
  where: Prisma.product_priceWhereUniqueInput
}

/**
 * product_price findUniqueOrThrow
 */
export type product_priceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * Filter, which product_price to fetch.
   */
  where: Prisma.product_priceWhereUniqueInput
}

/**
 * product_price findFirst
 */
export type product_priceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * Filter, which product_price to fetch.
   */
  where?: Prisma.product_priceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_prices to fetch.
   */
  orderBy?: Prisma.product_priceOrderByWithRelationInput | Prisma.product_priceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for product_prices.
   */
  cursor?: Prisma.product_priceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_prices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_prices.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of product_prices.
   */
  distinct?: Prisma.Product_priceScalarFieldEnum | Prisma.Product_priceScalarFieldEnum[]
}

/**
 * product_price findFirstOrThrow
 */
export type product_priceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * Filter, which product_price to fetch.
   */
  where?: Prisma.product_priceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_prices to fetch.
   */
  orderBy?: Prisma.product_priceOrderByWithRelationInput | Prisma.product_priceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for product_prices.
   */
  cursor?: Prisma.product_priceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_prices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_prices.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of product_prices.
   */
  distinct?: Prisma.Product_priceScalarFieldEnum | Prisma.Product_priceScalarFieldEnum[]
}

/**
 * product_price findMany
 */
export type product_priceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * Filter, which product_prices to fetch.
   */
  where?: Prisma.product_priceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of product_prices to fetch.
   */
  orderBy?: Prisma.product_priceOrderByWithRelationInput | Prisma.product_priceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing product_prices.
   */
  cursor?: Prisma.product_priceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` product_prices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` product_prices.
   */
  skip?: number
  distinct?: Prisma.Product_priceScalarFieldEnum | Prisma.Product_priceScalarFieldEnum[]
}

/**
 * product_price create
 */
export type product_priceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * The data needed to create a product_price.
   */
  data: Prisma.XOR<Prisma.product_priceCreateInput, Prisma.product_priceUncheckedCreateInput>
}

/**
 * product_price createMany
 */
export type product_priceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many product_prices.
   */
  data: Prisma.product_priceCreateManyInput | Prisma.product_priceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * product_price createManyAndReturn
 */
export type product_priceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * The data used to create many product_prices.
   */
  data: Prisma.product_priceCreateManyInput | Prisma.product_priceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * product_price update
 */
export type product_priceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * The data needed to update a product_price.
   */
  data: Prisma.XOR<Prisma.product_priceUpdateInput, Prisma.product_priceUncheckedUpdateInput>
  /**
   * Choose, which product_price to update.
   */
  where: Prisma.product_priceWhereUniqueInput
}

/**
 * product_price updateMany
 */
export type product_priceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update product_prices.
   */
  data: Prisma.XOR<Prisma.product_priceUpdateManyMutationInput, Prisma.product_priceUncheckedUpdateManyInput>
  /**
   * Filter which product_prices to update
   */
  where?: Prisma.product_priceWhereInput
  /**
   * Limit how many product_prices to update.
   */
  limit?: number
}

/**
 * product_price updateManyAndReturn
 */
export type product_priceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * The data used to update product_prices.
   */
  data: Prisma.XOR<Prisma.product_priceUpdateManyMutationInput, Prisma.product_priceUncheckedUpdateManyInput>
  /**
   * Filter which product_prices to update
   */
  where?: Prisma.product_priceWhereInput
  /**
   * Limit how many product_prices to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * product_price upsert
 */
export type product_priceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * The filter to search for the product_price to update in case it exists.
   */
  where: Prisma.product_priceWhereUniqueInput
  /**
   * In case the product_price found by the `where` argument doesn't exist, create a new product_price with this data.
   */
  create: Prisma.XOR<Prisma.product_priceCreateInput, Prisma.product_priceUncheckedCreateInput>
  /**
   * In case the product_price was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.product_priceUpdateInput, Prisma.product_priceUncheckedUpdateInput>
}

/**
 * product_price delete
 */
export type product_priceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
  /**
   * Filter which product_price to delete.
   */
  where: Prisma.product_priceWhereUniqueInput
}

/**
 * product_price deleteMany
 */
export type product_priceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which product_prices to delete
   */
  where?: Prisma.product_priceWhereInput
  /**
   * Limit how many product_prices to delete.
   */
  limit?: number
}

/**
 * product_price.order_product
 */
export type product_price$order_productArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_product
   */
  select?: Prisma.order_productSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_product
   */
  omit?: Prisma.order_productOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_productInclude<ExtArgs> | null
  where?: Prisma.order_productWhereInput
  orderBy?: Prisma.order_productOrderByWithRelationInput | Prisma.order_productOrderByWithRelationInput[]
  cursor?: Prisma.order_productWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Order_productScalarFieldEnum | Prisma.Order_productScalarFieldEnum[]
}

/**
 * product_price without action
 */
export type product_priceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the product_price
   */
  select?: Prisma.product_priceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the product_price
   */
  omit?: Prisma.product_priceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.product_priceInclude<ExtArgs> | null
}
