Index: frontend/pos/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n/.pnp\n.pnp.*\n.yarn/*\n!.yarn/patches\n!.yarn/plugins\n!.yarn/releases\n!.yarn/versions\n\n# testing\n/coverage\n\n# next.js\n/.next/\n/out/\n\n# production\n/build\n\n# misc\n.DS_Store\n*.pem\n\n# debug\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n.pnpm-debug.log*\n\n# env files (can opt-in for committing if needed)\n.env*\n\n# vercel\n.vercel\n\n# typescript\n*.tsbuildinfo\nnext-env.d.ts\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.gitignore b/frontend/pos/.gitignore
--- a/frontend/pos/.gitignore	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/.gitignore	(date 1750218154145)
@@ -39,3 +39,7 @@
 # typescript
 *.tsbuildinfo
 next-env.d.ts
+
+!.env.development
+
+certificates
\ No newline at end of file
Index: frontend/manager/src/app/orders/processing/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/orders/processing/page.tsx b/frontend/manager/src/app/orders/processing/page.tsx
new file mode 100644
--- /dev/null	(date 1750217630661)
+++ b/frontend/manager/src/app/orders/processing/page.tsx	(date 1750217630661)
@@ -0,0 +1,381 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter } from "next/navigation";
+import { MoreHorizontal, Eye, XCircle, Trash2, RefreshCw, Loader2, Clock } from "lucide-react";
+import { ColumnDef } from "@tanstack/react-table";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import { DataTable } from "@/components/ui/data-table";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+
+import { Order } from "@/types/api";
+import { useOrdersStore } from "@/stores/orders";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit", 
+    day: "2-digit",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+function getPaymentStatusBadgeVariant(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'default';
+    case 'PROCESSING':
+      return 'secondary';
+    case 'CANCELLED':
+      return 'destructive';
+    default:
+      return 'outline';
+  }
+}
+
+function getPaymentStatusDisplay(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'Đã Thanh Toán';
+    case 'PROCESSING':
+      return 'Đang Xử Lý';
+    case 'CANCELLED':
+      return 'Đã Hủy';
+    default:
+      return 'Chưa Thanh Toán';
+  }
+}
+
+export default function ProcessingOrdersPage() {
+  const router = useRouter();
+  
+  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);
+  const [isCancelDialogOpen, setIsCancelDialogOpen] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+
+  const {
+    orders,
+    isLoading,
+    isUpdating,
+    isDeleting,
+    fetchOrdersByStatus,
+    cancelOrder,
+    deleteOrder,
+  } = useOrdersStore();
+
+  useEffect(() => {
+    fetchOrdersByStatus('PROCESSING');
+  }, [fetchOrdersByStatus]);
+
+  const handleRefresh = async () => {
+    await fetchOrdersByStatus('PROCESSING');
+    toast.success("Đã làm mới danh sách đơn hàng!");
+  };
+
+  const handleCancelOrder = async () => {
+    if (!selectedOrder) return;
+    
+    try {
+      await cancelOrder(selectedOrder.id);
+      setIsCancelDialogOpen(false);
+      setSelectedOrder(null);
+      toast.success("Đã hủy đơn hàng thành công!");
+    } catch (error) {
+      console.error("Lỗi hủy đơn hàng:", error);
+      toast.error("Không thể hủy đơn hàng. Vui lòng thử lại.");
+    }
+  };
+
+  const handleDeleteOrder = async () => {
+    if (!selectedOrder) return;
+    
+    try {
+      await deleteOrder(selectedOrder.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedOrder(null);
+      toast.success("Đã xóa đơn hàng thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa đơn hàng:", error);
+      toast.error("Không thể xóa đơn hàng. Vui lòng thử lại.");
+    }
+  };
+
+  const openCancelDialog = (order: Order) => {
+    setSelectedOrder(order);
+    setIsCancelDialogOpen(true);
+  };
+
+  const openDeleteDialog = (order: Order) => {
+    setSelectedOrder(order);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const columns: ColumnDef<Order>[] = [
+    {
+      accessorKey: "id",
+      header: "ID Đơn Hàng",
+      cell: ({ row }) => {
+        return (
+          <div className="font-medium">
+            #{row.getValue("id")}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "customerName",
+      header: "Khách Hàng",
+      cell: ({ row }) => {
+        const order = row.original;
+        const customerName = order.customerName || order.customer?.name || "Khách lẻ";
+        
+        return (
+          <div className="flex items-center gap-3">
+            <Avatar className="h-8 w-8">
+              <AvatarImage src="" alt={customerName} />
+              <AvatarFallback>
+                {customerName.split(' ').map(n => n[0]).join('').slice(0, 2)}
+              </AvatarFallback>
+            </Avatar>
+            <div>
+              <div className="font-medium">{customerName}</div>
+              {order.customerId && (
+                <div className="text-sm text-muted-foreground">ID: {order.customerId}</div>
+              )}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "employeeName",
+      header: "Nhân Viên",
+      cell: ({ row }) => {
+        const order = row.original;
+        const employeeName = order.employeeName || order.employee?.name || "N/A";
+        
+        return (
+          <div>
+            <div className="font-medium">{employeeName}</div>
+            {order.employeeId && (
+              <div className="text-sm text-muted-foreground">ID: {order.employeeId}</div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "totalAmount",
+      header: "Tổng Tiền",
+      cell: ({ row }) => {
+        return (
+          <div className="text-right">
+            <div className="font-medium">{formatCurrency(row.getValue("totalAmount"))}</div>
+            <div className="text-sm text-muted-foreground">
+              Thành tiền: {formatCurrency(row.original.finalAmount)}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "paymentStatus",
+      header: "Thanh Toán",
+      cell: ({ row }) => {
+        const paymentStatus = row.original.paymentStatus;
+        return (
+          <div className="space-y-1">
+            <Badge variant={getPaymentStatusBadgeVariant(paymentStatus)}>
+              {getPaymentStatusDisplay(paymentStatus)}
+            </Badge>
+            {row.original.paymentMethod && (
+              <div className="text-xs text-muted-foreground">
+                {row.original.paymentMethod}
+              </div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "createdAt",
+      header: "Thời Gian",
+      cell: ({ row }) => {
+        const date = row.getValue("createdAt") as Date;
+        return (
+          <div className="text-sm">
+            {formatDate(date)}
+          </div>
+        );
+      },
+    },
+    {
+      id: "actions",
+      header: "Thao Tác",
+      cell: ({ row }) => {
+        const order = row.original;
+        
+        return (
+          <DropdownMenu>
+            <DropdownMenuTrigger asChild>
+              <Button variant="ghost" size="icon">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem onClick={() => router.push(`/orders/${order.id}`)}>
+                <Eye className="mr-2 h-4 w-4" />
+                Xem Chi Tiết
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-amber-600"
+                onClick={() => openCancelDialog(order)}
+              >
+                <XCircle className="mr-2 h-4 w-4" />
+                Hủy Đơn Hàng
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-destructive"
+                onClick={() => openDeleteDialog(order)}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
+        );
+      },
+    },
+  ];
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold flex items-center gap-2">
+            <Clock className="h-8 w-8 text-blue-600" />
+            Đơn Hàng Đang Xử Lý
+          </h1>
+          <p className="text-muted-foreground">
+            Quản lý các đơn hàng đang được xử lý trong hệ thống
+          </p>
+        </div>
+        <div className="flex items-center space-x-2">
+          <Button variant="outline" onClick={handleRefresh}>
+            <RefreshCw className="mr-2 h-4 w-4" />
+            Làm Mới
+          </Button>
+        </div>
+      </div>
+
+      {/* Orders Data Table */}
+      <Card>
+        <CardContent className="p-0">
+          <DataTable 
+            columns={columns} 
+            data={orders}
+            searchKey="id"
+            searchPlaceholder="Tìm kiếm theo ID đơn hàng..."
+          />
+        </CardContent>
+      </Card>
+
+      {/* Cancel Order Dialog */}
+      <AlertDialog open={isCancelDialogOpen} onOpenChange={setIsCancelDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận hủy đơn hàng</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn hủy đơn hàng <strong>#{selectedOrder?.id}</strong>? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleCancelOrder}
+              disabled={isUpdating}
+              className="bg-amber-600 text-white hover:bg-amber-700"
+            >
+              {isUpdating ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang hủy...
+                </>
+              ) : (
+                "Xác nhận hủy"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+
+      {/* Delete Order Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa đơn hàng</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa đơn hàng <strong>#{selectedOrder?.id}</strong>? 
+              Hành động này không thể hoàn tác và sẽ xóa vĩnh viễn tất cả dữ liệu liên quan.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteOrder}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa đơn hàng"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/src/app/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {children}\n      </body>\n    </html>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/app/layout.tsx b/frontend/pos/src/app/layout.tsx
--- a/frontend/pos/src/app/layout.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/src/app/layout.tsx	(date 1750225117801)
@@ -1,20 +1,21 @@
 import type { Metadata } from "next";
 import { Geist, Geist_Mono } from "next/font/google";
 import "./globals.css";
+import { Toaster } from "@/components/ui/sonner";
+import { AuthProvider } from "@/components/providers/auth-provider";
 
 const geistSans = Geist({
   variable: "--font-geist-sans",
   subsets: ["latin"],
 });
-
 const geistMono = Geist_Mono({
   variable: "--font-geist-mono",
   subsets: ["latin"],
 });
 
 export const metadata: Metadata = {
-  title: "Create Next App",
-  description: "Generated by create next app",
+  title: "Cake POS - Hệ thống bán hàng",
+  description: "Hệ thống bán hàng cho cửa hàng bánh",
 };
 
 export default function RootLayout({
@@ -23,11 +24,14 @@
   children: React.ReactNode;
 }>) {
   return (
-    <html lang="en">
+    <html lang="vi">
       <body
         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
       >
-        {children}
+        <AuthProvider>
+          {children}
+        </AuthProvider>
+        <Toaster position="top-center" richColors />
       </body>
     </html>
   );
Index: frontend/manager/src/app/orders/completed/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/orders/completed/page.tsx b/frontend/manager/src/app/orders/completed/page.tsx
new file mode 100644
--- /dev/null	(date 1750217633309)
+++ b/frontend/manager/src/app/orders/completed/page.tsx	(date 1750217633309)
@@ -0,0 +1,322 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter } from "next/navigation";
+import { MoreHorizontal, Eye, Trash2, RefreshCw, Loader2, CheckCircle } from "lucide-react";
+import { ColumnDef } from "@tanstack/react-table";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import { DataTable } from "@/components/ui/data-table";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+
+import { Order } from "@/types/api";
+import { useOrdersStore } from "@/stores/orders";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit", 
+    day: "2-digit",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+function getPaymentStatusBadgeVariant(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'default';
+    case 'PROCESSING':
+      return 'secondary';
+    case 'CANCELLED':
+      return 'destructive';
+    default:
+      return 'outline';
+  }
+}
+
+function getPaymentStatusDisplay(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'Đã Thanh Toán';
+    case 'PROCESSING':
+      return 'Đang Xử Lý';
+    case 'CANCELLED':
+      return 'Đã Hủy';
+    default:
+      return 'Chưa Thanh Toán';
+  }
+}
+
+export default function CompletedOrdersPage() {
+  const router = useRouter();
+  
+  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+
+  const {
+    orders,
+    isLoading,
+    isDeleting,
+    fetchOrdersByStatus,
+    deleteOrder,
+  } = useOrdersStore();
+
+  useEffect(() => {
+    fetchOrdersByStatus('COMPLETED');
+  }, [fetchOrdersByStatus]);
+
+  const handleRefresh = async () => {
+    await fetchOrdersByStatus('COMPLETED');
+    toast.success("Đã làm mới danh sách đơn hàng!");
+  };
+
+  const handleDeleteOrder = async () => {
+    if (!selectedOrder) return;
+    
+    try {
+      await deleteOrder(selectedOrder.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedOrder(null);
+      toast.success("Đã xóa đơn hàng thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa đơn hàng:", error);
+      toast.error("Không thể xóa đơn hàng. Vui lòng thử lại.");
+    }
+  };
+
+  const openDeleteDialog = (order: Order) => {
+    setSelectedOrder(order);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const columns: ColumnDef<Order>[] = [
+    {
+      accessorKey: "id",
+      header: "ID Đơn Hàng",
+      cell: ({ row }) => {
+        return (
+          <div className="font-medium">
+            #{row.getValue("id")}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "customerName",
+      header: "Khách Hàng",
+      cell: ({ row }) => {
+        const order = row.original;
+        const customerName = order.customerName || order.customer?.name || "Khách lẻ";
+        
+        return (
+          <div className="flex items-center gap-3">
+            <Avatar className="h-8 w-8">
+              <AvatarImage src="" alt={customerName} />
+              <AvatarFallback>
+                {customerName.split(' ').map(n => n[0]).join('').slice(0, 2)}
+              </AvatarFallback>
+            </Avatar>
+            <div>
+              <div className="font-medium">{customerName}</div>
+              {order.customerId && (
+                <div className="text-sm text-muted-foreground">ID: {order.customerId}</div>
+              )}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "employeeName",
+      header: "Nhân Viên",
+      cell: ({ row }) => {
+        const order = row.original;
+        const employeeName = order.employeeName || order.employee?.name || "N/A";
+        
+        return (
+          <div>
+            <div className="font-medium">{employeeName}</div>
+            {order.employeeId && (
+              <div className="text-sm text-muted-foreground">ID: {order.employeeId}</div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "totalAmount",
+      header: "Tổng Tiền",
+      cell: ({ row }) => {
+        return (
+          <div className="text-right">
+            <div className="font-medium">{formatCurrency(row.getValue("totalAmount"))}</div>
+            <div className="text-sm text-muted-foreground">
+              Thành tiền: {formatCurrency(row.original.finalAmount)}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "paymentStatus",
+      header: "Thanh Toán",
+      cell: ({ row }) => {
+        const paymentStatus = row.original.paymentStatus;
+        return (
+          <div className="space-y-1">
+            <Badge variant={getPaymentStatusBadgeVariant(paymentStatus)}>
+              {getPaymentStatusDisplay(paymentStatus)}
+            </Badge>
+            {row.original.paymentMethod && (
+              <div className="text-xs text-muted-foreground">
+                {row.original.paymentMethod}
+              </div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "createdAt",
+      header: "Thời Gian",
+      cell: ({ row }) => {
+        const date = row.getValue("createdAt") as Date;
+        return (
+          <div className="text-sm">
+            {formatDate(date)}
+          </div>
+        );
+      },
+    },
+    {
+      id: "actions",
+      header: "Thao Tác",
+      cell: ({ row }) => {
+        const order = row.original;
+        
+        return (
+          <DropdownMenu>
+            <DropdownMenuTrigger asChild>
+              <Button variant="ghost" size="icon">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem onClick={() => router.push(`/orders/${order.id}`)}>
+                <Eye className="mr-2 h-4 w-4" />
+                Xem Chi Tiết
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-destructive"
+                onClick={() => openDeleteDialog(order)}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
+        );
+      },
+    },
+  ];
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold flex items-center gap-2">
+            <CheckCircle className="h-8 w-8 text-green-600" />
+            Đơn Hàng Đã Hoàn Thành
+          </h1>
+          <p className="text-muted-foreground">
+            Danh sách các đơn hàng đã hoàn thành thành công
+          </p>
+        </div>
+        <div className="flex items-center space-x-2">
+          <Button variant="outline" onClick={handleRefresh}>
+            <RefreshCw className="mr-2 h-4 w-4" />
+            Làm Mới
+          </Button>
+        </div>
+      </div>
+
+      {/* Orders Data Table */}
+      <Card>
+        <CardContent className="p-0">
+          <DataTable 
+            columns={columns} 
+            data={orders}
+            searchKey="id"
+            searchPlaceholder="Tìm kiếm theo ID đơn hàng..."
+          />
+        </CardContent>
+      </Card>
+
+      {/* Delete Order Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa đơn hàng</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa đơn hàng <strong>#{selectedOrder?.id}</strong>? 
+              Hành động này không thể hoàn tác và sẽ xóa vĩnh viễn tất cả dữ liệu liên quan.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteOrder}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa đơn hàng"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/src/app/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Image from \"next/image\";\n\nexport default function Home() {\n  return (\n    <div className=\"grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]\">\n      <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start\">\n        <Image\n          className=\"dark:invert\"\n          src=\"/next.svg\"\n          alt=\"Next.js logo\"\n          width={180}\n          height={38}\n          priority\n        />\n        <ol className=\"list-inside list-decimal text-sm/6 text-center sm:text-left font-[family-name:var(--font-geist-mono)]\">\n          <li className=\"mb-2 tracking-[-.01em]\">\n            Get started by editing{\" \"}\n            <code className=\"bg-black/[.05] dark:bg-white/[.06] px-1 py-0.5 rounded font-[family-name:var(--font-geist-mono)] font-semibold\">\n              src/app/page.tsx\n            </code>\n            .\n          </li>\n          <li className=\"tracking-[-.01em]\">\n            Save and see your changes instantly.\n          </li>\n        </ol>\n\n        <div className=\"flex gap-4 items-center flex-col sm:flex-row\">\n          <a\n            className=\"rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto\"\n            href=\"https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Image\n              className=\"dark:invert\"\n              src=\"/vercel.svg\"\n              alt=\"Vercel logomark\"\n              width={20}\n              height={20}\n            />\n            Deploy now\n          </a>\n          <a\n            className=\"rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]\"\n            href=\"https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Read our docs\n          </a>\n        </div>\n      </main>\n      <footer className=\"row-start-3 flex gap-[24px] flex-wrap items-center justify-center\">\n        <a\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4\"\n          href=\"https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image\n            aria-hidden\n            src=\"/file.svg\"\n            alt=\"File icon\"\n            width={16}\n            height={16}\n          />\n          Learn\n        </a>\n        <a\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4\"\n          href=\"https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image\n            aria-hidden\n            src=\"/window.svg\"\n            alt=\"Window icon\"\n            width={16}\n            height={16}\n          />\n          Examples\n        </a>\n        <a\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4\"\n          href=\"https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image\n            aria-hidden\n            src=\"/globe.svg\"\n            alt=\"Globe icon\"\n            width={16}\n            height={16}\n          />\n          Go to nextjs.org →\n        </a>\n      </footer>\n    </div>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/app/page.tsx b/frontend/pos/src/app/page.tsx
--- a/frontend/pos/src/app/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/src/app/page.tsx	(date 1750226299748)
@@ -1,103 +1,140 @@
-import Image from "next/image";
+"use client";
+
+import { useEffect } from "react";
+import { useRouter } from "next/navigation";
+import { useAuthStore } from "@/stores/auth";
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
 
-export default function Home() {
+export default function HomePage() {
+  const { user, isAuthenticated, logout } = useAuthStore();
+  const router = useRouter();
+
+  useEffect(() => {
+    if (!isAuthenticated) {
+      router.push("/login");
+    } else {
+      router.push("/pos");
+    }
+  }, [isAuthenticated, router]);
+
+  if (!isAuthenticated) {
+    return (
+      <div className="min-h-screen flex items-center justify-center">
+        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
+      </div>
+    );
+  }
+
+  const handleLogout = async () => {
+    await logout();
+    router.push("/login");
+  };
+
   return (
-    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]">
-      <main className="flex flex-col gap-[32px] row-start-2 items-center sm:items-start">
-        <Image
-          className="dark:invert"
-          src="/next.svg"
-          alt="Next.js logo"
-          width={180}
-          height={38}
-          priority
-        />
-        <ol className="list-inside list-decimal text-sm/6 text-center sm:text-left font-[family-name:var(--font-geist-mono)]">
-          <li className="mb-2 tracking-[-.01em]">
-            Get started by editing{" "}
-            <code className="bg-black/[.05] dark:bg-white/[.06] px-1 py-0.5 rounded font-[family-name:var(--font-geist-mono)] font-semibold">
-              src/app/page.tsx
-            </code>
-            .
-          </li>
-          <li className="tracking-[-.01em]">
-            Save and see your changes instantly.
-          </li>
-        </ol>
-
-        <div className="flex gap-4 items-center flex-col sm:flex-row">
-          <a
-            className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto"
-            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
-            target="_blank"
-            rel="noopener noreferrer"
-          >
-            <Image
-              className="dark:invert"
-              src="/vercel.svg"
-              alt="Vercel logomark"
-              width={20}
-              height={20}
-            />
-            Deploy now
-          </a>
-          <a
-            className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]"
-            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
-            target="_blank"
-            rel="noopener noreferrer"
-          >
-            Read our docs
-          </a>
-        </div>
-      </main>
-      <footer className="row-start-3 flex gap-[24px] flex-wrap items-center justify-center">
-        <a
-          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
-          href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          <Image
-            aria-hidden
-            src="/file.svg"
-            alt="File icon"
-            width={16}
-            height={16}
-          />
-          Learn
-        </a>
-        <a
-          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
-          href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          <Image
-            aria-hidden
-            src="/window.svg"
-            alt="Window icon"
-            width={16}
-            height={16}
-          />
-          Examples
-        </a>
-        <a
-          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
-          href="https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          <Image
-            aria-hidden
-            src="/globe.svg"
-            alt="Globe icon"
-            width={16}
-            height={16}
-          />
-          Go to nextjs.org →
-        </a>
-      </footer>
+    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 p-4">
+      <div className="container mx-auto">
+        {/* Header */}
+        <header className="flex items-center justify-between mb-8">
+          <div className="flex items-center space-x-4">
+            <div className="w-12 h-12 bg-primary rounded-full flex items-center justify-center">
+              <span className="text-xl font-bold text-primary-foreground">🧁</span>
+            </div>
+            <div>
+              <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
+                Cake POS
+              </h1>
+              <p className="text-sm text-gray-500 dark:text-gray-400">
+                Hệ thống bán hàng
+              </p>
+            </div>
+          </div>
+          
+          <div className="flex items-center space-x-4">
+            <div className="text-right">
+              <p className="font-medium text-gray-900 dark:text-white">
+                {user?.employee?.first_name} {user?.employee?.last_name}
+              </p>
+              <p className="text-sm text-gray-500 dark:text-gray-400">
+                {user?.role?.name}
+              </p>
+            </div>
+            <Button 
+              variant="outline" 
+              onClick={handleLogout}
+              className="text-sm"
+            >
+              Đăng xuất
+            </Button>
+          </div>
+        </header>
+
+        {/* Welcome Card */}
+        <Card className="mb-8">
+          <CardHeader>
+            <CardTitle>Chào mừng đến với Cake POS</CardTitle>
+            <CardDescription>
+              Hệ thống bán hàng dành cho cửa hàng bánh ngọt
+            </CardDescription>
+          </CardHeader>
+          <CardContent>
+            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
+              <div className="p-4 border rounded-lg">
+                <div className="flex items-center space-x-3 mb-2">
+                  <span className="text-2xl">🛒</span>
+                  <h3 className="font-semibold">Bán hàng</h3>
+                </div>
+                <p className="text-sm text-gray-600 dark:text-gray-400">
+                  Tạo đơn hàng và xử lý thanh toán
+                </p>
+              </div>
+              
+              <div className="p-4 border rounded-lg">
+                <div className="flex items-center space-x-3 mb-2">
+                  <span className="text-2xl">📋</span>
+                  <h3 className="font-semibold">Quản lý đơn hàng</h3>
+                </div>
+                <p className="text-sm text-gray-600 dark:text-gray-400">
+                  Theo dõi và xử lý đơn hàng
+                </p>
+              </div>
+              
+              <div className="p-4 border rounded-lg">
+                <div className="flex items-center space-x-3 mb-2">
+                  <span className="text-2xl">📊</span>
+                  <h3 className="font-semibold">Báo cáo</h3>
+                </div>
+                <p className="text-sm text-gray-600 dark:text-gray-400">
+                  Xem thống kê và báo cáo bán hàng
+                </p>
+              </div>
+            </div>
+          </CardContent>
+        </Card>
+
+        {/* Quick Actions */}
+        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
+          <Button className="h-20 flex flex-col space-y-2">
+            <span className="text-2xl">➕</span>
+            <span>Đơn hàng mới</span>
+          </Button>
+          
+          <Button variant="outline" className="h-20 flex flex-col space-y-2">
+            <span className="text-2xl">📋</span>
+            <span>Danh sách đơn hàng</span>
+          </Button>
+          
+          <Button variant="outline" className="h-20 flex flex-col space-y-2">
+            <span className="text-2xl">🍰</span>
+            <span>Sản phẩm</span>
+          </Button>
+          
+          <Button variant="outline" className="h-20 flex flex-col space-y-2">
+            <span className="text-2xl">👥</span>
+            <span>Khách hàng</span>
+          </Button>
+        </div>
+      </div>
     </div>
   );
 }
Index: frontend/manager/src/app/products/product-sizes/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/product-sizes/[id]/page.tsx b/frontend/manager/src/app/products/product-sizes/[id]/page.tsx
new file mode 100644
--- /dev/null	(date 1750167885000)
+++ b/frontend/manager/src/app/products/product-sizes/[id]/page.tsx	(date 1750167885000)
@@ -0,0 +1,401 @@
+"use client";
+
+import { useEffect, useState, use } from "react";
+import { useRouter } from "next/navigation";
+import { ArrowLeft, Edit, Trash2, Save, X, Package, Loader2 } from "lucide-react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { Skeleton } from "@/components/ui/skeleton";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import { Badge } from "@/components/ui/badge";
+
+
+import { UpdateProductSizeFormData, updateProductSizeSchema } from "@/lib/validations/product-size";
+import { useProductSizeStore } from "@/stores/product-sizes";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit",
+    day: "2-digit",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+export default function ProductSizeDetailPage({ params }: { params: Promise<{ id: string }> }) {
+  const router = useRouter();
+  const resolvedParams = use(params);
+  const productSizeId = parseInt(resolvedParams.id);
+
+  const {
+    currentProductSize: productSize,
+    isLoading,
+    isUpdating,
+    isDeleting,
+    getProductSizeById,
+    updateProductSize,
+    deleteProductSize,
+  } = useProductSizeStore();
+
+  const [isEditing, setIsEditing] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const form = useForm<UpdateProductSizeFormData>({
+    resolver: zodResolver(updateProductSizeSchema),
+    defaultValues: {
+      name: "",
+      unit: "",
+      quantity: 1,
+      description: "",
+    },
+  });
+
+  useEffect(() => {
+    if (productSizeId) {
+      loadProductSizeDetails();
+    }
+  }, [productSizeId]);
+
+  useEffect(() => {
+    if (productSize && isEditing) {
+      form.reset({
+        name: productSize.name || "",
+        unit: productSize.unit || "",
+        quantity: productSize.quantity || 1,
+        description: productSize.description || "",
+      });
+    }
+  }, [productSize, isEditing, form]);
+
+  const loadProductSizeDetails = async () => {
+    try {
+      setError(null);
+      await getProductSizeById(productSizeId);
+    } catch (error) {
+      console.error("Lỗi tải chi tiết kích thước sản phẩm:", error);
+      setError("Không thể tải thông tin kích thước sản phẩm");
+    }
+  };
+
+  const handleEditProductSize = () => {
+    setIsEditing(true);
+  };
+
+  const handleCancelEdit = () => {
+    setIsEditing(false);
+    if (productSize) {
+      form.reset({
+        name: productSize.name || "",
+        unit: productSize.unit || "",
+        quantity: productSize.quantity || 1,
+        description: productSize.description || "",
+      });
+    }
+  };
+
+  const handleSaveProductSize = async (data: UpdateProductSizeFormData) => {
+    try {
+      await updateProductSize(productSizeId, data);
+      setIsEditing(false);
+      toast.success("Cập nhật kích thước sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi cập nhật kích thước sản phẩm:", error);
+      toast.error("Không thể cập nhật kích thước sản phẩm. Vui lòng thử lại.");
+    }
+  };
+
+  const handleDeleteProductSize = async () => {
+    try {
+      await deleteProductSize(productSizeId);
+      setIsDeleteDialogOpen(false);
+      toast.success("Xóa kích thước sản phẩm thành công!");
+      router.push("/products/product-sizes");
+    } catch (error) {
+      console.error("Lỗi xóa kích thước sản phẩm:", error);
+      toast.error("Không thể xóa kích thước sản phẩm. Vui lòng thử lại.");
+    }
+  };
+
+  if (error) {
+    return (
+      <div className="space-y-6">
+        <Card>
+          <CardContent className="py-8">
+            <div className="text-center">
+              <p className="text-destructive mb-4">{error}</p>
+              <Button onClick={() => router.back()}>
+                <ArrowLeft className="mr-2 h-4 w-4" />
+                Quay Lại
+              </Button>
+            </div>
+          </CardContent>
+        </Card>
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Header với nút actions */}
+      <div className="flex items-center justify-between">
+        <Button variant="outline" onClick={() => router.back()}>
+          <ArrowLeft className="mr-2 h-4 w-4" />
+          Quay Lại
+        </Button>
+        
+        <div className="flex items-center space-x-2">
+          {isEditing ? (
+            <>
+              <Button 
+                variant="outline" 
+                onClick={handleCancelEdit}
+                disabled={isUpdating}
+              >
+                <X className="mr-2 h-4 w-4" />
+                Hủy
+              </Button>
+              <Button 
+                onClick={form.handleSubmit(handleSaveProductSize)}
+                disabled={isUpdating}
+              >
+                {isUpdating ? (
+                  <>
+                    <Save className="mr-2 h-4 w-4 animate-spin" />
+                    Đang lưu...
+                  </>
+                ) : (
+                  <>
+                    <Save className="mr-2 h-4 w-4" />
+                    Lưu
+                  </>
+                )}
+              </Button>
+            </>
+          ) : (
+            <>
+              <Button variant="outline" onClick={handleEditProductSize}>
+                <Edit className="mr-2 h-4 w-4" />
+                Chỉnh Sửa
+              </Button>
+              <Button 
+                variant="destructive" 
+                onClick={() => setIsDeleteDialogOpen(true)}
+                disabled={isDeleting}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </Button>
+            </>
+          )}
+        </div>
+      </div>
+
+      {/* Thông tin chi tiết kích thước sản phẩm */}
+      <Card>
+        <CardHeader>
+          <CardTitle className="flex items-center gap-2">
+            <Package className="h-5 w-5" />
+            Thông Tin Kích Thước Sản Phẩm
+          </CardTitle>
+        </CardHeader>
+        <CardContent>
+          {isLoading ? (
+            <div className="space-y-4">
+              <Skeleton className="h-8 w-1/3" />
+              <Skeleton className="h-4 w-full" />
+              <Skeleton className="h-4 w-2/3" />
+              <Skeleton className="h-4 w-1/2" />
+            </div>
+          ) : productSize ? (
+            <Form {...form}>
+              <form className="space-y-6">
+                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
+                  <div className="space-y-4">
+                    {/* Tên Kích Thước */}
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Tên Kích Thước</label>
+                      {isEditing ? (
+                        <FormField
+                          control={form.control}
+                          name="name"
+                          render={({ field }) => (
+                            <FormItem>
+                              <FormControl>
+                                <Input
+                                  placeholder="Ví dụ: S, M, L, XL"
+                                  {...field}
+                                  disabled={isUpdating}
+                                />
+                              </FormControl>
+                              <FormMessage />
+                            </FormItem>
+                          )}
+                        />
+                      ) : (
+                        <div className="flex items-center gap-2">
+                          <p className="text-lg font-semibold">{productSize.name}</p>
+                          <Badge variant="outline">{productSize.unit}</Badge>
+                        </div>
+                      )}
+                    </div>
+                    
+                    {/* Đơn Vị */}
+                    {isEditing && (
+                      <div>
+                        <label className="text-sm font-medium text-muted-foreground">Đơn Vị</label>
+                        <FormField
+                          control={form.control}
+                          name="unit"
+                          render={({ field }) => (
+                            <FormItem>
+                              <FormControl>
+                                <Input
+                                  placeholder="Ví dụ: piece, kg, lít"
+                                  {...field}
+                                  disabled={isUpdating}
+                                />
+                              </FormControl>
+                              <FormMessage />
+                            </FormItem>
+                          )}
+                        />
+                      </div>
+                    )}
+                    
+                    {/* Số Lượng */}
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Số Lượng</label>
+                      {isEditing ? (
+                        <FormField
+                          control={form.control}
+                          name="quantity"
+                          render={({ field }) => (
+                            <FormItem>
+                              <FormControl>
+                                <Input
+                                  type="number"
+                                  min="1"
+                                  placeholder="1"
+                                  {...field}
+                                  onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}
+                                  disabled={isUpdating}
+                                />
+                              </FormControl>
+                              <FormMessage />
+                            </FormItem>
+                          )}
+                        />
+                      ) : (
+                        <p className="text-lg font-semibold">{productSize.quantity}</p>
+                      )}
+                    </div>
+                    
+                    {/* Mô Tả */}
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Mô Tả</label>
+                      {isEditing ? (
+                        <FormField
+                          control={form.control}
+                          name="description"
+                          render={({ field }) => (
+                            <FormItem>
+                              <FormControl>
+                                                                 <Textarea
+                                   placeholder="Mô tả chi tiết về kích thước này..."
+                                   className="min-h-[80px]"
+                                   {...field}
+                                   value={field.value || ""}
+                                   disabled={isUpdating}
+                                 />
+                              </FormControl>
+                              <FormMessage />
+                            </FormItem>
+                          )}
+                        />
+                      ) : (
+                        <p className="text-sm">
+                          {productSize.description || <span className="text-muted-foreground italic">Không có mô tả</span>}
+                        </p>
+                      )}
+                    </div>
+                  </div>
+                  
+                  <div className="space-y-4">
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">ID Kích Thước</label>
+                      <p className="text-sm font-mono">#{productSize.id}</p>
+                    </div>
+                    
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Ngày Tạo</label>
+                      <p className="text-sm">{formatDate(productSize.createdAt)}</p>
+                    </div>
+                    
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Cập Nhật Lần Cuối</label>
+                      <p className="text-sm">{formatDate(productSize.updatedAt)}</p>
+                    </div>
+                  </div>
+                </div>
+              </form>
+            </Form>
+          ) : null}
+        </CardContent>
+      </Card>
+
+      {/* Delete Confirmation Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa kích thước <strong>{productSize?.name} ({productSize?.unit})</strong>? 
+              Hành động này không thể hoàn tác và có thể ảnh hưởng đến các sản phẩm đang sử dụng kích thước này.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteProductSize}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/src/app/globals.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import \"tailwindcss\";\n\n:root {\n  --background: #ffffff;\n  --foreground: #171717;\n}\n\n@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --font-sans: var(--font-geist-sans);\n  --font-mono: var(--font-geist-mono);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --background: #0a0a0a;\n    --foreground: #ededed;\n  }\n}\n\nbody {\n  background: var(--background);\n  color: var(--foreground);\n  font-family: Arial, Helvetica, sans-serif;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/app/globals.css b/frontend/pos/src/app/globals.css
--- a/frontend/pos/src/app/globals.css	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/src/app/globals.css	(date 1750225996677)
@@ -1,26 +1,162 @@
 @import "tailwindcss";
 
-:root {
-  --background: #ffffff;
-  --foreground: #171717;
+@custom-variant dark (&:is(.dark *));
+
+@layer base {
+  :root {
+    --background: 0 0% 100%;
+    --foreground: 222.2 84% 4.9%;
+    --card: 0 0% 100%;
+    --card-foreground: 222.2 84% 4.9%;
+    --popover: 0 0% 100%;
+    --popover-foreground: 222.2 84% 4.9%;
+    --primary: 221.2 83.2% 53.3%;
+    --primary-foreground: 210 40% 98%;
+    --secondary: 210 40% 96%;
+    --secondary-foreground: 222.2 84% 4.9%;
+    --muted: 210 40% 96%;
+    --muted-foreground: 215.4 16.3% 46.9%;
+    --accent: 210 40% 96%;
+    --accent-foreground: 222.2 84% 4.9%;
+    --destructive: 0 84.2% 60.2%;
+    --destructive-foreground: 210 40% 98%;
+    --border: 214.3 31.8% 91.4%;
+    --input: 214.3 31.8% 91.4%;
+    --ring: 221.2 83.2% 53.3%;
+    --radius: 0.5rem;
+    --font-sans: var(--font-geist-sans);
+    --font-mono: var(--font-geist-mono);
+    --chart-1: 12 76% 61%;
+    --chart-2: 173 58% 39%;
+    --chart-3: 197 37% 24%;
+    --chart-4: 43 74% 66%;
+    --chart-5: 27 87% 67%;
+  }
+
+  .dark {
+    --background: 222.2 84% 4.9%;
+    --foreground: 210 40% 98%;
+    --card: 222.2 84% 4.9%;
+    --card-foreground: 210 40% 98%;
+    --popover: 222.2 84% 4.9%;
+    --popover-foreground: 210 40% 98%;
+    --primary: 217.2 91.2% 59.8%;
+    --primary-foreground: 222.2 84% 4.9%;
+    --secondary: 217.2 32.6% 17.5%;
+    --secondary-foreground: 210 40% 98%;
+    --muted: 217.2 32.6% 17.5%;
+    --muted-foreground: 215 20.2% 65.1%;
+    --accent: 217.2 32.6% 17.5%;
+    --accent-foreground: 210 40% 98%;
+    --destructive: 0 62.8% 30.6%;
+    --destructive-foreground: 210 40% 98%;
+    --border: 217.2 32.6% 17.5%;
+    --input: 217.2 32.6% 17.5%;
+    --ring: 224.3 76.3% 94.1%;
+    --chart-1: 220 70% 50%;
+    --chart-2: 160 60% 45%;
+    --chart-3: 30 80% 55%;
+    --chart-4: 280 65% 60%;
+    --chart-5: 340 75% 55%;
+  }
+}
+
+@layer base {
+  * {
+    @apply border-border outline-ring/50;
+  }
+  body {
+    @apply bg-background text-foreground;
+  }
 }
 
 @theme inline {
+  --radius-sm: calc(var(--radius) - 4px);
+  --radius-md: calc(var(--radius) - 2px);
+  --radius-lg: var(--radius);
+  --radius-xl: calc(var(--radius) + 4px);
   --color-background: var(--background);
   --color-foreground: var(--foreground);
-  --font-sans: var(--font-geist-sans);
-  --font-mono: var(--font-geist-mono);
+  --color-card: var(--card);
+  --color-card-foreground: var(--card-foreground);
+  --color-popover: var(--popover);
+  --color-popover-foreground: var(--popover-foreground);
+  --color-primary: var(--primary);
+  --color-primary-foreground: var(--primary-foreground);
+  --color-secondary: var(--secondary);
+  --color-secondary-foreground: var(--secondary-foreground);
+  --color-muted: var(--muted);
+  --color-muted-foreground: var(--muted-foreground);
+  --color-accent: var(--accent);
+  --color-accent-foreground: var(--accent-foreground);
+  --color-destructive: var(--destructive);
+  --color-border: var(--border);
+  --color-input: var(--input);
+  --color-ring: var(--ring);
 }
 
-@media (prefers-color-scheme: dark) {
-  :root {
-    --background: #0a0a0a;
-    --foreground: #ededed;
+:root {
+  --radius: 0.625rem;
+  --background: oklch(1 0 0);
+  --foreground: oklch(0.145 0 0);
+  --card: oklch(1 0 0);
+  --card-foreground: oklch(0.145 0 0);
+  --popover: oklch(1 0 0);
+  --popover-foreground: oklch(0.145 0 0);
+  --primary: oklch(0.205 0 0);
+  --primary-foreground: oklch(0.985 0 0);
+  --secondary: oklch(0.97 0 0);
+  --secondary-foreground: oklch(0.205 0 0);
+  --muted: oklch(0.97 0 0);
+  --muted-foreground: oklch(0.556 0 0);
+  --accent: oklch(0.97 0 0);
+  --accent-foreground: oklch(0.205 0 0);
+  --destructive: oklch(0.577 0.245 27.325);
+  --border: oklch(0.922 0 0);
+  --input: oklch(0.922 0 0);
+  --ring: oklch(0.708 0 0);
+}
+
+.dark {
+  --background: oklch(0.145 0 0);
+  --foreground: oklch(0.985 0 0);
+  --card: oklch(0.205 0 0);
+  --card-foreground: oklch(0.985 0 0);
+  --popover: oklch(0.205 0 0);
+  --popover-foreground: oklch(0.985 0 0);
+  --primary: oklch(0.922 0 0);
+  --primary-foreground: oklch(0.205 0 0);
+  --secondary: oklch(0.269 0 0);
+  --secondary-foreground: oklch(0.985 0 0);
+  --muted: oklch(0.269 0 0);
+  --muted-foreground: oklch(0.708 0 0);
+  --accent: oklch(0.269 0 0);
+  --accent-foreground: oklch(0.985 0 0);
+  --destructive: oklch(0.704 0.191 22.216);
+  --border: oklch(1 0 0 / 10%);
+  --input: oklch(1 0 0 / 15%);
+  --ring: oklch(0.556 0 0);
+}
+
+@layer utilities {
+  .line-clamp-1 {
+    overflow: hidden;
+    display: -webkit-box;
+    -webkit-box-orient: vertical;
+    -webkit-line-clamp: 1;
   }
-}
-
-body {
-  background: var(--background);
-  color: var(--foreground);
-  font-family: Arial, Helvetica, sans-serif;
+  
+  .line-clamp-2 {
+    overflow: hidden;
+    display: -webkit-box;
+    -webkit-box-orient: vertical;
+    -webkit-line-clamp: 2;
+  }
+  
+  .line-clamp-3 {
+    overflow: hidden;
+    display: -webkit-box;
+    -webkit-box-orient: vertical;
+    -webkit-line-clamp: 3;
+  }
 }
Index: frontend/manager/src/app/orders/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/orders/layout.tsx b/frontend/manager/src/app/orders/layout.tsx
new file mode 100644
--- /dev/null	(date 1750218084405)
+++ b/frontend/manager/src/app/orders/layout.tsx	(date 1750218084405)
@@ -0,0 +1,13 @@
+import { MainLayout } from "@/components/layout/main-layout";
+
+export default function OrdersLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return (
+    <MainLayout>
+      {children}
+    </MainLayout>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/tsconfig.json b/frontend/pos/tsconfig.json
--- a/frontend/pos/tsconfig.json	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/tsconfig.json	(date 1750218070997)
@@ -18,6 +18,7 @@
         "name": "next"
       }
     ],
+    "baseUrl": ".",
     "paths": {
       "@/*": ["./src/*"]
     }
Index: frontend/pos/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"pos\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"next\": \"15.3.3\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"^5\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"@tailwindcss/postcss\": \"^4\",\n    \"tailwindcss\": \"^4\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.3.3\",\n    \"@eslint/eslintrc\": \"^3\"\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/package.json b/frontend/pos/package.json
--- a/frontend/pos/package.json	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/package.json	(date 1750227195442)
@@ -3,25 +3,42 @@
   "version": "0.1.0",
   "private": true,
   "scripts": {
-    "dev": "next dev --turbopack",
+    "dev": "dotenv -e .env.development -- next dev --turbopack --experimental-https",
     "build": "next build",
     "start": "next start",
     "lint": "next lint"
   },
   "dependencies": {
+    "@hookform/resolvers": "^5.1.1",
+    "@radix-ui/react-dialog": "^1.1.14",
+    "@radix-ui/react-dropdown-menu": "^2.1.15",
+    "@radix-ui/react-label": "^2.1.7",
+    "@radix-ui/react-slot": "^1.2.3",
+    "@radix-ui/react-tooltip": "^1.2.7",
+    "class-variance-authority": "^0.7.1",
+    "clsx": "^2.1.1",
+    "dotenv-cli": "^8.0.0",
+    "lucide-react": "^0.516.0",
+    "next": "15.3.3",
+    "next-themes": "^0.4.6",
     "react": "^19.0.0",
     "react-dom": "^19.0.0",
-    "next": "15.3.3"
+    "react-hook-form": "^7.58.1",
+    "sonner": "^2.0.5",
+    "tailwind-merge": "^3.3.1",
+    "tailwindcss-animate": "^1.0.7",
+    "zod": "^3.25.67",
+    "zustand": "^5.0.5"
   },
   "devDependencies": {
-    "typescript": "^5",
+    "@eslint/eslintrc": "^3",
+    "@tailwindcss/postcss": "^4",
     "@types/node": "^20",
     "@types/react": "^19",
     "@types/react-dom": "^19",
-    "@tailwindcss/postcss": "^4",
-    "tailwindcss": "^4",
     "eslint": "^9",
     "eslint-config-next": "15.3.3",
-    "@eslint/eslintrc": "^3"
+    "tailwindcss": "^4",
+    "typescript": "^5"
   }
 }
Index: frontend/pos/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.\n\nThis project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/README.md b/frontend/pos/README.md
--- a/frontend/pos/README.md	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/pos/README.md	(date 1750214159294)
@@ -1,36 +1,19 @@
-This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).
-
-## Getting Started
+# Pos Ui
 
-First, run the development server:
+Cần thiết kế giao diện cho pos
 
-```bash
-npm run dev
-# or
-yarn dev
-# or
-pnpm dev
-# or
-bun dev
-```
+## Yêu cầu
 
-Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.
+- Giao diện phải đẹp, responsive, dễ sử dụng.
+- Ở phía bên phải là nơi thao tác:
+  - Thêm, xóa thông tin khách hàng.
+  - Thêm chương trình khuyến mãi bằng cách nhập mã khuyến mãi.
+  - Hiển thị tổng tiền, thành tiền.
+  - Có nút thanh toán.
+- Khi Ấn vào nút thanh toán, sẽ chuyển đến trang thanh toán.
+  - Hiển thị tiến trình gồm 3 bước:
+    - xác nhận đơn hàng: gọi api tạo đơn hàng.
+    - thanh toán: gọi api thanh toán.
+    - hoàn thành: hiển thị hóa đơn.
+    Có thể hủy đơn hàng ở bước thanh toán.
 
-You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.
-
-This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.
-
-## Learn More
-
-To learn more about Next.js, take a look at the following resources:
-
-- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
-- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.
-
-You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!
-
-## Deploy on Vercel
-
-The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.
-
-Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
Index: frontend/manager/src/app/orders/cancelled/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/orders/cancelled/page.tsx b/frontend/manager/src/app/orders/cancelled/page.tsx
new file mode 100644
--- /dev/null	(date 1750217561331)
+++ b/frontend/manager/src/app/orders/cancelled/page.tsx	(date 1750217561331)
@@ -0,0 +1,324 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter } from "next/navigation";
+import { MoreHorizontal, Eye, Trash2, RefreshCw, Loader2, XCircle } from "lucide-react";
+import { ColumnDef } from "@tanstack/react-table";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import { DataTable } from "@/components/ui/data-table";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+
+import { Order } from "@/types/api";
+import { useOrdersStore } from "@/stores/orders";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit", 
+    day: "2-digit",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+function getPaymentStatusBadgeVariant(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'default';
+    case 'PROCESSING':
+      return 'secondary';
+    case 'CANCELLED':
+      return 'destructive';
+    default:
+      return 'outline';
+  }
+}
+
+function getPaymentStatusDisplay(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'Đã Thanh Toán';
+    case 'PROCESSING':
+      return 'Đang Xử Lý';
+    case 'CANCELLED':
+      return 'Đã Hủy';
+    default:
+      return 'Chưa Thanh Toán';
+  }
+}
+
+export default function CancelledOrdersPage() {
+  const router = useRouter();
+  
+  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+
+  const {
+    orders,
+    isLoading,
+    isDeleting,
+    fetchOrdersByStatus,
+    deleteOrder,
+  } = useOrdersStore();
+
+  useEffect(() => {
+    fetchOrdersByStatus('CANCELLED');
+  }, [fetchOrdersByStatus]);
+
+  const handleRefresh = async () => {
+    await fetchOrdersByStatus('CANCELLED');
+    toast.success("Đã làm mới danh sách đơn hàng!");
+  };
+
+  const handleDeleteOrder = async () => {
+    if (!selectedOrder) return;
+    
+    try {
+      await deleteOrder(selectedOrder.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedOrder(null);
+      toast.success("Đã xóa đơn hàng thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa đơn hàng:", error);
+      toast.error("Không thể xóa đơn hàng. Vui lòng thử lại.");
+    }
+  };
+
+  const openDeleteDialog = (order: Order) => {
+    setSelectedOrder(order);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const columns: ColumnDef<Order>[] = [
+    {
+      accessorKey: "id",
+      header: "ID Đơn Hàng",
+      cell: ({ row }) => {
+        return (
+          <div className="font-medium">
+            #{row.getValue("id")}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "customerName",
+      header: "Khách Hàng",
+      cell: ({ row }) => {
+        const order = row.original;
+        const customerName = order.customerName || order.customer?.name || "Khách lẻ";
+        
+        return (
+          <div className="flex items-center gap-3">
+            <Avatar className="h-8 w-8">
+              <AvatarImage src="" alt={customerName} />
+              <AvatarFallback>
+                {customerName.split(' ').map(n => n[0]).join('').slice(0, 2)}
+              </AvatarFallback>
+            </Avatar>
+            <div>
+              <div className="font-medium">{customerName}</div>
+              {order.customerId && (
+                <div className="text-sm text-muted-foreground">ID: {order.customerId}</div>
+              )}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "employeeName",
+      header: "Nhân Viên",
+      cell: ({ row }) => {
+        const order = row.original;
+        const employeeName = order.employeeName || order.employee?.name || "N/A";
+        
+        return (
+          <div>
+            <div className="font-medium">{employeeName}</div>
+            {order.employeeId && (
+              <div className="text-sm text-muted-foreground">ID: {order.employeeId}</div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "totalAmount",
+      header: "Tổng Tiền",
+      cell: ({ row }) => {
+        return (
+          <div className="text-right">
+            <div className="font-medium text-gray-500 line-through">
+              {formatCurrency(row.getValue("totalAmount"))}
+            </div>
+            <div className="text-sm text-red-600 font-medium">
+              Đã hủy
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "paymentStatus",
+      header: "Thanh Toán",
+      cell: ({ row }) => {
+        const paymentStatus = row.original.paymentStatus;
+        return (
+          <div className="space-y-1">
+            <Badge variant={getPaymentStatusBadgeVariant(paymentStatus)}>
+              {getPaymentStatusDisplay(paymentStatus)}
+            </Badge>
+            {row.original.paymentMethod && (
+              <div className="text-xs text-muted-foreground">
+                {row.original.paymentMethod}
+              </div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "createdAt",
+      header: "Thời Gian",
+      cell: ({ row }) => {
+        const date = row.getValue("createdAt") as Date;
+        return (
+          <div className="text-sm">
+            {formatDate(date)}
+          </div>
+        );
+      },
+    },
+    {
+      id: "actions",
+      header: "Thao Tác",
+      cell: ({ row }) => {
+        const order = row.original;
+        
+        return (
+          <DropdownMenu>
+            <DropdownMenuTrigger asChild>
+              <Button variant="ghost" size="icon">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem onClick={() => router.push(`/orders/${order.id}`)}>
+                <Eye className="mr-2 h-4 w-4" />
+                Xem Chi Tiết
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-destructive"
+                onClick={() => openDeleteDialog(order)}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
+        );
+      },
+    },
+  ];
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold flex items-center gap-2">
+            <XCircle className="h-8 w-8 text-red-600" />
+            Đơn Hàng Đã Hủy
+          </h1>
+          <p className="text-muted-foreground">
+            Danh sách các đơn hàng đã bị hủy bỏ
+          </p>
+        </div>
+        <div className="flex items-center space-x-2">
+          <Button variant="outline" onClick={handleRefresh}>
+            <RefreshCw className="mr-2 h-4 w-4" />
+            Làm Mới
+          </Button>
+        </div>
+      </div>
+
+      {/* Orders Data Table */}
+      <Card>
+        <CardContent className="p-0">
+          <DataTable 
+            columns={columns} 
+            data={orders}
+            searchKey="id"
+            searchPlaceholder="Tìm kiếm theo ID đơn hàng..."
+          />
+        </CardContent>
+      </Card>
+
+      {/* Delete Order Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa đơn hàng</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa đơn hàng <strong>#{selectedOrder?.id}</strong>? 
+              Hành động này không thể hoàn tác và sẽ xóa vĩnh viễn tất cả dữ liệu liên quan.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteOrder}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa đơn hàng"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/orders/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/orders/[id]/page.tsx b/frontend/manager/src/app/orders/[id]/page.tsx
new file mode 100644
--- /dev/null	(date 1750214819957)
+++ b/frontend/manager/src/app/orders/[id]/page.tsx	(date 1750214819957)
@@ -0,0 +1,497 @@
+"use client";
+
+import { useEffect } from "react";
+import { useRouter } from "next/navigation";
+import { useParams } from "next/navigation";
+import { ArrowLeft, Package, User, CreditCard, Tag, Clock, Phone, Mail, MapPin } from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Separator } from "@/components/ui/separator";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import {
+  Breadcrumb,
+  BreadcrumbItem,
+  BreadcrumbLink,
+  BreadcrumbList,
+  BreadcrumbPage,
+  BreadcrumbSeparator,
+} from "@/components/ui/breadcrumb";
+
+import { useOrdersStore } from "@/stores/orders";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "long", 
+    day: "numeric",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+function getStatusBadgeVariant(status: string) {
+  switch (status) {
+    case 'PROCESSING':
+      return 'default';
+    case 'COMPLETED':
+      return 'default';
+    case 'CANCELLED':
+      return 'secondary';
+    default:
+      return 'secondary';
+  }
+}
+
+function getPaymentStatusBadgeVariant(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'default';
+    case 'PROCESSING':
+      return 'secondary';
+    case 'CANCELLED':
+      return 'destructive';
+    default:
+      return 'outline';
+  }
+}
+
+function getStatusDisplay(status: string) {
+  switch (status) {
+    case 'PROCESSING':
+      return 'Đang Xử Lý';
+    case 'COMPLETED':
+      return 'Hoàn Thành';
+    case 'CANCELLED':
+      return 'Đã Hủy';
+    default:
+      return status;
+  }
+}
+
+function getPaymentStatusDisplay(status?: string) {
+  switch (status) {
+    case 'PAID':
+      return 'Đã Thanh Toán';
+    case 'PROCESSING':
+      return 'Đang Xử Lý';
+    case 'CANCELLED':
+      return 'Đã Hủy';
+    default:
+      return 'Chưa Thanh Toán';
+  }
+}
+
+export default function OrderDetailPage() {
+  const router = useRouter();
+  const params = useParams();
+  const orderId = parseInt(params.id as string);
+
+  const { currentOrder, isLoading, fetchOrderById } = useOrdersStore();
+
+  useEffect(() => {
+    if (orderId) {
+      fetchOrderById(orderId);
+    }
+  }, [orderId, fetchOrderById]);
+
+  if (isLoading) {
+    return (
+      <div className="space-y-6">
+        <Breadcrumb>
+          <BreadcrumbList>
+            <BreadcrumbItem>
+              <BreadcrumbLink href="/dashboard">Trang Chủ</BreadcrumbLink>
+            </BreadcrumbItem>
+            <BreadcrumbSeparator />
+            <BreadcrumbItem>
+              <BreadcrumbLink href="/orders">Đơn Hàng</BreadcrumbLink>
+            </BreadcrumbItem>
+            <BreadcrumbSeparator />
+            <BreadcrumbItem>
+              <BreadcrumbPage>Chi Tiết</BreadcrumbPage>
+            </BreadcrumbItem>
+          </BreadcrumbList>
+        </Breadcrumb>
+        
+        <div className="flex items-center justify-center h-96">
+          <div className="text-center">
+            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto"></div>
+            <p className="mt-2 text-muted-foreground">Đang tải chi tiết đơn hàng...</p>
+          </div>
+        </div>
+      </div>
+    );
+  }
+
+  if (!currentOrder) {
+    return (
+      <div className="space-y-6">
+        <Breadcrumb>
+          <BreadcrumbList>
+            <BreadcrumbItem>
+              <BreadcrumbLink href="/dashboard">Trang Chủ</BreadcrumbLink>
+            </BreadcrumbItem>
+            <BreadcrumbSeparator />
+            <BreadcrumbItem>
+              <BreadcrumbLink href="/orders">Đơn Hàng</BreadcrumbLink>
+            </BreadcrumbItem>
+            <BreadcrumbSeparator />
+            <BreadcrumbItem>
+              <BreadcrumbPage>Chi Tiết</BreadcrumbPage>
+            </BreadcrumbItem>
+          </BreadcrumbList>
+        </Breadcrumb>
+        
+        <div className="text-center py-12">
+          <h2 className="text-2xl font-bold text-gray-900">Không tìm thấy đơn hàng</h2>
+          <p className="text-gray-600 mt-2">Đơn hàng này có thể đã bị xóa hoặc không tồn tại.</p>
+          <Button className="mt-4" onClick={() => router.push('/orders')}>
+            Quay lại danh sách đơn hàng
+          </Button>
+        </div>
+      </div>
+    );
+  }
+
+  const order = currentOrder;
+  const customerName = order.customerName || order.customer?.name || "Khách lẻ";
+  const employeeName = order.employeeName || order.employee?.name || "N/A";
+
+  return (
+    <div className="space-y-6">
+      {/* Breadcrumb */}
+      <Breadcrumb>
+        <BreadcrumbList>
+          <BreadcrumbItem>
+            <BreadcrumbLink href="/dashboard">Trang Chủ</BreadcrumbLink>
+          </BreadcrumbItem>
+          <BreadcrumbSeparator />
+          <BreadcrumbItem>
+            <BreadcrumbLink href="/orders">Đơn Hàng</BreadcrumbLink>
+          </BreadcrumbItem>
+          <BreadcrumbSeparator />
+          <BreadcrumbItem>
+            <BreadcrumbPage>Đơn hàng #{order.id}</BreadcrumbPage>
+          </BreadcrumbItem>
+        </BreadcrumbList>
+      </Breadcrumb>
+
+      {/* Header */}
+      <div className="flex items-center justify-between">
+        <div className="flex items-center space-x-4">
+          <Button variant="outline" size="sm" onClick={() => router.back()}>
+            <ArrowLeft className="mr-2 h-4 w-4" />
+            Quay Lại
+          </Button>
+          <div>
+            <h1 className="text-3xl font-bold">Đơn Hàng #{order.id}</h1>
+            <p className="text-muted-foreground">
+              Tạo lúc {formatDate(order.createdAt)}
+            </p>
+          </div>
+        </div>
+        <div className="flex items-center space-x-2">
+          <Badge variant={getStatusBadgeVariant(order.status)}>
+            {getStatusDisplay(order.status)}
+          </Badge>
+          <Badge variant={getPaymentStatusBadgeVariant(order.paymentStatus)}>
+            {getPaymentStatusDisplay(order.paymentStatus)}
+          </Badge>
+        </div>
+      </div>
+
+      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
+        {/* Main Content */}
+        <div className="lg:col-span-2 space-y-6">
+          {/* Products */}
+          <Card>
+            <CardHeader>
+              <CardTitle className="flex items-center gap-2">
+                <Package className="h-5 w-5" />
+                Sản Phẩm ({order.products?.length || 0} món)
+              </CardTitle>
+            </CardHeader>
+            <CardContent>
+              <div className="space-y-4">
+                {order.products?.map((product, index) => (
+                  <div key={product.id || index} className="flex items-center justify-between p-4 border rounded-lg">
+                    <div className="flex items-center space-x-4">
+                      <div className="w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center">
+                        <Package className="h-6 w-6 text-gray-400" />
+                      </div>
+                      <div>
+                        <h4 className="font-medium">{product.productName || "Tên sản phẩm"}</h4>
+                        <p className="text-sm text-muted-foreground">
+                          Size: {product.sizeName || "N/A"}
+                        </p>
+                        {product.option && (
+                          <p className="text-sm text-muted-foreground">
+                            Ghi chú: {product.option}
+                          </p>
+                        )}
+                      </div>
+                    </div>
+                    <div className="text-right">
+                      <p className="font-medium">
+                        {formatCurrency(product.unitPrice || 0)} x {product.quantity}
+                      </p>
+                      <p className="text-sm font-bold">
+                        {formatCurrency(product.totalPrice || 0)}
+                      </p>
+                    </div>
+                  </div>
+                ))}
+              </div>
+            </CardContent>
+          </Card>
+
+          {/* Discounts */}
+          {order.discounts && order.discounts.length > 0 && (
+            <Card>
+              <CardHeader>
+                <CardTitle className="flex items-center gap-2">
+                  <Tag className="h-5 w-5" />
+                  Khuyến Mãi ({order.discounts.length})
+                </CardTitle>
+              </CardHeader>
+              <CardContent>
+                <div className="space-y-3">
+                  {order.discounts.map((discount, index) => (
+                    <div key={discount.id || index} className="flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg">
+                      <div>
+                        <h4 className="font-medium text-green-800">{discount.discountName || "Khuyến mãi"}</h4>
+                        <p className="text-sm text-green-600">Mã giảm giá</p>
+                      </div>
+                      <div className="text-right">
+                        <p className="font-medium text-green-800">
+                          -{formatCurrency(discount.discountAmount)}
+                        </p>
+                      </div>
+                    </div>
+                  ))}
+                </div>
+              </CardContent>
+            </Card>
+          )}
+
+          {/* Order Notes */}
+          {order.customizeNote && (
+            <Card>
+              <CardHeader>
+                <CardTitle>Ghi Chú Đơn Hàng</CardTitle>
+              </CardHeader>
+              <CardContent>
+                <p className="text-muted-foreground">{order.customizeNote}</p>
+              </CardContent>
+            </Card>
+          )}
+        </div>
+
+        {/* Sidebar */}
+        <div className="space-y-6">
+          {/* Order Summary */}
+          <Card>
+            <CardHeader>
+              <CardTitle>Tóm Tắt Đơn Hàng</CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="flex justify-between">
+                <span>Tổng tiền hàng:</span>
+                <span className="font-medium">{formatCurrency(order.totalAmount)}</span>
+              </div>
+              {order.discounts && order.discounts.length > 0 && (
+                <div className="flex justify-between text-green-600">
+                  <span>Giảm giá:</span>
+                  <span className="font-medium">
+                    -{formatCurrency(order.discounts.reduce((total, discount) => total + discount.discountAmount, 0))}
+                  </span>
+                </div>
+              )}
+              <Separator />
+              <div className="flex justify-between text-lg font-bold">
+                <span>Thành tiền:</span>
+                <span>{formatCurrency(order.finalAmount)}</span>
+              </div>
+            </CardContent>
+          </Card>
+
+          {/* Customer Info */}
+          <Card>
+            <CardHeader>
+              <CardTitle className="flex items-center gap-2">
+                <User className="h-5 w-5" />
+                Thông Tin Khách Hàng
+              </CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="flex items-center gap-3">
+                <Avatar>
+                  <AvatarImage src="" alt={customerName} />
+                  <AvatarFallback>
+                    {customerName.split(' ').map(n => n[0]).join('').slice(0, 2)}
+                  </AvatarFallback>
+                </Avatar>
+                <div>
+                  <p className="font-medium">{customerName}</p>
+                  {order.customerId && (
+                    <p className="text-sm text-muted-foreground">ID: {order.customerId}</p>
+                  )}
+                </div>
+              </div>
+              
+              {order.customer && (
+                <div className="space-y-2 text-sm">
+                  {order.customer.phone && (
+                    <div className="flex items-center gap-2">
+                      <Phone className="h-4 w-4 text-muted-foreground" />
+                      <span>{order.customer.phone}</span>
+                    </div>
+                  )}
+                  {order.customer.currentPoints !== undefined && (
+                    <div className="flex items-center gap-2">
+                      <Tag className="h-4 w-4 text-muted-foreground" />
+                      <span>Điểm tích lũy: {order.customer.currentPoints}</span>
+                    </div>
+                  )}
+                </div>
+              )}
+            </CardContent>
+          </Card>
+
+          {/* Employee Info */}
+          <Card>
+            <CardHeader>
+              <CardTitle className="flex items-center gap-2">
+                <User className="h-5 w-5" />
+                Nhân Viên Phục Vụ
+              </CardTitle>
+            </CardHeader>
+            <CardContent>
+              <div className="flex items-center gap-3">
+                <Avatar>
+                  <AvatarImage src="" alt={employeeName} />
+                  <AvatarFallback>
+                    {employeeName.split(' ').map(n => n[0]).join('').slice(0, 2)}
+                  </AvatarFallback>
+                </Avatar>
+                <div>
+                  <p className="font-medium">{employeeName}</p>
+                  {order.employeeId && (
+                    <p className="text-sm text-muted-foreground">ID: {order.employeeId}</p>
+                  )}
+                  {order.employee?.position && (
+                    <p className="text-sm text-muted-foreground">{order.employee.position}</p>
+                  )}
+                </div>
+              </div>
+            </CardContent>
+          </Card>
+
+          {/* Payment Info */}
+          {order.payments && order.payments.length > 0 && (
+            <Card>
+              <CardHeader>
+                <CardTitle className="flex items-center gap-2">
+                  <CreditCard className="h-5 w-5" />
+                  Thông Tin Thanh Toán
+                </CardTitle>
+              </CardHeader>
+              <CardContent className="space-y-4">
+                {order.payments.map((payment, index) => (
+                  <div key={payment.id || index} className="space-y-3">
+                    <div className="flex items-center justify-between">
+                      <span className="text-sm font-medium">Phương thức:</span>
+                      <span className="text-sm">{payment.paymentMethod?.name || "N/A"}</span>
+                    </div>
+                    <div className="flex items-center justify-between">
+                      <span className="text-sm font-medium">Trạng thái:</span>
+                      <Badge variant={getPaymentStatusBadgeVariant(payment.status)}>
+                        {getPaymentStatusDisplay(payment.status)}
+                      </Badge>
+                    </div>
+                    {payment.amountPaid && (
+                      <div className="flex items-center justify-between">
+                        <span className="text-sm font-medium">Số tiền trả:</span>
+                        <span className="text-sm font-medium">{formatCurrency(payment.amountPaid)}</span>
+                      </div>
+                    )}
+                    {payment.changeAmount && payment.changeAmount > 0 && (
+                      <div className="flex items-center justify-between">
+                        <span className="text-sm font-medium">Tiền thừa:</span>
+                        <span className="text-sm font-medium">{formatCurrency(payment.changeAmount)}</span>
+                      </div>
+                    )}
+                    {payment.paymentTime && (
+                      <div className="flex items-center gap-2 text-sm text-muted-foreground">
+                        <Clock className="h-4 w-4" />
+                        <span>{formatDate(payment.paymentTime)}</span>
+                      </div>
+                    )}
+                    {index < order.payments.length - 1 && <Separator />}
+                  </div>
+                ))}
+              </CardContent>
+            </Card>
+          )}
+
+          {/* Order Timeline */}
+          <Card>
+            <CardHeader>
+              <CardTitle className="flex items-center gap-2">
+                <Clock className="h-5 w-5" />
+                Lịch Sử Đơn Hàng
+              </CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="space-y-3">
+                <div className="flex items-center gap-3">
+                  <div className="w-2 h-2 bg-primary rounded-full"></div>
+                  <div>
+                    <p className="text-sm font-medium">Đơn hàng được tạo</p>
+                    <p className="text-xs text-muted-foreground">{formatDate(order.createdAt)}</p>
+                  </div>
+                </div>
+                {order.orderTime && order.orderTime.getTime() !== order.createdAt.getTime() && (
+                  <div className="flex items-center gap-3">
+                    <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
+                    <div>
+                      <p className="text-sm font-medium">Bắt đầu xử lý</p>
+                      <p className="text-xs text-muted-foreground">{formatDate(order.orderTime)}</p>
+                    </div>
+                  </div>
+                )}
+                {order.status === 'COMPLETED' && (
+                  <div className="flex items-center gap-3">
+                    <div className="w-2 h-2 bg-green-500 rounded-full"></div>
+                    <div>
+                      <p className="text-sm font-medium">Hoàn thành</p>
+                      <p className="text-xs text-muted-foreground">{formatDate(order.updatedAt)}</p>
+                    </div>
+                  </div>
+                )}
+                {order.status === 'CANCELLED' && (
+                  <div className="flex items-center gap-3">
+                    <div className="w-2 h-2 bg-red-500 rounded-full"></div>
+                    <div>
+                      <p className="text-sm font-medium">Đã hủy</p>
+                      <p className="text-xs text-muted-foreground">{formatDate(order.updatedAt)}</p>
+                    </div>
+                  </div>
+                )}
+              </div>
+            </CardContent>
+          </Card>
+        </div>
+      </div>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/charts/summary-stats.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/charts/summary-stats.tsx b/frontend/manager/src/components/charts/summary-stats.tsx
new file mode 100644
--- /dev/null	(date 1750224616692)
+++ b/frontend/manager/src/components/charts/summary-stats.tsx	(date 1750224616692)
@@ -0,0 +1,86 @@
+"use client";
+
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { 
+  TrendingUp, 
+  ShoppingCart, 
+  Package, 
+  DollarSign 
+} from "lucide-react";
+import { SalesReportSummary } from '@/types/api';
+
+interface SummaryStatsProps {
+  summary: SalesReportSummary;
+}
+
+function formatCurrency(value: number): string {
+  return new Intl.NumberFormat('vi-VN', {
+    style: 'currency',
+    currency: 'VND',
+  }).format(value);
+}
+
+function formatNumber(value: number): string {
+  return new Intl.NumberFormat('vi-VN').format(value);
+}
+
+export function SummaryStats({ summary }: SummaryStatsProps) {
+  const stats = [
+    {
+      title: "Tổng Doanh Thu",
+      value: formatCurrency(summary.total_revenue),
+      icon: DollarSign,
+      description: summary.period,
+      color: "text-green-600"
+    },
+    {
+      title: "Tổng Đơn Hàng",
+      value: formatNumber(summary.total_orders),
+      icon: ShoppingCart,
+      description: "Đơn hàng hoàn thành",
+      color: "text-blue-600"
+    },
+    {
+      title: "Sản Phẩm Đã Bán",
+      value: formatNumber(summary.total_products_sold),
+      icon: Package,
+      description: "Tổng sản phẩm",
+      color: "text-purple-600"
+    },
+    {
+      title: "Doanh Thu TB/Đơn",
+      value: formatCurrency(
+        summary.total_orders > 0 
+          ? summary.total_revenue / summary.total_orders 
+          : 0
+      ),
+      icon: TrendingUp,
+      description: "Giá trị trung bình",
+      color: "text-orange-600"
+    }
+  ];
+
+  return (
+    <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
+      {stats.map((stat, index) => {
+        const Icon = stat.icon;
+        return (
+          <Card key={index}>
+            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+              <CardTitle className="text-sm font-medium">
+                {stat.title}
+              </CardTitle>
+              <Icon className={`h-4 w-4 ${stat.color}`} />
+            </CardHeader>
+            <CardContent>
+              <div className="text-2xl font-bold">{stat.value}</div>
+              <p className="text-xs text-muted-foreground">
+                {stat.description}
+              </p>
+            </CardContent>
+          </Card>
+        );
+      })}
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/forms/create-discount-form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-discount-form.tsx b/frontend/manager/src/components/forms/create-discount-form.tsx
new file mode 100644
--- /dev/null	(date 1750172208498)
+++ b/frontend/manager/src/components/forms/create-discount-form.tsx	(date 1750172208498)
@@ -0,0 +1,316 @@
+"use client";
+
+import { useState } from "react";
+import { Loader2, Calendar } from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { Switch } from "@/components/ui/switch";
+import { Label } from "@/components/ui/label";
+import { CreateDiscountDto } from "@/types/api";
+
+interface CreateDiscountFormProps {
+  onSubmit: (data: CreateDiscountDto) => Promise<void>;
+  isSubmitting?: boolean;
+  onCancel?: () => void;
+}
+
+export function CreateDiscountForm({
+  onSubmit,
+  isSubmitting = false,
+  onCancel,
+}: CreateDiscountFormProps) {
+  const [formData, setFormData] = useState<CreateDiscountDto>({
+    name: "",
+    description: "",
+    coupon_code: "",
+    discount_value: 0,
+    min_required_order_value: 0,
+    max_discount_amount: 0,
+    valid_until: "",
+    is_active: true,
+  });
+
+  const [errors, setErrors] = useState<Record<string, string>>({});
+
+  const validate = (): boolean => {
+    const newErrors: Record<string, string> = {};
+
+    if (!formData.name.trim()) {
+      newErrors.name = "Tên chương trình là bắt buộc";
+    }
+
+    if (!formData.coupon_code.trim()) {
+      newErrors.coupon_code = "Mã giảm giá là bắt buộc";
+    } else if (!/^[A-Z0-9]+$/.test(formData.coupon_code)) {
+      newErrors.coupon_code = "Mã chỉ chứa chữ hoa và số";
+    }
+
+    if (formData.discount_value <= 0 || formData.discount_value > 100) {
+      newErrors.discount_value = "Giá trị phải từ 1-100%";
+    }
+
+    if (formData.min_required_order_value < 0) {
+      newErrors.min_required_order_value = "Giá trị phải >= 0";
+    }
+
+    if (formData.max_discount_amount <= 0) {
+      newErrors.max_discount_amount = "Số tiền giảm tối đa phải > 0";
+    }
+
+    if (!formData.valid_until) {
+      newErrors.valid_until = "Ngày kết thúc là bắt buộc";
+    }
+
+    setErrors(newErrors);
+    return Object.keys(newErrors).length === 0;
+  };
+
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault();
+    
+    if (!validate()) {
+      return;
+    }
+
+    try {
+      await onSubmit(formData);
+      // Reset form after successful submission
+      setFormData({
+        name: "",
+        description: "",
+        coupon_code: "",
+        discount_value: 0,
+        min_required_order_value: 0,
+        max_discount_amount: 0,
+        valid_until: "",
+        is_active: true,
+      });
+      setErrors({});
+    } catch (error) {
+      console.error("Lỗi submit form:", error);
+    }
+  };
+
+  const handleChange = (field: keyof CreateDiscountDto, value: string | number | boolean | undefined) => {
+    setFormData(prev => ({ ...prev, [field]: value }));
+    // Clear error when user starts typing
+    if (errors[field]) {
+      setErrors(prev => ({ ...prev, [field]: "" }));
+    }
+  };
+
+  return (
+    <form onSubmit={handleSubmit} className="space-y-6">
+      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+        {/* Tên chương trình */}
+        <div className="md:col-span-2 space-y-2">
+          <Label htmlFor="name">
+            Tên chương trình khuyến mãi <span className="text-destructive">*</span>
+          </Label>
+          <Input
+            id="name"
+            placeholder="Ví dụ: Giảm giá mùa hè 2024"
+            value={formData.name}
+            onChange={(e) => handleChange("name", e.target.value)}
+            className={errors.name ? "border-destructive" : ""}
+          />
+          {errors.name && <p className="text-sm text-destructive">{errors.name}</p>}
+        </div>
+
+        {/* Mã giảm giá */}
+        <div className="space-y-2">
+          <Label htmlFor="coupon_code">
+            Mã giảm giá <span className="text-destructive">*</span>
+          </Label>
+          <Input
+            id="coupon_code"
+            placeholder="SUMMER2024"
+            value={formData.coupon_code}
+            onChange={(e) => handleChange("coupon_code", e.target.value.toUpperCase())}
+            className={errors.coupon_code ? "border-destructive" : ""}
+          />
+          <p className="text-sm text-muted-foreground">Chỉ chữ hoa và số</p>
+          {errors.coupon_code && <p className="text-sm text-destructive">{errors.coupon_code}</p>}
+        </div>
+
+        {/* Giá trị giảm giá */}
+        <div className="space-y-2">
+          <Label htmlFor="discount_value">
+            Giá trị giảm giá (%) <span className="text-destructive">*</span>
+          </Label>
+          <Input
+            id="discount_value"
+            type="number"
+            min="1"
+            max="100"
+            placeholder="10"
+            value={formData.discount_value}
+            onChange={(e) => handleChange("discount_value", parseFloat(e.target.value) || 0)}
+            className={errors.discount_value ? "border-destructive" : ""}
+          />
+          {errors.discount_value && <p className="text-sm text-destructive">{errors.discount_value}</p>}
+        </div>
+
+        {/* Đơn hàng tối thiểu */}
+        <div className="space-y-2">
+          <Label htmlFor="min_required_order_value">
+            Đơn hàng tối thiểu (VND) <span className="text-destructive">*</span>
+          </Label>
+          <Input
+            id="min_required_order_value"
+            type="number"
+            min="0"
+            placeholder="100000"
+            value={formData.min_required_order_value}
+            onChange={(e) => handleChange("min_required_order_value", parseInt(e.target.value) || 0)}
+            className={errors.min_required_order_value ? "border-destructive" : ""}
+          />
+          {errors.min_required_order_value && <p className="text-sm text-destructive">{errors.min_required_order_value}</p>}
+        </div>
+
+        {/* Giảm tối đa */}
+        <div className="space-y-2">
+          <Label htmlFor="max_discount_amount">
+            Số tiền giảm tối đa (VND) <span className="text-destructive">*</span>
+          </Label>
+          <Input
+            id="max_discount_amount"
+            type="number"
+            min="1"
+            placeholder="50000"
+            value={formData.max_discount_amount}
+            onChange={(e) => handleChange("max_discount_amount", parseInt(e.target.value) || 0)}
+            className={errors.max_discount_amount ? "border-destructive" : ""}
+          />
+          {errors.max_discount_amount && <p className="text-sm text-destructive">{errors.max_discount_amount}</p>}
+        </div>
+
+        {/* Ngày kết thúc */}
+        <div className="space-y-2">
+          <Label htmlFor="valid_until">
+            Ngày kết thúc <span className="text-destructive">*</span>
+          </Label>
+          <div className="relative">
+            <Input
+              id="valid_until"
+              type="datetime-local"
+              value={formData.valid_until}
+              onChange={(e) => handleChange("valid_until", e.target.value)}
+              className={errors.valid_until ? "border-destructive" : ""}
+            />
+          </div>
+          {errors.valid_until && <p className="text-sm text-destructive">{errors.valid_until}</p>}
+        </div>
+
+        {/* Ngày bắt đầu */}
+        <div className="space-y-2">
+          <Label htmlFor="valid_from">Ngày bắt đầu</Label>
+          <div className="relative">
+            <Input
+              id="valid_from"
+              type="datetime-local"
+              value={formData.valid_from || ""}
+              onChange={(e) => handleChange("valid_from", e.target.value || undefined)}
+            />
+          </div>
+          <p className="text-sm text-muted-foreground">Để trống nếu áp dụng ngay</p>
+        </div>
+      </div>
+
+      {/* Các giới hạn sử dụng */}
+      <div className="space-y-4">
+        <h3 className="text-lg font-medium">Giới Hạn Sử Dụng</h3>
+        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
+          <div className="space-y-2">
+            <Label htmlFor="max_uses">Số lần sử dụng tối đa</Label>
+            <Input
+              id="max_uses"
+              type="number"
+              min="1"
+              placeholder="100"
+              value={formData.max_uses || ""}
+              onChange={(e) => handleChange("max_uses", parseInt(e.target.value) || undefined)}
+            />
+            <p className="text-sm text-muted-foreground">Để trống nếu không giới hạn</p>
+          </div>
+
+          <div className="space-y-2">
+            <Label htmlFor="max_uses_per_customer">Số lần sử dụng/khách hàng</Label>
+            <Input
+              id="max_uses_per_customer"
+              type="number"
+              min="1"
+              placeholder="1"
+              value={formData.max_uses_per_customer || ""}
+              onChange={(e) => handleChange("max_uses_per_customer", parseInt(e.target.value) || undefined)}
+            />
+            <p className="text-sm text-muted-foreground">Để trống nếu không giới hạn</p>
+          </div>
+
+          <div className="space-y-2">
+            <Label htmlFor="min_required_product">Số lượng sản phẩm tối thiểu</Label>
+            <Input
+              id="min_required_product"
+              type="number"
+              min="1"
+              placeholder="2"
+              value={formData.min_required_product || ""}
+              onChange={(e) => handleChange("min_required_product", parseInt(e.target.value) || undefined)}
+            />
+            <p className="text-sm text-muted-foreground">Để trống nếu không giới hạn</p>
+          </div>
+        </div>
+      </div>
+
+      {/* Mô tả */}
+      <div className="space-y-2">
+        <Label htmlFor="description">Mô tả</Label>
+        <Textarea
+          id="description"
+          placeholder="Mô tả chi tiết về chương trình khuyến mãi..."
+          className="min-h-[100px]"
+          value={formData.description || ""}
+          onChange={(e) => handleChange("description", e.target.value || undefined)}
+        />
+      </div>
+
+      {/* Trạng thái */}
+      <div className="flex flex-row items-center justify-between rounded-lg border p-4">
+        <div className="space-y-0.5">
+          <Label className="text-base">Kích hoạt ngay</Label>
+          <p className="text-sm text-muted-foreground">
+            Chương trình sẽ có hiệu lực ngay sau khi tạo
+          </p>
+        </div>
+        <Switch
+          checked={formData.is_active}
+          onCheckedChange={(checked) => handleChange("is_active", checked)}
+        />
+      </div>
+
+      {/* Buttons */}
+      <div className="flex justify-end space-x-2">
+        <Button
+          type="button"
+          variant="outline"
+          onClick={onCancel}
+          disabled={isSubmitting}
+        >
+          Hủy
+        </Button>
+        <Button type="submit" disabled={isSubmitting}>
+          {isSubmitting ? (
+            <>
+              <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+              Đang tạo...
+            </>
+          ) : (
+            "Tạo chương trình"
+          )}
+        </Button>
+      </div>
+    </form>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/charts/product-sales-chart.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/charts/product-sales-chart.tsx b/frontend/manager/src/components/charts/product-sales-chart.tsx
new file mode 100644
--- /dev/null	(date 1750224586836)
+++ b/frontend/manager/src/components/charts/product-sales-chart.tsx	(date 1750224586836)
@@ -0,0 +1,137 @@
+"use client";
+
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { 
+  BarChart, 
+  Bar, 
+  XAxis, 
+  YAxis, 
+  CartesianGrid, 
+  Tooltip, 
+  ResponsiveContainer,
+  PieChart,
+  Pie,
+  Cell,
+  Legend
+} from 'recharts';
+import { ProductSalesData } from '@/types/api';
+
+interface ProductSalesChartProps {
+  data: ProductSalesData[];
+  type: 'bar' | 'pie';
+  title: string;
+  description?: string;
+  showTop?: number;
+}
+
+const COLORS = [
+  'hsl(var(--chart-1))',
+  'hsl(var(--chart-2))', 
+  'hsl(var(--chart-3))',
+  'hsl(var(--chart-4))',
+  'hsl(var(--chart-5))',
+];
+
+function formatCurrency(value: number): string {
+  return new Intl.NumberFormat('vi-VN', {
+    style: 'currency',
+    currency: 'VND',
+  }).format(value);
+}
+
+function formatChartData(data: ProductSalesData[], showTop: number = 10) {
+  return data
+    .slice(0, showTop)
+    .map(item => ({
+      name: item.product_name.length > 20 
+        ? item.product_name.substring(0, 20) + '...'
+        : item.product_name,
+      fullName: item.product_name,
+      quantity: item.quantity_sold,
+      revenue: item.revenue,
+      value: item.quantity_sold, // For pie chart
+    }));
+}
+
+export function ProductSalesChart({ 
+  data, 
+  type, 
+  title, 
+  description, 
+  showTop = 10 
+}: ProductSalesChartProps) {
+  const chartData = formatChartData(data, showTop);
+
+  const renderBarChart = () => (
+    <ResponsiveContainer width="100%" height="100%">
+      <BarChart data={chartData} layout="horizontal">
+        <CartesianGrid strokeDasharray="3 3" />
+        <XAxis 
+          type="number"
+          fontSize={12}
+          tickLine={false}
+          axisLine={false}
+        />
+        <YAxis 
+          type="category"
+          dataKey="name" 
+          fontSize={12}
+          tickLine={false}
+          axisLine={false}
+          width={120}
+        />
+        <Tooltip
+          formatter={(value: number, name: string) => [
+            name === 'quantity' ? `${value} sản phẩm` : formatCurrency(value),
+            name === 'quantity' ? 'Số lượng bán' : 'Doanh thu'
+          ]}
+          labelFormatter={(label) => `Sản phẩm: ${label}`}
+        />
+        <Bar 
+          dataKey="quantity" 
+          fill="hsl(var(--primary))"
+          radius={[0, 4, 4, 0]}
+        />
+      </BarChart>
+    </ResponsiveContainer>
+  );
+
+  const renderPieChart = () => (
+    <ResponsiveContainer width="100%" height="100%">
+      <PieChart>
+        <Pie
+          data={chartData}
+          cx="50%"
+          cy="50%"
+          labelLine={false}
+          label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}
+          outerRadius={80}
+          fill="#8884d8"
+          dataKey="value"
+        >
+          {chartData.map((_, index) => (
+            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
+          ))}
+        </Pie>
+        <Tooltip 
+          formatter={(value: number) => [`${value} sản phẩm`, 'Số lượng bán']}
+        />
+        <Legend />
+      </PieChart>
+    </ResponsiveContainer>
+  );
+
+  return (
+    <Card>
+      <CardHeader>
+        <CardTitle>{title}</CardTitle>
+        {description && <CardDescription>{description}</CardDescription>}
+      </CardHeader>
+      <CardContent>
+        <div className="h-[400px]">
+          {type === 'pie' ? renderPieChart() : renderBarChart()}
+        </div>
+      </CardContent>
+    </Card>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/charts/revenue-chart.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/charts/revenue-chart.tsx b/frontend/manager/src/components/charts/revenue-chart.tsx
new file mode 100644
--- /dev/null	(date 1750224485414)
+++ b/frontend/manager/src/components/charts/revenue-chart.tsx	(date 1750224485414)
@@ -0,0 +1,88 @@
+"use client";
+
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { 
+  BarChart, 
+  Bar, 
+  XAxis, 
+  YAxis, 
+  CartesianGrid, 
+  Tooltip, 
+  ResponsiveContainer 
+} from 'recharts';
+import { MonthlySalesData, DailySalesData } from '@/types/api';
+
+interface RevenueChartProps {
+  data: MonthlySalesData[] | DailySalesData[];
+  type: 'monthly' | 'daily';
+  title: string;
+  description?: string;
+}
+
+function formatCurrency(value: number): string {
+  return new Intl.NumberFormat('vi-VN', {
+    style: 'currency',
+    currency: 'VND',
+  }).format(value);
+}
+
+function formatChartData(data: MonthlySalesData[] | DailySalesData[], type: 'monthly' | 'daily') {
+  if (type === 'monthly') {
+    return (data as MonthlySalesData[]).map(item => ({
+      name: `Tháng ${item.month}`,
+      revenue: item.total_revenue,
+      orders: item.total_orders,
+      products: item.total_products_sold,
+    }));
+  } else {
+    return (data as DailySalesData[]).map(item => ({
+      name: `${item.day}/${item.month}`,
+      revenue: item.total_revenue,
+      orders: item.total_orders,
+      products: item.total_products_sold,
+    }));
+  }
+}
+
+export function RevenueChart({ data, type, title, description }: RevenueChartProps) {
+  const chartData = formatChartData(data, type);
+
+  return (
+    <Card>
+      <CardHeader>
+        <CardTitle>{title}</CardTitle>
+        {description && <CardDescription>{description}</CardDescription>}
+      </CardHeader>
+      <CardContent>
+        <div className="h-[300px]">
+          <ResponsiveContainer width="100%" height="100%">
+            <BarChart data={chartData}>
+              <CartesianGrid strokeDasharray="3 3" />
+              <XAxis 
+                dataKey="name" 
+                fontSize={12}
+                tickLine={false}
+                axisLine={false}
+              />
+              <YAxis
+                fontSize={12}
+                tickLine={false}
+                axisLine={false}
+                tickFormatter={(value) => `${(value / 1000000).toFixed(1)}M`}
+              />
+              <Tooltip
+                formatter={(value: number) => [formatCurrency(value), 'Doanh thu']}
+                labelFormatter={(label) => `Thời gian: ${label}`}
+              />
+              <Bar 
+                dataKey="revenue" 
+                fill="hsl(var(--primary))"
+                radius={[4, 4, 0, 0]}
+              />
+            </BarChart>
+          </ResponsiveContainer>
+        </div>
+      </CardContent>
+    </Card>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/ui/clearable-input.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/ui/clearable-input.tsx b/frontend/manager/src/components/ui/clearable-input.tsx
new file mode 100644
--- /dev/null	(date 1750211072525)
+++ b/frontend/manager/src/components/ui/clearable-input.tsx	(date 1750211072525)
@@ -0,0 +1,43 @@
+import * as React from "react";
+import { X } from "lucide-react";
+import { cn } from "@/lib/utils";
+
+export interface ClearableInputProps
+  extends React.InputHTMLAttributes<HTMLInputElement> {
+  onClear?: () => void;
+  showClear?: boolean;
+}
+
+const ClearableInput = React.forwardRef<HTMLInputElement, ClearableInputProps>(
+  ({ className, type, onClear, showClear = true, ...props }, ref) => {
+    const hasValue = props.value !== undefined && props.value !== null && props.value !== "";
+
+    return (
+      <div className="relative">
+        <input
+          type={type}
+          className={cn(
+            "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+            hasValue && showClear && onClear ? "pr-8" : "",
+            className
+          )}
+          ref={ref}
+          {...props}
+        />
+        {hasValue && showClear && onClear && (
+          <button
+            type="button"
+            onClick={onClear}
+            className="absolute right-2 top-1/2 -translate-y-1/2 h-4 w-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none"
+          >
+            <X className="h-3 w-3" />
+            <span className="sr-only">Xóa</span>
+          </button>
+        )}
+      </div>
+    );
+  }
+);
+ClearableInput.displayName = "ClearableInput";
+
+export { ClearableInput }; 
\ No newline at end of file
Index: frontend/manager/src/components/ui/clearable-textarea.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/ui/clearable-textarea.tsx b/frontend/manager/src/components/ui/clearable-textarea.tsx
new file mode 100644
--- /dev/null	(date 1750210878996)
+++ b/frontend/manager/src/components/ui/clearable-textarea.tsx	(date 1750210878996)
@@ -0,0 +1,42 @@
+import * as React from "react";
+import { X } from "lucide-react";
+import { cn } from "@/lib/utils";
+
+export interface ClearableTextareaProps
+  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {
+  onClear?: () => void;
+  showClear?: boolean;
+}
+
+const ClearableTextarea = React.forwardRef<HTMLTextAreaElement, ClearableTextareaProps>(
+  ({ className, onClear, showClear = true, ...props }, ref) => {
+    const hasValue = props.value !== undefined && props.value !== null && props.value !== "";
+
+    return (
+      <div className="relative">
+        <textarea
+          className={cn(
+            "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
+            hasValue && showClear && onClear ? "pr-8" : "",
+            className
+          )}
+          ref={ref}
+          {...props}
+        />
+        {hasValue && showClear && onClear && (
+          <button
+            type="button"
+            onClick={onClear}
+            className="absolute right-2 top-2 h-4 w-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none"
+          >
+            <X className="h-3 w-3" />
+            <span className="sr-only">Xóa</span>
+          </button>
+        )}
+      </div>
+    );
+  }
+);
+ClearableTextarea.displayName = "ClearableTextarea";
+
+export { ClearableTextarea }; 
\ No newline at end of file
Index: frontend/manager/src/components/forms/create-product-size-dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-product-size-dialog.tsx b/frontend/manager/src/components/forms/create-product-size-dialog.tsx
new file mode 100644
--- /dev/null	(date 1750165289298)
+++ b/frontend/manager/src/components/forms/create-product-size-dialog.tsx	(date 1750165289298)
@@ -0,0 +1,189 @@
+"use client";
+
+import { useEffect } from "react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { Loader2 } from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { CreateProductSizeFormData, createProductSizeSchema } from "@/lib/validations/product-size";
+
+interface CreateProductSizeDialogProps {
+  open: boolean;
+  onOpenChange: (open: boolean) => void;
+  onSubmit: (data: CreateProductSizeFormData) => Promise<void>;
+  isSubmitting: boolean;
+}
+
+export function CreateProductSizeDialog({
+  open,
+  onOpenChange,
+  onSubmit,
+  isSubmitting,
+}: CreateProductSizeDialogProps) {
+  const form = useForm<CreateProductSizeFormData>({
+    resolver: zodResolver(createProductSizeSchema),
+    defaultValues: {
+      name: "",
+      unit: "",
+      quantity: 1,
+      description: "",
+    },
+  });
+
+  useEffect(() => {
+    if (open) {
+      form.reset();
+    }
+  }, [open, form]);
+
+  const handleSubmit = async (data: CreateProductSizeFormData) => {
+    try {
+      await onSubmit(data);
+      form.reset();
+    } catch (error) {
+      console.error("Lỗi tạo kích thước sản phẩm:", error);
+    }
+  };
+
+  const handleCancel = () => {
+    form.reset();
+    onOpenChange(false);
+  };
+
+  return (
+    <Dialog open={open} onOpenChange={onOpenChange}>
+      <DialogContent className="max-w-md">
+        <DialogHeader>
+          <DialogTitle>Thêm Kích Thước Mới</DialogTitle>
+          <DialogDescription>
+            Tạo kích thước sản phẩm mới để áp dụng cho các sản phẩm
+          </DialogDescription>
+        </DialogHeader>
+
+        <Form {...form}>
+          <form onSubmit={form.handleSubmit(handleSubmit)} className="space-y-4">
+            {/* Tên kích thước */}
+            <FormField
+              control={form.control}
+              name="name"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Tên Kích Thước *</FormLabel>
+                  <FormControl>
+                    <Input 
+                      placeholder="Ví dụ: S, M, L, XL" 
+                      {...field} 
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Đơn vị */}
+            <FormField
+              control={form.control}
+              name="unit"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Đơn Vị *</FormLabel>
+                  <FormControl>
+                    <Input 
+                      placeholder="Ví dụ: piece, kg, lít" 
+                      {...field} 
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Số lượng */}
+            <FormField
+              control={form.control}
+              name="quantity"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Số Lượng *</FormLabel>
+                  <FormControl>
+                    <Input 
+                      type="number"
+                      min="1"
+                      placeholder="1" 
+                      {...field}
+                      onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Mô tả */}
+            <FormField
+              control={form.control}
+              name="description"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Mô Tả</FormLabel>
+                  <FormControl>
+                    <Textarea
+                      placeholder="Mô tả chi tiết về kích thước này..."
+                      className="min-h-[80px]"
+                      {...field}
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Actions */}
+            <div className="flex justify-end space-x-2 pt-4">
+              <Button
+                type="button"
+                variant="outline"
+                onClick={handleCancel}
+                disabled={isSubmitting}
+              >
+                Hủy
+              </Button>
+              <Button type="submit" disabled={isSubmitting}>
+                {isSubmitting ? (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                    Đang tạo...
+                  </>
+                ) : (
+                  "Tạo Kích Thước"
+                )}
+              </Button>
+            </div>
+          </form>
+        </Form>
+      </DialogContent>
+    </Dialog>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/forms/edit-product-size-dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/edit-product-size-dialog.tsx b/frontend/manager/src/components/forms/edit-product-size-dialog.tsx
new file mode 100644
--- /dev/null	(date 1750165321465)
+++ b/frontend/manager/src/components/forms/edit-product-size-dialog.tsx	(date 1750165321465)
@@ -0,0 +1,197 @@
+"use client";
+
+import { useEffect } from "react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { Loader2 } from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { UpdateProductSizeFormData, updateProductSizeSchema } from "@/lib/validations/product-size";
+import { ProductSize } from "@/types/api";
+
+interface EditProductSizeDialogProps {
+  open: boolean;
+  onOpenChange: (open: boolean) => void;
+  onSubmit: (data: UpdateProductSizeFormData) => Promise<void>;
+  isSubmitting: boolean;
+  productSize: ProductSize;
+}
+
+export function EditProductSizeDialog({
+  open,
+  onOpenChange,
+  onSubmit,
+  isSubmitting,
+  productSize,
+}: EditProductSizeDialogProps) {
+  const form = useForm<UpdateProductSizeFormData>({
+    resolver: zodResolver(updateProductSizeSchema),
+    defaultValues: {
+      name: "",
+      unit: "",
+      quantity: 1,
+      description: "",
+    },
+  });
+
+  useEffect(() => {
+    if (open && productSize) {
+      form.reset({
+        name: productSize.name || "",
+        unit: productSize.unit || "",
+        quantity: productSize.quantity || 1,
+        description: productSize.description || "",
+      });
+    }
+  }, [open, productSize, form]);
+
+  const handleSubmit = async (data: UpdateProductSizeFormData) => {
+    try {
+      await onSubmit(data);
+      form.reset();
+    } catch (error) {
+      console.error("Lỗi cập nhật kích thước sản phẩm:", error);
+    }
+  };
+
+  const handleCancel = () => {
+    form.reset();
+    onOpenChange(false);
+  };
+
+  return (
+    <Dialog open={open} onOpenChange={onOpenChange}>
+      <DialogContent className="max-w-md">
+        <DialogHeader>
+          <DialogTitle>Chỉnh Sửa Kích Thước</DialogTitle>
+          <DialogDescription>
+            Cập nhật thông tin kích thước sản phẩm #{productSize?.id}
+          </DialogDescription>
+        </DialogHeader>
+
+        <Form {...form}>
+          <form onSubmit={form.handleSubmit(handleSubmit)} className="space-y-4">
+            {/* Tên kích thước */}
+            <FormField
+              control={form.control}
+              name="name"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Tên Kích Thước *</FormLabel>
+                  <FormControl>
+                    <Input 
+                      placeholder="Ví dụ: S, M, L, XL" 
+                      {...field} 
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Đơn vị */}
+            <FormField
+              control={form.control}
+              name="unit"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Đơn Vị *</FormLabel>
+                  <FormControl>
+                    <Input 
+                      placeholder="Ví dụ: piece, kg, lít" 
+                      {...field} 
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Số lượng */}
+            <FormField
+              control={form.control}
+              name="quantity"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Số Lượng *</FormLabel>
+                  <FormControl>
+                    <Input 
+                      type="number"
+                      min="1"
+                      placeholder="1" 
+                      {...field}
+                      onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Mô tả */}
+            <FormField
+              control={form.control}
+              name="description"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Mô Tả</FormLabel>
+                  <FormControl>
+                    <Textarea
+                      placeholder="Mô tả chi tiết về kích thước này..."
+                      className="min-h-[80px]"
+                      {...field}
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Actions */}
+            <div className="flex justify-end space-x-2 pt-4">
+              <Button
+                type="button"
+                variant="outline"
+                onClick={handleCancel}
+                disabled={isSubmitting}
+              >
+                Hủy
+              </Button>
+              <Button type="submit" disabled={isSubmitting}>
+                {isSubmitting ? (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                    Đang cập nhật...
+                  </>
+                ) : (
+                  "Cập Nhật"
+                )}
+              </Button>
+            </div>
+          </form>
+        </Form>
+      </DialogContent>
+    </Dialog>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/promotions/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/promotions/layout.tsx b/frontend/manager/src/app/promotions/layout.tsx
new file mode 100644
--- /dev/null	(date 1750171079551)
+++ b/frontend/manager/src/app/promotions/layout.tsx	(date 1750171079551)
@@ -0,0 +1,17 @@
+import { MainLayout } from "@/components/layout/main-layout";
+import { Toaster } from "@/components/ui/sonner";
+
+export default function PromotionsLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return (
+    <>
+      <MainLayout>
+        {children}
+      </MainLayout>
+      <Toaster richColors />
+    </>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/promotions/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/promotions/page.tsx b/frontend/manager/src/app/promotions/page.tsx
new file mode 100644
--- /dev/null	(date 1750210206993)
+++ b/frontend/manager/src/app/promotions/page.tsx	(date 1750210206993)
@@ -0,0 +1,490 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter } from "next/navigation";
+import { Plus, MoreHorizontal, Trash2, Eye, ArrowUpDown, Loader2, X, Calendar, Percent } from "lucide-react";
+import { ColumnDef } from "@tanstack/react-table";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent } from "@/components/ui/card";
+import { Checkbox } from "@/components/ui/checkbox";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import { Badge } from "@/components/ui/badge";
+import { DataTable } from "@/components/ui/data-table";
+import { CreateDiscountForm } from "@/components/forms/create-discount-form";
+import { Discount } from "@/types/api";
+import { CreateDiscountDto } from "@/types/api";
+import { useDiscountsStore } from "@/stores/discounts";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit", 
+    day: "2-digit",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+export default function PromotionsPage() {
+  const router = useRouter();
+  
+  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+  const [isBulkDeleteDialogOpen, setIsBulkDeleteDialogOpen] = useState(false);
+  const [selectedDiscount, setSelectedDiscount] = useState<Discount | null>(null);
+  const [selectedDiscounts, setSelectedDiscounts] = useState<number[]>([]);
+
+  const {
+    discounts,
+    isLoading,
+    isCreating,
+    isDeleting,
+    fetchDiscounts,
+    createDiscount,
+    deleteDiscount,
+    bulkDeleteDiscounts,
+  } = useDiscountsStore();
+
+  useEffect(() => {
+    fetchDiscounts();
+  }, [fetchDiscounts]);
+
+  const handleCreateDiscount = async (data: CreateDiscountDto) => {
+    try {
+      await createDiscount(data);
+      setIsCreateDialogOpen(false);
+      toast.success("Tạo chương trình khuyến mãi thành công!");
+    } catch (error) {
+      console.error("Lỗi tạo khuyến mãi:", error);
+      toast.error("Không thể tạo chương trình khuyến mãi. Vui lòng thử lại.");
+    }
+  };
+
+  const handleDeleteDiscount = async () => {
+    if (!selectedDiscount) return;
+    
+    try {
+      await deleteDiscount(selectedDiscount.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedDiscount(null);
+      toast.success("Xóa chương trình khuyến mãi thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa khuyến mãi:", error);
+      toast.error("Không thể xóa chương trình khuyến mãi. Vui lòng thử lại.");
+    }
+  };
+
+  const handleBulkDelete = async () => {
+    if (selectedDiscounts.length === 0) return;
+    
+    try {
+      const result = await bulkDeleteDiscounts(selectedDiscounts);
+      setIsBulkDeleteDialogOpen(false);
+      setSelectedDiscounts([]);
+      
+      if (result.summary.failed > 0) {
+        toast.warning(`Xóa thành công ${result.summary.success} chương trình. ${result.summary.failed} chương trình không thể xóa.`);
+      } else {
+        toast.success(`Xóa thành công ${result.summary.success} chương trình khuyến mãi!`);
+      }
+    } catch (error) {
+      console.error("Lỗi xóa nhiều khuyến mãi:", error);
+      toast.error("Không thể xóa các chương trình khuyến mãi đã chọn. Vui lòng thử lại.");
+    }
+  };
+
+  const openDeleteDialog = (discount: Discount) => {
+    setSelectedDiscount(discount);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const openBulkDeleteDialog = () => {
+    setIsBulkDeleteDialogOpen(true);
+  };
+
+  const handleSelectDiscount = (discountId: number, selected: boolean) => {
+    if (selected) {
+      setSelectedDiscounts([...selectedDiscounts, discountId]);
+    } else {
+      setSelectedDiscounts(selectedDiscounts.filter(id => id !== discountId));
+    }
+  };
+
+  const handleSelectAll = (selected: boolean) => {
+    if (selected) {
+      setSelectedDiscounts(discounts.map(d => d.id));
+    } else {
+      setSelectedDiscounts([]);
+    }
+  };
+
+  const clearSelection = () => {
+    setSelectedDiscounts([]);
+  };
+
+  const columns: ColumnDef<Discount>[] = [
+    {
+      id: "select",
+      header: ({ table }) => (
+        <Checkbox
+          checked={table.getIsAllPageRowsSelected()}
+          onCheckedChange={(value) => {
+            table.toggleAllPageRowsSelected(!!value);
+            handleSelectAll(!!value);
+          }}
+          aria-label="Chọn tất cả"
+        />
+      ),
+      cell: ({ row }) => (
+        <Checkbox
+          checked={selectedDiscounts.includes(row.original.id)}
+          onCheckedChange={(value) => {
+            row.toggleSelected(!!value);
+            handleSelectDiscount(row.original.id, !!value);
+          }}
+          aria-label="Chọn hàng"
+        />
+      ),
+      enableSorting: false,
+      enableHiding: false,
+    },
+    {
+      accessorKey: "name",
+      header: "Chương Trình",
+      cell: ({ row }) => {
+        const discount = row.original;
+        return (
+          <div className="flex items-start gap-3">
+            <div className="bg-primary/10 p-2 rounded-md">
+              <Percent className="h-4 w-4 text-primary" />
+            </div>
+            <div>
+              <div className="font-medium">{discount.name}</div>
+              <div className="text-sm text-muted-foreground">
+                Mã: <span className="font-mono font-semibold">{discount.couponCode}</span>
+              </div>
+              {discount.description && (
+                <div className="text-sm text-muted-foreground mt-1 line-clamp-2">
+                  {discount.description}
+                </div>
+              )}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "discountValue",
+      header: ({ column }) => {
+        return (
+          <Button
+            variant="ghost"
+            onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}
+          >
+            Giá Trị
+            <ArrowUpDown className="ml-2 h-4 w-4" />
+          </Button>
+        );
+      },
+      cell: ({ row }) => {
+        const value = row.getValue("discountValue") as number;
+        return (
+          <div className="text-center">
+            <div className="text-lg font-semibold text-primary">{value}%</div>
+            <div className="text-sm text-muted-foreground">
+              Tối đa {formatCurrency(row.original.maxDiscountAmount)}
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "minRequiredOrderValue",
+      header: "Đơn Tối Thiểu",
+      cell: ({ row }) => {
+        const value = row.getValue("minRequiredOrderValue") as number;
+        return (
+          <div className="text-sm">
+            {value > 0 ? formatCurrency(value) : "Không yêu cầu"}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "validUntil",
+      header: ({ column }) => {
+        return (
+          <Button
+            variant="ghost"
+            onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}
+          >
+            Thời Hạn
+            <ArrowUpDown className="ml-2 h-4 w-4" />
+          </Button>
+        );
+      },
+      cell: ({ row }) => {
+        const validFrom = row.original.validFrom;
+        const validUntil = row.getValue("validUntil") as Date;
+        const now = new Date();
+        const isExpired = validUntil < now;
+        const isNotStarted = validFrom && validFrom > now;
+        
+        return (
+          <div className="text-sm">
+            <div className="flex items-center gap-1">
+              <Calendar className="h-3 w-3" />
+              {validFrom && (
+                <span>{formatDate(validFrom)} - </span>
+              )}
+              <span>{formatDate(validUntil)}</span>
+            </div>
+            {isExpired && (
+              <Badge variant="secondary" className="text-xs mt-1">Hết hạn</Badge>
+            )}
+            {isNotStarted && (
+              <Badge variant="outline" className="text-xs mt-1">Chưa bắt đầu</Badge>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "currentUses",
+      header: "Sử Dụng",
+      cell: ({ row }) => {
+        const currentUses = row.getValue("currentUses") as number || 0;
+        const maxUses = row.original.maxUses;
+        
+        return (
+          <div className="text-sm">
+            <div className="font-medium">{currentUses}</div>
+            {maxUses && (
+              <div className="text-muted-foreground">/ {maxUses}</div>
+            )}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "isActive",
+      header: "Trạng Thái",
+      cell: ({ row }) => {
+        const isActive = row.getValue("isActive") as boolean;
+        return (
+          <Badge variant={isActive ? "default" : "secondary"}>
+            {isActive ? "Hoạt Động" : "Vô Hiệu Hóa"}
+          </Badge>
+        );
+      },
+    },
+    {
+      id: "actions",
+      header: "Thao Tác",
+      cell: ({ row }) => {
+        const discount = row.original;
+        
+        return (
+          <DropdownMenu>
+            <DropdownMenuTrigger asChild>
+              <Button variant="ghost" size="icon">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem onClick={() => router.push(`/promotions/${discount.id}`)}>
+                <Eye className="mr-2 h-4 w-4" />
+                Xem Chi Tiết
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-destructive"
+                onClick={() => openDeleteDialog(discount)}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
+        );
+      },
+    },
+  ];
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Chương Trình Khuyến Mãi</h1>
+          <p className="text-muted-foreground">
+            Quản lý các chương trình giảm giá và khuyến mãi của cửa hàng
+          </p>
+        </div>
+        <Button onClick={() => setIsCreateDialogOpen(true)}>
+          <Plus className="mr-2 h-4 w-4" />
+          Thêm Khuyến Mãi
+        </Button>
+      </div>
+
+      {/* Bulk Actions Toolbar */}
+      {selectedDiscounts.length > 0 && (
+        <Card className="p-4">
+          <div className="flex items-center justify-between">
+            <div className="flex items-center space-x-2">
+              <span className="text-sm text-muted-foreground">
+                Đã chọn {selectedDiscounts.length} chương trình
+              </span>
+              <Button
+                variant="ghost"
+                size="sm"
+                onClick={clearSelection}
+              >
+                <X className="h-4 w-4 mr-1" />
+                Bỏ chọn
+              </Button>
+            </div>
+            <div className="flex items-center space-x-2">
+              <Button
+                variant="destructive"
+                size="sm"
+                onClick={openBulkDeleteDialog}
+                disabled={isDeleting}
+              >
+                <Trash2 className="h-4 w-4 mr-2" />
+                Xóa đã chọn
+              </Button>
+            </div>
+          </div>
+        </Card>
+      )}
+
+      {/* Discounts Data Table */}
+      <Card>
+        <CardContent className="p-0">
+          <DataTable 
+            columns={columns} 
+            data={discounts}
+            searchKey="name"
+            searchPlaceholder="Tìm kiếm theo tên chương trình hoặc mã giảm giá..."
+          />
+        </CardContent>
+      </Card>
+
+      {/* Create Discount Dialog */}
+      <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>
+        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
+          <DialogHeader>
+            <DialogTitle>Thêm Chương Trình Khuyến Mãi</DialogTitle>
+            <DialogDescription>
+              Tạo mới chương trình giảm giá và khuyến mãi cho khách hàng
+            </DialogDescription>
+          </DialogHeader>
+          <CreateDiscountForm 
+            onSubmit={handleCreateDiscount}
+            isSubmitting={isCreating}
+            onCancel={() => setIsCreateDialogOpen(false)}
+          />
+        </DialogContent>
+      </Dialog>
+
+      {/* Delete Confirmation Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa chương trình khuyến mãi <strong>{selectedDiscount?.name}</strong>? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteDiscount}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+
+      {/* Bulk Delete Confirmation Dialog */}
+      <AlertDialog open={isBulkDeleteDialogOpen} onOpenChange={setIsBulkDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa nhiều chương trình</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa {selectedDiscounts.length} chương trình khuyến mãi đã chọn? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleBulkDelete}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                `Xóa ${selectedDiscounts.length} chương trình`
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/promotions/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/promotions/[id]/page.tsx b/frontend/manager/src/app/promotions/[id]/page.tsx
new file mode 100644
--- /dev/null	(date 1750211462737)
+++ b/frontend/manager/src/app/promotions/[id]/page.tsx	(date 1750211462737)
@@ -0,0 +1,587 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter, useParams } from "next/navigation";
+import { Loader2, ArrowLeft, Save, X, Trash2 } from "lucide-react";
+import { toast } from "sonner";
+import { format } from "date-fns";
+import { vi } from "date-fns/locale";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { ClearableInput } from "@/components/ui/clearable-input";
+import { ClearableTextarea } from "@/components/ui/clearable-textarea";
+import { Switch } from "@/components/ui/switch";
+import { Label } from "@/components/ui/label";
+import { Badge } from "@/components/ui/badge";
+import { Separator } from "@/components/ui/separator";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import { UpdateDiscountDto } from "@/types/api";
+import { useDiscountsStore } from "@/stores/discounts";
+
+export default function DiscountDetailPage() {
+  const router = useRouter();
+  const params = useParams();
+  const discountId = parseInt(params.id as string);
+
+  const [isEditing, setIsEditing] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+  const [formData, setFormData] = useState<UpdateDiscountDto>({});
+  const [errors, setErrors] = useState<Record<string, string>>({});
+
+  const {
+    currentDiscount,
+    isLoading,
+    isUpdating,
+    isDeleting,
+    fetchDiscountById,
+    updateDiscount,
+    deleteDiscount,
+  } = useDiscountsStore();
+
+  useEffect(() => {
+    if (discountId) {
+      fetchDiscountById(discountId);
+    }
+  }, [discountId, fetchDiscountById]);
+
+  useEffect(() => {
+    if (currentDiscount) {
+      setFormData({
+        name: currentDiscount.name,
+        description: currentDiscount.description,
+        coupon_code: currentDiscount.couponCode,
+        discount_value: currentDiscount.discountValue,
+        min_required_order_value: currentDiscount.minRequiredOrderValue,
+        max_discount_amount: currentDiscount.maxDiscountAmount,
+        min_required_product: currentDiscount.minRequiredProduct,
+        valid_from: currentDiscount.validFrom ? format(currentDiscount.validFrom, "yyyy-MM-dd'T'HH:mm") : undefined,
+        valid_until: format(currentDiscount.validUntil, "yyyy-MM-dd'T'HH:mm"),
+        max_uses: currentDiscount.maxUses,
+        max_uses_per_customer: currentDiscount.maxUsesPerCustomer,
+        is_active: currentDiscount.isActive,
+      });
+    }
+  }, [currentDiscount]);
+
+  const validate = (): boolean => {
+    const newErrors: Record<string, string> = {};
+
+    if (!formData.name?.trim()) {
+      newErrors.name = "Tên chương trình là bắt buộc";
+    }
+
+    if (!formData.coupon_code?.trim()) {
+      newErrors.coupon_code = "Mã giảm giá là bắt buộc";
+    } else if (!/^[A-Z0-9]+$/.test(formData.coupon_code)) {
+      newErrors.coupon_code = "Mã chỉ chứa chữ hoa và số";
+    }
+
+    if (!formData.discount_value || formData.discount_value <= 0 || formData.discount_value > 100) {
+      newErrors.discount_value = "Giá trị giảm là bắt buộc và phải từ 1-100%";
+    }
+
+    if (!formData.min_required_order_value || formData.min_required_order_value < 0) {
+      newErrors.min_required_order_value = "Đơn hàng tối thiểu là bắt buộc và phải >= 0";
+    }
+
+    if (!formData.max_discount_amount || formData.max_discount_amount <= 0) {
+      newErrors.max_discount_amount = "Số tiền giảm tối đa là bắt buộc và phải > 0";
+    }
+
+    if (!formData.valid_until) {
+      newErrors.valid_until = "Ngày kết thúc là bắt buộc";
+    }
+
+    setErrors(newErrors);
+    return Object.keys(newErrors).length === 0;
+  };
+
+  const handleSave = async () => {
+    if (!validate()) {
+      return;
+    }
+
+    try {
+      // Chuyển undefined thành null để có thể serialize JSON
+      const updateData = { ...formData };
+      Object.keys(updateData).forEach(key => {
+        if ((updateData as any)[key] === undefined) {
+          (updateData as any)[key] = null;
+        }
+      });
+      
+      await updateDiscount(discountId, updateData);
+      setIsEditing(false);
+      toast.success("Cập nhật chương trình khuyến mãi thành công!");
+    } catch (error) {
+      console.error("Lỗi cập nhật:", error);
+      toast.error("Không thể cập nhật chương trình khuyến mãi. Vui lòng thử lại.");
+    }
+  };
+
+  const handleCancel = () => {
+    if (currentDiscount) {
+      setFormData({
+        name: currentDiscount.name,
+        description: currentDiscount.description,
+        coupon_code: currentDiscount.couponCode,
+        discount_value: currentDiscount.discountValue,
+        min_required_order_value: currentDiscount.minRequiredOrderValue,
+        max_discount_amount: currentDiscount.maxDiscountAmount,
+        min_required_product: currentDiscount.minRequiredProduct,
+        valid_from: currentDiscount.validFrom ? format(currentDiscount.validFrom, "yyyy-MM-dd'T'HH:mm") : undefined,
+        valid_until: format(currentDiscount.validUntil, "yyyy-MM-dd'T'HH:mm"),
+        max_uses: currentDiscount.maxUses,
+        max_uses_per_customer: currentDiscount.maxUsesPerCustomer,
+        is_active: currentDiscount.isActive,
+      });
+    }
+    setIsEditing(false);
+    setErrors({});
+  };
+
+  const handleDelete = async () => {
+    try {
+      await deleteDiscount(discountId);
+      toast.success("Xóa chương trình khuyến mãi thành công!");
+      router.push("/promotions");
+    } catch (error) {
+      console.error("Lỗi xóa:", error);
+      toast.error("Không thể xóa chương trình khuyến mãi. Vui lòng thử lại.");
+    }
+  };
+
+  const handleChange = (field: keyof UpdateDiscountDto, value: string | number | boolean | undefined) => {
+    setFormData(prev => ({ ...prev, [field]: value }));
+    if (errors[field]) {
+      setErrors(prev => ({ ...prev, [field]: "" }));
+    }
+  };
+
+  const formatCurrency = (amount: number): string => {
+    return new Intl.NumberFormat("vi-VN", {
+      style: "currency",
+      currency: "VND",
+    }).format(amount);
+  };
+
+  const formatDate = (date: Date): string => {
+    return format(date, "dd/MM/yyyy HH:mm", { locale: vi });
+  };
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  if (!currentDiscount) {
+    return (
+      <div className="flex flex-col items-center justify-center h-96 space-y-4">
+        <p className="text-muted-foreground">Không tìm thấy chương trình khuyến mãi</p>
+        <Button onClick={() => router.push("/promotions")}>
+          <ArrowLeft className="mr-2 h-4 w-4" />
+          Quay lại
+        </Button>
+      </div>
+    );
+  }
+
+  const isExpired = currentDiscount.validUntil < new Date();
+
+  return (
+    <div className="space-y-6">
+      {/* Header */}
+      <div className="flex items-center justify-between">
+        <div className="flex items-center space-x-4">
+          <Button variant="ghost" size="icon" onClick={() => router.push("/promotions")}>
+            <ArrowLeft className="h-4 w-4" />
+          </Button>
+          <div>
+            <h1 className="text-3xl font-bold">{currentDiscount.name}</h1>
+            <p className="text-muted-foreground">Chi tiết chương trình khuyến mãi</p>
+          </div>
+        </div>
+        <div className="flex items-center space-x-2">
+          {isEditing ? (
+            <>
+              <Button variant="outline" onClick={handleCancel} disabled={isUpdating}>
+                <X className="mr-2 h-4 w-4" />
+                Hủy
+              </Button>
+              <Button onClick={handleSave} disabled={isUpdating}>
+                {isUpdating ? (
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                ) : (
+                  <Save className="mr-2 h-4 w-4" />
+                )}
+                Lưu
+              </Button>
+            </>
+          ) : (
+            <>
+              <Button variant="outline" onClick={() => setIsEditing(true)}>
+                Chỉnh Sửa
+              </Button>
+              <Button 
+                variant="destructive" 
+                onClick={() => setIsDeleteDialogOpen(true)}
+                disabled={isDeleting}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </Button>
+            </>
+          )}
+        </div>
+      </div>
+
+      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
+        {/* Thông tin chính */}
+        <div className="lg:col-span-2 space-y-6">
+          <Card>
+            <CardHeader>
+              <CardTitle>Thông Tin Chương Trình</CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+                <div className="space-y-2">
+                  <Label htmlFor="name">Tên chương trình <span className="text-destructive">*</span></Label>
+                  {isEditing ? (
+                    <Input
+                      id="name"
+                      value={formData.name || ""}
+                      onChange={(e) => handleChange("name", e.target.value)}
+                      className={errors.name ? "border-destructive" : ""}
+                      placeholder="Nhập tên chương trình khuyến mãi"
+                    />
+                  ) : (
+                    <p className="text-sm">{currentDiscount.name}</p>
+                  )}
+                  {errors.name && <p className="text-sm text-destructive">{errors.name}</p>}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="coupon_code">Mã giảm giá <span className="text-destructive">*</span></Label>
+                  {isEditing ? (
+                    <Input
+                      id="coupon_code"
+                      value={formData.coupon_code || ""}
+                      onChange={(e) => handleChange("coupon_code", e.target.value.toUpperCase())}
+                      className={errors.coupon_code ? "border-destructive" : ""}
+                      placeholder="Ví dụ: GIAM50K"
+                    />
+                  ) : (
+                    <p className="text-sm font-mono">{currentDiscount.couponCode}</p>
+                  )}
+                  {errors.coupon_code && <p className="text-sm text-destructive">{errors.coupon_code}</p>}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="discount_value">Giá trị giảm (%) <span className="text-destructive">*</span></Label>
+                  {isEditing ? (
+                    <Input
+                      id="discount_value"
+                      type="number"
+                      min="1"
+                      max="100"
+                      value={formData.discount_value || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("discount_value", value === "" ? 0 : parseFloat(value) || 0);
+                      }}
+                      className={errors.discount_value ? "border-destructive" : ""}
+                      placeholder="Ví dụ: 15"
+                    />
+                  ) : (
+                    <p className="text-sm font-medium">{currentDiscount.discountValue}%</p>
+                  )}
+                  {errors.discount_value && <p className="text-sm text-destructive">{errors.discount_value}</p>}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="min_required_order_value">Đơn hàng tối thiểu (VND) <span className="text-destructive">*</span></Label>
+                  {isEditing ? (
+                    <Input
+                      id="min_required_order_value"
+                      type="number"
+                      min="0"
+                      value={formData.min_required_order_value || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("min_required_order_value", value === "" ? 0 : parseInt(value) || 0);
+                      }}
+                      className={errors.min_required_order_value ? "border-destructive" : ""}
+                      placeholder="Ví dụ: 100000"
+                    />
+                  ) : (
+                    <p className="text-sm">{formatCurrency(currentDiscount.minRequiredOrderValue)}</p>
+                  )}
+                  {errors.min_required_order_value && <p className="text-sm text-destructive">{errors.min_required_order_value}</p>}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="max_discount_amount">Số tiền giảm tối đa (VND) <span className="text-destructive">*</span></Label>
+                  {isEditing ? (
+                    <Input
+                      id="max_discount_amount"
+                      type="number"
+                      min="1"
+                      value={formData.max_discount_amount || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("max_discount_amount", value === "" ? 0 : parseInt(value) || 0);
+                      }}
+                      className={errors.max_discount_amount ? "border-destructive" : ""}
+                      placeholder="Ví dụ: 50000"
+                    />
+                  ) : (
+                    <p className="text-sm">{formatCurrency(currentDiscount.maxDiscountAmount)}</p>
+                  )}
+                  {errors.max_discount_amount && <p className="text-sm text-destructive">{errors.max_discount_amount}</p>}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="min_required_product">Số lượng sản phẩm tối thiểu</Label>
+                  {isEditing ? (
+                    <ClearableInput
+                      id="min_required_product"
+                      type="number"
+                      min="0"
+                      value={formData.min_required_product || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("min_required_product", value === "" ? undefined : parseInt(value) || 0);
+                      }}
+                      onClear={() => handleChange("min_required_product", undefined)}
+                      placeholder="Nhập số lượng hoặc để trống cho không giới hạn"
+                    />
+                  ) : (
+                    <p className="text-sm">{currentDiscount.minRequiredProduct || "Không giới hạn"}</p>
+                  )}
+                </div>
+              </div>
+
+              <div className="space-y-2">
+                <Label htmlFor="description">Mô tả</Label>
+                {isEditing ? (
+                  <ClearableTextarea
+                    id="description"
+                    value={formData.description || ""}
+                    onChange={(e) => {
+                      const value = e.target.value.trim();
+                      handleChange("description", value === "" ? undefined : value);
+                    }}
+                    onClear={() => handleChange("description", undefined)}
+                    className="min-h-[100px]"
+                    placeholder="Nhập mô tả cho chương trình khuyến mãi"
+                  />
+                ) : (
+                  <p className="text-sm">{currentDiscount.description || "Không có mô tả"}</p>
+                )}
+              </div>
+            </CardContent>
+          </Card>
+
+          <Card>
+            <CardHeader>
+              <CardTitle>Thời Hạn & Giới Hạn</CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+                <div className="space-y-2">
+                  <Label htmlFor="valid_from">Ngày bắt đầu</Label>
+                  {isEditing ? (
+                    <ClearableInput
+                      id="valid_from"
+                      type="datetime-local"
+                      value={formData.valid_from || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("valid_from", value === "" ? undefined : value);
+                      }}
+                      onClear={() => handleChange("valid_from", undefined)}
+                      placeholder="Chọn ngày bắt đầu hoặc để trống để áp dụng ngay"
+                    />
+                  ) : (
+                    <p className="text-sm">{currentDiscount.validFrom ? formatDate(currentDiscount.validFrom) : "Áp dụng ngay"}</p>
+                  )}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="valid_until">Ngày kết thúc <span className="text-destructive">*</span></Label>
+                  {isEditing ? (
+                    <Input
+                      id="valid_until"
+                      type="datetime-local"
+                      value={formData.valid_until || ""}
+                      onChange={(e) => handleChange("valid_until", e.target.value)}
+                      className={errors.valid_until ? "border-destructive" : ""}
+                      placeholder="Chọn ngày và giờ kết thúc"
+                    />
+                  ) : (
+                    <p className={`text-sm ${isExpired ? "text-destructive" : ""}`}>
+                      {formatDate(currentDiscount.validUntil)}
+                    </p>
+                  )}
+                  {errors.valid_until && <p className="text-sm text-destructive">{errors.valid_until}</p>}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="max_uses">Số lần sử dụng tối đa</Label>
+                  {isEditing ? (
+                    <ClearableInput
+                      id="max_uses"
+                      type="number"
+                      min="1"
+                      value={formData.max_uses || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("max_uses", value === "" ? undefined : parseInt(value) || 0);
+                      }}
+                      onClear={() => handleChange("max_uses", undefined)}
+                      placeholder="Nhập số lần hoặc để trống cho không giới hạn"
+                    />
+                  ) : (
+                    <p className="text-sm">{currentDiscount.maxUses || "Không giới hạn"}</p>
+                  )}
+                </div>
+
+                <div className="space-y-2">
+                  <Label htmlFor="max_uses_per_customer">Số lần sử dụng/khách hàng</Label>
+                  {isEditing ? (
+                    <ClearableInput
+                      id="max_uses_per_customer"
+                      type="number"
+                      min="1"
+                      value={formData.max_uses_per_customer || ""}
+                      onChange={(e) => {
+                        const value = e.target.value.trim();
+                        handleChange("max_uses_per_customer", value === "" ? undefined : parseInt(value) || 0);
+                      }}
+                      onClear={() => handleChange("max_uses_per_customer", undefined)}
+                      placeholder="Nhập số lần hoặc để trống cho không giới hạn"
+                    />
+                  ) : (
+                    <p className="text-sm">{currentDiscount.maxUsesPerCustomer || "Không giới hạn"}</p>
+                  )}
+                </div>
+              </div>
+            </CardContent>
+          </Card>
+        </div>
+
+        {/* Sidebar */}
+        <div className="space-y-6">
+          <Card>
+            <CardHeader>
+              <CardTitle>Trạng Thái</CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="flex items-center justify-between">
+                <Label htmlFor="is_active">Kích hoạt</Label>
+                {isEditing ? (
+                  <Switch
+                    id="is_active"
+                    checked={formData.is_active || false}
+                    onCheckedChange={(checked) => handleChange("is_active", checked)}
+                  />
+                ) : (
+                  <Badge variant={currentDiscount.isActive ? "default" : "secondary"}>
+                    {currentDiscount.isActive ? "Hoạt Động" : "Tạm Dừng"}
+                  </Badge>
+                )}
+              </div>
+
+              <Separator />
+
+              <div className="space-y-2">
+                <Label>Trạng thái hết hạn</Label>
+                <Badge variant={isExpired ? "destructive" : "default"}>
+                  {isExpired ? "Đã Hết Hạn" : "Còn Hiệu Lực"}
+                </Badge>
+              </div>
+            </CardContent>
+          </Card>
+
+          <Card>
+            <CardHeader>
+              <CardTitle>Thống Kê Sử Dụng</CardTitle>
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <div className="space-y-2">
+                <Label>Lượt sử dụng hiện tại</Label>
+                <div className="text-2xl font-bold">
+                  {currentDiscount.currentUses || 0}
+                  {currentDiscount.maxUses && (
+                    <span className="text-sm font-normal text-muted-foreground">
+                      /{currentDiscount.maxUses}
+                    </span>
+                  )}
+                </div>
+              </div>
+
+              <div className="space-y-2">
+                <Label>Ngày tạo</Label>
+                <p className="text-sm text-muted-foreground">
+                  {formatDate(currentDiscount.createdAt)}
+                </p>
+              </div>
+
+              <div className="space-y-2">
+                <Label>Lần cập nhật cuối</Label>
+                <p className="text-sm text-muted-foreground">
+                  {formatDate(currentDiscount.updatedAt)}
+                </p>
+              </div>
+            </CardContent>
+          </Card>
+        </div>
+      </div>
+
+      {/* Delete Confirmation Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa chương trình khuyến mãi <strong>{currentDiscount.name}</strong>? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDelete}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/reports/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/reports/page.tsx b/frontend/manager/src/app/reports/page.tsx
new file mode 100644
--- /dev/null	(date 1750225254586)
+++ b/frontend/manager/src/app/reports/page.tsx	(date 1750225254586)
@@ -0,0 +1,342 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { CalendarDays, TrendingUp, Users, Package, Loader2 } from "lucide-react";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
+import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
+import { SummaryStats } from "@/components/charts/summary-stats";
+import { RevenueChart } from "@/components/charts/revenue-chart";
+import { EmployeePerformanceChart } from "@/components/charts/employee-performance-chart";
+import { ProductSalesChart } from "@/components/charts/product-sales-chart";
+import { useReportsStore } from "@/stores/reports";
+import { SalesReportQuery } from "@/types/api";
+
+const currentYear = new Date().getFullYear();
+const currentMonth = new Date().getMonth() + 1;
+
+const months = [
+  { value: 1, label: "Tháng 1" },
+  { value: 2, label: "Tháng 2" },
+  { value: 3, label: "Tháng 3" },
+  { value: 4, label: "Tháng 4" },
+  { value: 5, label: "Tháng 5" },
+  { value: 6, label: "Tháng 6" },
+  { value: 7, label: "Tháng 7" },
+  { value: 8, label: "Tháng 8" },
+  { value: 9, label: "Tháng 9" },
+  { value: 10, label: "Tháng 10" },
+  { value: 11, label: "Tháng 11" },
+  { value: 12, label: "Tháng 12" },
+];
+
+const years = Array.from({ length: 5 }, (_, i) => currentYear - i);
+
+export default function ReportsPage() {
+  const [selectedYear, setSelectedYear] = useState<number>(currentYear);
+  const [selectedMonth, setSelectedMonth] = useState<number | undefined>(undefined);
+  const [reportType, setReportType] = useState<string>("overview");
+
+  const {
+    currentReport,
+    isLoading,
+    getSalesReport,
+    getMonthlySalesReport,
+    getDailySalesReport,
+    getEmployeeSalesReport,
+    getProductSalesReport,
+  } = useReportsStore();
+
+  const buildQuery = (): SalesReportQuery => {
+    const query: SalesReportQuery = { year: selectedYear };
+    if (selectedMonth) {
+      query.month = selectedMonth;
+    }
+    return query;
+  };
+
+  const fetchReportData = async () => {
+    try {
+      const query = buildQuery();
+      
+      switch (reportType) {
+        case "monthly":
+          await getMonthlySalesReport({ year: selectedYear });
+          break;
+        case "daily":
+          if (selectedMonth) {
+            await getDailySalesReport(query);
+          } else {
+            toast.error("Vui lòng chọn tháng để xem báo cáo theo ngày");
+            return;
+          }
+          break;
+        case "employee":
+          await getEmployeeSalesReport(query);
+          break;
+        case "products":
+          await getProductSalesReport(query);
+          break;
+        default:
+          await getSalesReport(query);
+      }
+    } catch (error) {
+      console.error("Lỗi khi tải báo cáo:", error);
+      toast.error("Không thể tải dữ liệu báo cáo");
+    }
+  };
+
+  useEffect(() => {
+    fetchReportData();
+  }, [selectedYear, selectedMonth, reportType]);
+
+  const handleRefresh = () => {
+    fetchReportData();
+  };
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Báo Cáo Bán Hàng</h1>
+          <p className="text-muted-foreground">
+            Thống kê và phân tích doanh thu, đơn hàng và hiệu suất bán hàng
+          </p>
+        </div>
+        <Button onClick={handleRefresh} disabled={isLoading}>
+          <TrendingUp className="mr-2 h-4 w-4" />
+          Làm Mới
+        </Button>
+      </div>
+
+      {/* Filters */}
+      <Card>
+        <CardHeader>
+          <CardTitle className="flex items-center">
+            <CalendarDays className="mr-2 h-5 w-5" />
+            Bộ Lọc Báo Cáo
+          </CardTitle>
+          <CardDescription>
+            Chọn khoảng thời gian và loại báo cáo để xem thống kê
+          </CardDescription>
+        </CardHeader>
+        <CardContent>
+          <div className="grid gap-4 md:grid-cols-4">
+            <div className="space-y-2">
+              <label className="text-sm font-medium">Năm</label>
+              <Select
+                value={selectedYear.toString()}
+                onValueChange={(value) => setSelectedYear(parseInt(value))}
+              >
+                <SelectTrigger>
+                  <SelectValue />
+                </SelectTrigger>
+                <SelectContent>
+                  {years.map((year) => (
+                    <SelectItem key={year} value={year.toString()}>
+                      {year}
+                    </SelectItem>
+                  ))}
+                </SelectContent>
+              </Select>
+            </div>
+            
+            <div className="space-y-2">
+              <label className="text-sm font-medium">Tháng (Tùy chọn)</label>
+              <Select
+                value={selectedMonth?.toString() || "all"}
+                onValueChange={(value) => setSelectedMonth(value === "all" ? undefined : parseInt(value))}
+              >
+                <SelectTrigger>
+                  <SelectValue placeholder="Chọn tháng" />
+                </SelectTrigger>
+                <SelectContent>
+                  <SelectItem value="all">Tất cả tháng</SelectItem>
+                  {months.map((month) => (
+                    <SelectItem key={month.value} value={month.value.toString()}>
+                      {month.label}
+                    </SelectItem>
+                  ))}
+                </SelectContent>
+              </Select>
+            </div>
+
+            <div className="space-y-2">
+              <label className="text-sm font-medium">Loại Báo Cáo</label>
+              <Select value={reportType} onValueChange={setReportType}>
+                <SelectTrigger>
+                  <SelectValue />
+                </SelectTrigger>
+                <SelectContent>
+                  <SelectItem value="overview">Tổng Quan</SelectItem>
+                  <SelectItem value="monthly">Theo Tháng</SelectItem>
+                  <SelectItem value="daily">Theo Ngày</SelectItem>
+                  <SelectItem value="employee">Theo Nhân Viên</SelectItem>
+                  <SelectItem value="products">Theo Sản Phẩm</SelectItem>
+                </SelectContent>
+              </Select>
+            </div>
+          </div>
+        </CardContent>
+      </Card>
+
+      {/* Summary Stats */}
+      {currentReport && (
+        <SummaryStats summary={currentReport.summary} />
+      )}
+
+      {/* Charts */}
+      {currentReport && (
+        <Tabs defaultValue="charts" className="space-y-4">
+          <TabsList>
+            <TabsTrigger value="charts">Biểu Đồ</TabsTrigger>
+            <TabsTrigger value="details">Chi Tiết</TabsTrigger>
+          </TabsList>
+
+          <TabsContent value="charts" className="space-y-6">
+            {/* Revenue Charts */}
+            {currentReport.monthly_sales && (
+              <RevenueChart
+                data={currentReport.monthly_sales}
+                type="monthly"
+                title="Doanh Thu Theo Tháng"
+                description={`Biểu đồ doanh thu 12 tháng năm ${selectedYear}`}
+              />
+            )}
+
+            {currentReport.daily_sales && (
+              <RevenueChart
+                data={currentReport.daily_sales}
+                type="daily"
+                title="Doanh Thu Theo Ngày"
+                description={`Biểu đồ doanh thu các ngày trong tháng ${selectedMonth}/${selectedYear}`}
+              />
+            )}
+
+            <div className="grid gap-6 md:grid-cols-2">
+              {/* Employee Performance */}
+              {currentReport.employee_sales && currentReport.employee_sales.length > 0 && (
+                <EmployeePerformanceChart
+                  data={currentReport.employee_sales}
+                  type="bar"
+                  title="Hiệu Suất Nhân Viên"
+                  description="Doanh thu theo nhân viên"
+                />
+              )}
+
+              {/* Product Sales */}
+              {currentReport.product_sales && currentReport.product_sales.length > 0 && (
+                <ProductSalesChart
+                  data={currentReport.product_sales}
+                  type="bar"
+                  title="Sản Phẩm Bán Chạy"
+                  description="Top 10 sản phẩm bán chạy nhất"
+                  showTop={10}
+                />
+              )}
+            </div>
+          </TabsContent>
+
+          <TabsContent value="details" className="space-y-6">
+            {/* Detailed Tables */}
+            <div className="grid gap-6 md:grid-cols-2">
+              {/* Employee Details */}
+              {currentReport.employee_sales && currentReport.employee_sales.length > 0 && (
+                <Card>
+                  <CardHeader>
+                    <CardTitle className="flex items-center">
+                      <Users className="mr-2 h-5 w-5" />
+                      Chi Tiết Nhân Viên
+                    </CardTitle>
+                  </CardHeader>
+                  <CardContent>
+                    <div className="space-y-4">
+                      {currentReport.employee_sales.map((employee, index) => (
+                        <div key={index} className="flex justify-between items-center p-3 bg-muted rounded-lg">
+                          <div>
+                            <p className="font-medium">{employee.employee_name}</p>
+                            <p className="text-sm text-muted-foreground">
+                              {employee.total_orders} đơn hàng • {employee.total_products_sold} sản phẩm
+                            </p>
+                          </div>
+                          <div className="text-right">
+                            <p className="font-semibold">
+                              {new Intl.NumberFormat('vi-VN', {
+                                style: 'currency',
+                                currency: 'VND',
+                              }).format(employee.total_revenue)}
+                            </p>
+                          </div>
+                        </div>
+                      ))}
+                    </div>
+                  </CardContent>
+                </Card>
+              )}
+
+              {/* Product Details */}
+              {currentReport.product_sales && currentReport.product_sales.length > 0 && (
+                <Card>
+                  <CardHeader>
+                    <CardTitle className="flex items-center">
+                      <Package className="mr-2 h-5 w-5" />
+                      Chi Tiết Sản Phẩm
+                    </CardTitle>
+                  </CardHeader>
+                  <CardContent>
+                    <div className="space-y-4">
+                      {currentReport.product_sales.slice(0, 10).map((product, index) => (
+                        <div key={index} className="flex justify-between items-center p-3 bg-muted rounded-lg">
+                          <div>
+                            <p className="font-medium">{product.product_name}</p>
+                            <p className="text-sm text-muted-foreground">
+                              Đã bán: {product.quantity_sold} sản phẩm
+                            </p>
+                          </div>
+                          <div className="text-right">
+                            <p className="font-semibold">
+                              {new Intl.NumberFormat('vi-VN', {
+                                style: 'currency',
+                                currency: 'VND',
+                              }).format(product.revenue)}
+                            </p>
+                          </div>
+                        </div>
+                      ))}
+                    </div>
+                  </CardContent>
+                </Card>
+              )}
+            </div>
+          </TabsContent>
+        </Tabs>
+      )}
+
+      {!currentReport && !isLoading && (
+        <Card>
+          <CardContent className="flex items-center justify-center h-96">
+            <div className="text-center">
+              <TrendingUp className="mx-auto h-12 w-12 text-muted-foreground mb-4" />
+              <h3 className="text-lg font-semibold mb-2">Không có dữ liệu</h3>
+              <p className="text-muted-foreground">
+                Không tìm thấy dữ liệu báo cáo cho khoảng thời gian đã chọn
+              </p>
+            </div>
+          </CardContent>
+        </Card>
+      )}
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/charts/employee-performance-chart.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/charts/employee-performance-chart.tsx b/frontend/manager/src/components/charts/employee-performance-chart.tsx
new file mode 100644
--- /dev/null	(date 1750224512954)
+++ b/frontend/manager/src/components/charts/employee-performance-chart.tsx	(date 1750224512954)
@@ -0,0 +1,121 @@
+"use client";
+
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { 
+  PieChart, 
+  Pie, 
+  Cell, 
+  ResponsiveContainer, 
+  Tooltip, 
+  Legend,
+  BarChart,
+  Bar,
+  XAxis,
+  YAxis,
+  CartesianGrid
+} from 'recharts';
+import { EmployeeSalesData } from '@/types/api';
+
+interface EmployeePerformanceChartProps {
+  data: EmployeeSalesData[];
+  type: 'pie' | 'bar';
+  title: string;
+  description?: string;
+}
+
+const COLORS = [
+  'hsl(var(--chart-1))',
+  'hsl(var(--chart-2))', 
+  'hsl(var(--chart-3))',
+  'hsl(var(--chart-4))',
+  'hsl(var(--chart-5))',
+];
+
+function formatCurrency(value: number): string {
+  return new Intl.NumberFormat('vi-VN', {
+    style: 'currency',
+    currency: 'VND',
+  }).format(value);
+}
+
+function formatChartData(data: EmployeeSalesData[]) {
+  return data.map(item => ({
+    name: item.employee_name,
+    revenue: item.total_revenue,
+    orders: item.total_orders,
+    products: item.total_products_sold,
+    value: item.total_revenue, // For pie chart
+  }));
+}
+
+export function EmployeePerformanceChart({ data, type, title, description }: EmployeePerformanceChartProps) {
+  const chartData = formatChartData(data);
+
+  const renderPieChart = () => (
+    <ResponsiveContainer width="100%" height="100%">
+      <PieChart>
+        <Pie
+          data={chartData}
+          cx="50%"
+          cy="50%"
+          labelLine={false}
+          label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}
+          outerRadius={80}
+          fill="#8884d8"
+          dataKey="value"
+        >
+          {chartData.map((_, index) => (
+            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
+          ))}
+        </Pie>
+        <Tooltip formatter={(value: number) => [formatCurrency(value), 'Doanh thu']} />
+        <Legend />
+      </PieChart>
+    </ResponsiveContainer>
+  );
+
+  const renderBarChart = () => (
+    <ResponsiveContainer width="100%" height="100%">
+      <BarChart data={chartData} layout="horizontal">
+        <CartesianGrid strokeDasharray="3 3" />
+        <XAxis 
+          type="number"
+          fontSize={12}
+          tickLine={false}
+          axisLine={false}
+          tickFormatter={(value) => `${(value / 1000000).toFixed(1)}M`}
+        />
+        <YAxis 
+          type="category"
+          dataKey="name" 
+          fontSize={12}
+          tickLine={false}
+          axisLine={false}
+        />
+        <Tooltip
+          formatter={(value: number) => [formatCurrency(value), 'Doanh thu']}
+          labelFormatter={(label) => `Nhân viên: ${label}`}
+        />
+        <Bar 
+          dataKey="revenue" 
+          fill="hsl(var(--primary))"
+          radius={[0, 4, 4, 0]}
+        />
+      </BarChart>
+    </ResponsiveContainer>
+  );
+
+  return (
+    <Card>
+      <CardHeader>
+        <CardTitle>{title}</CardTitle>
+        {description && <CardDescription>{description}</CardDescription>}
+      </CardHeader>
+      <CardContent>
+        <div className="h-[400px]">
+          {type === 'pie' ? renderPieChart() : renderBarChart()}
+        </div>
+      </CardContent>
+    </Card>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/reports/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/reports/layout.tsx b/frontend/manager/src/app/reports/layout.tsx
new file mode 100644
--- /dev/null	(date 1750224635902)
+++ b/frontend/manager/src/app/reports/layout.tsx	(date 1750224635902)
@@ -0,0 +1,9 @@
+import { MainLayout } from "@/components/layout/main-layout";
+
+export default function ReportsLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return <MainLayout>{children}</MainLayout>;
+} 
\ No newline at end of file
Index: frontend/pos/src/app/login/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/app/login/page.tsx b/frontend/pos/src/app/login/page.tsx
new file mode 100644
--- /dev/null	(date 1750224972520)
+++ b/frontend/pos/src/app/login/page.tsx	(date 1750224972520)
@@ -0,0 +1,50 @@
+import { Metadata } from "next";
+import Link from "next/link";
+
+import { LoginForm } from "@/components/forms/login-form";
+
+export const metadata: Metadata = {
+  title: "Đăng nhập | Cake POS",
+  description: "Đăng nhập vào hệ thống bán hàng Cake POS - Dành cho nhân viên cửa hàng",
+};
+
+export default function LoginPage() {
+  return (
+    <div className="min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8">
+      <div className="max-w-md w-full space-y-8">
+        {/* Header */}
+        <div className="text-center">
+          <div className="mx-auto h-20 w-20 bg-primary rounded-full flex items-center justify-center mb-6">
+            <span className="text-3xl font-bold text-primary-foreground">🧁</span>
+          </div>
+          <h1 className="text-4xl font-bold text-gray-900 dark:text-white">
+            Cake POS
+          </h1>
+          <p className="mt-3 text-lg text-gray-600 dark:text-gray-400">
+            Hệ thống bán hàng cửa hàng bánh
+          </p>
+        </div>
+
+        {/* Login Form */}
+        <div className="mt-8">
+          <LoginForm />
+        </div>
+
+        {/* Footer */}
+        <div className="text-center">
+          <p className="text-sm text-gray-500 dark:text-gray-400">
+            Dành cho nhân viên cửa hàng bánh
+          </p>
+          <div className="mt-4 text-xs text-gray-400 dark:text-gray-500">
+            <p>
+              Bằng việc đăng nhập, bạn đồng ý với{" "}
+              <Link href="/terms" className="text-primary hover:underline">
+                Điều khoản dịch vụ
+              </Link>
+            </p>
+          </div>
+        </div>
+      </div>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/.cursor/rules/next-js.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/next-js.mdc b/frontend/pos/.cursor/rules/next-js.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/next-js.mdc	(date 1750212011795)
@@ -0,0 +1,57 @@
+---
+description: Instructs developers to follow Next.js documentation for data fetching, rendering, and routing when using Next.js.
+globs: **/*.tsx,src/**/**.ts,src/**/*.tsx
+alwaysApply: false
+---
+---
+description: Next.js with TypeScript and Tailwind UI best practices
+globs: **/*.tsx, **/*.ts, src/**/*.ts, src/**/*.tsx
+---
+
+# Next.js Best Practices
+
+## Project Structure
+- Use the App Router directory structure
+- Place components in `app` directory for route-specific components
+- Place shared components in `components` directory
+- Place utilities and helpers in `lib` directory
+- Use lowercase with dashes for directories (e.g., `components/auth-wizard`)
+
+## Components
+- Use Server Components by default
+- Mark client components explicitly with 'use client'
+- Wrap client components in Suspense with fallback
+- Use dynamic loading for non-critical components
+- Implement proper error boundaries
+- Place static content and interfaces at file end
+
+## Performance
+- Optimize images: Use WebP format, size data, lazy loading
+- Minimize use of 'useEffect' and 'setState'
+- Favor Server Components (RSC) where possible
+- Use dynamic loading for non-critical components
+- Implement proper caching strategies
+
+## Data Fetching
+- Use Server Components for data fetching when possible
+- Implement proper error handling for data fetching
+- Use appropriate caching strategies
+- Handle loading and error states appropriately
+
+## Routing
+- Use the App Router conventions
+- Implement proper loading and error states for routes
+- Use dynamic routes appropriately
+- Handle parallel routes when needed
+
+## Forms and Validation
+- Use Zod for form validation
+- Implement proper server-side validation
+- Handle form errors appropriately
+- Show loading states during form submission
+
+## State Management
+- Minimize client-side state
+- Use React Context sparingly
+- Prefer server state when possible
+- Implement proper loading states 
\ No newline at end of file
Index: frontend/pos/.cursor/rules/syntax-and-formatting.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/syntax-and-formatting.mdc b/frontend/pos/.cursor/rules/syntax-and-formatting.mdc
new file mode 100644
--- /dev/null	(date 1750212011796)
+++ b/frontend/pos/.cursor/rules/syntax-and-formatting.mdc	(date 1750212011796)
@@ -0,0 +1,7 @@
+---
+description: Specifies syntax and formatting preferences for TypeScript code, including function keyword usage and JSX syntax.
+globs: **/*.ts
+---
+- Use the "function" keyword for pure functions.
+- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
+- Use declarative JSX.
\ No newline at end of file
Index: frontend/pos/.cursor/.cursorrule
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/.cursorrule b/frontend/pos/.cursor/.cursorrule
new file mode 100644
--- /dev/null	(date 1750212011794)
+++ b/frontend/pos/.cursor/.cursorrule	(date 1750212011794)
@@ -0,0 +1,82 @@
+# Coding Style Guide
+
+pnpm is the package manager for this project.
+
+## Data Fetching And Display
+
+- Không được bịa ra dữ liệu, phải dựa trên dữ liệu từ backend
+
+## Code Style and Structure
+
+- Write concise, technical TypeScript code with accurate examples
+- Use functional and declarative programming patterns; avoid classes
+- Prefer iteration and modularization over code duplication
+- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError)
+- Structure files: exported component, subcomponents, helpers, static content, types
+
+## Naming Conventions
+
+- Use lowercase with dashes for directories (e.g., components/auth-wizard)
+- Favor named exports for components
+
+## TypeScript Usage
+
+- Use TypeScript for all code; prefer interfaces over types
+- Avoid enums; use maps instead
+- Use functional components with TypeScript interfaces
+- Use Zod for form validation
+
+## Syntax and Formatting
+
+- Use the "function" keyword for pure functions
+- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements
+- Use declarative JSX
+
+## Error Handling and Validation
+
+- Prioritize error handling: handle errors and edge cases early
+- Use early returns and guard clauses
+- Implement proper error logging and user-friendly messages
+- Use Zod for form validation
+- Model expected errors as return values in Server Actions
+- Use error boundaries for unexpected errors
+
+## UI and Styling
+
+- Use Shadcn UI, Radix, and Tailwind Aria for components and styling
+- Implement responsive design with Tailwind CSS; use a desktop-first approach
+- Tanstack table is used for table component
+
+## Performance Optimization
+
+- Minimize 'useEffect', and 'setState'; favor React Remix Components (RSC)
+- Wrap client components in Suspense with fallback
+- Use dynamic loading for non-critical components
+- Optimize images: use WebP format, include size data, implement lazy loading
+
+## Key Conventions
+
+- Use proper URL search parameter state management
+- Optimize Web Vitals (LCP, CLS, FID)
+- Limit 'use client'
+
+## When React Server Components (RSC) are used
+
+- Favor server components and Next.js SSR
+- Use only for Web API access in small components
+- Avoid for data fetching or state management
+
+## Form Validation
+
+- Use Zod for form validation
+- Use React Hook Form for form handling
+- Use React Hook Form's Controller component to handle form inputs
+- Use React Hook Form's useFormContext to access the form context
+- Use React Hook Form's useWatch to watch form values
+- Use React Hook Form's useFormState to access the form state
+- Field not null should be mark as required
+
+Follow React Remix docs for Data Fetching, Rendering, and Routing
+
+Follow Next.js docs for Data Fetching, Rendering, and Routing when Next JS is used instead of React Remix
+
Index: frontend/pos/src/app/login/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/app/login/layout.tsx b/frontend/pos/src/app/login/layout.tsx
new file mode 100644
--- /dev/null	(date 1750217741596)
+++ b/frontend/pos/src/app/login/layout.tsx	(date 1750217741596)
@@ -0,0 +1,20 @@
+import { Metadata } from "next";
+import { Toaster } from "@/components/ui/sonner";
+
+export const metadata: Metadata = {
+  title: "Đăng nhập | Cake POS",
+  description: "Đăng nhập vào hệ thống Point of Sale Cake POS",
+};
+
+export default function LoginLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return (
+    <>
+      {children}
+      <Toaster position="top-center" richColors />
+    </>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/.cursor/rules/react-server-components-rsc.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/react-server-components-rsc.mdc b/frontend/pos/.cursor/rules/react-server-components-rsc.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/react-server-components-rsc.mdc	(date 1750212011795)
@@ -0,0 +1,7 @@
+---
+description: Guidelines for using React Server Components, including favoring server components and limiting their use to Web API access.
+globs: **/*.{js,jsx,ts,tsx}
+---
+- Favor server components and Next.js SSR.
+- Use only for Web API access in small components.
+- Avoid for data fetching or state management.
\ No newline at end of file
Index: frontend/pos/src/components/forms/login-form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/forms/login-form.tsx b/frontend/pos/src/components/forms/login-form.tsx
new file mode 100644
--- /dev/null	(date 1750224972522)
+++ b/frontend/pos/src/components/forms/login-form.tsx	(date 1750224972522)
@@ -0,0 +1,159 @@
+"use client";
+
+import { useState } from "react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { useRouter } from "next/navigation";
+import { Eye, EyeOff, Loader2 } from "lucide-react";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Input } from "@/components/ui/input";
+import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
+import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
+
+import { loginSchema, type LoginFormData } from "@/lib/validations/auth";
+import { useAuthStore } from "@/stores/auth";
+
+interface LoginFormProps {
+  onSuccess?: () => void;
+  redirectTo?: string;
+}
+
+export function LoginForm({ onSuccess, redirectTo = "/" }: LoginFormProps) {
+  const [showPassword, setShowPassword] = useState(false);
+  const { login, isLoading } = useAuthStore();
+  const router = useRouter();
+
+  const form = useForm<LoginFormData>({
+    resolver: zodResolver(loginSchema),
+    defaultValues: {
+      username: "",
+      password: "",
+    },
+  });
+
+  async function onSubmit(data: LoginFormData) {
+    try {
+      await login(data);
+      
+      toast.success("Đăng nhập thành công!", {
+        description: "Chào mừng bạn trở lại hệ thống POS!",
+      });
+
+      if (onSuccess) {
+        onSuccess();
+      } else {
+        // Redirect to home or specified route
+        router.push(redirectTo);
+      }
+    } catch (error: any) {
+      console.error("Lỗi đăng nhập:", error);
+      
+      const errorMessage = error?.message || "Đăng nhập thất bại. Vui lòng thử lại!";
+      
+      toast.error("Lỗi đăng nhập", {
+        description: errorMessage,
+      });
+    }
+  }
+
+  return (
+    <Card className="w-full max-w-md mx-auto">
+      <CardHeader className="space-y-1">
+        <CardTitle className="text-2xl font-bold text-center">
+          Đăng nhập POS
+        </CardTitle>
+        <CardDescription className="text-center">
+          Nhập tên đăng nhập và mật khẩu để truy cập hệ thống bán hàng
+        </CardDescription>
+      </CardHeader>
+
+      <Form {...form}>
+        <form onSubmit={form.handleSubmit(onSubmit)}>
+          <CardContent className="space-y-4">
+            <FormField
+              control={form.control}
+              name="username"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Tên đăng nhập</FormLabel>
+                  <FormControl>
+                    <Input
+                      type="text"
+                      placeholder="Nhập tên đăng nhập"
+                      disabled={isLoading}
+                      {...field}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            <FormField
+              control={form.control}
+              name="password"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Mật khẩu</FormLabel>
+                  <FormControl>
+                    <div className="relative">
+                      <Input
+                        type={showPassword ? "text" : "password"}
+                        placeholder="Nhập mật khẩu"
+                        disabled={isLoading}
+                        {...field}
+                      />
+                      <Button
+                        type="button"
+                        variant="ghost"
+                        size="sm"
+                        className="absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent"
+                        onClick={() => setShowPassword(!showPassword)}
+                        disabled={isLoading}
+                      >
+                        {showPassword ? (
+                          <EyeOff className="h-4 w-4" />
+                        ) : (
+                          <Eye className="h-4 w-4" />
+                        )}
+                        <span className="sr-only">
+                          {showPassword ? "Ẩn mật khẩu" : "Hiện mật khẩu"}
+                        </span>
+                      </Button>
+                    </div>
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+          </CardContent>
+
+          <CardFooter className="flex flex-col space-y-4">
+            <Button
+              type="submit"
+              className="w-full"
+              disabled={isLoading}
+            >
+              {isLoading ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang đăng nhập...
+                </>
+              ) : (
+                "Đăng nhập"
+              )}
+            </Button>
+
+            <div className="text-sm text-center space-y-2">
+              <p className="text-muted-foreground">
+                Liên hệ quản lý để được cấp tài khoản nhân viên
+              </p>
+            </div>
+          </CardFooter>
+        </form>
+      </Form>
+    </Card>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/.cursor/rules/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/README.md b/frontend/pos/.cursor/rules/README.md
new file mode 100644
--- /dev/null	(date 1750212011794)
+++ b/frontend/pos/.cursor/rules/README.md	(date 1750212011794)
@@ -0,0 +1,16 @@
+# TypeScript Zod Tailwind Next.js .cursorrules prompt file
+
+Author: Vivek018
+
+## What you can build
+TypeScript Linter Plugin - A tool or plugin for code editors that enforces the specified TypeScript code style and structure guidelines, including naming conventions, TypeScript usage, and syntactic preferences.Functional Programming Guide for TypeScript - A comprehensive website offering tutorials, examples, and interactive coding challenges focused on implementing functional and declarative programming patterns in TypeScript.Zod Form Validation Library - An open-source form validation library that integrates with popular form libraries to simplify form validation using the Zod schema.Component Directory Generator - A CLI tool that creates structured component directories following the specified lowercase with dashes naming conventions and modular file structure.Performance Optimizer for React Applications - A web service that analyzes React applications and provides suggestions for performance optimizations based on highlighted principles such as minimizing 'useEffect' and optimizing Web Vitals.UI Component Library - A set of pre-built Shadcn UI, Radix, and Tailwind Aria components, promoting the specified styling and UI conventions, especially focusing on responsive design.Responsive Design Checker - An online tool that allows developers to test and verify responsive designs optimized for desktop-first development using specified Tailwind CSS conventions.Error Handling Dashboard - A service that integrates with apps to log errors, providing a dashboard for developers to track, analyze, and handle errors efficiently according to the error handling and validation guidelines.React Remix and Next.js Data Fetching Simulator - An educational platform offering simulations and interactive scenarios to practice data fetching, rendering, and routing per the React Remix or Next.js guide references.Lazy Loading Image Optimizer - A tool to convert images to WebP format, include size data, and implement lazy loading, aiding developers in following the performance optimization guidelines for images.
+
+## Benefits
+Emphasizes functional programming patterns and modularization while avoiding code duplication, using iteration and concise TypeScript syntax.Prioritizes error handling and form validation using early returns, guard clauses, and Zod, with modeled expected errors and error boundaries.Recommends performance practices like optimizing Web Vitals, limiting 'use client' for server components, and utilizing dynamic loading for non-critical components.
+
+## Synopsis
+Developers can leverage this prompt to create a clean, efficient boilerplate for a TypeScript-based React project, ensuring consistent code structure and optimal performance.
+
+## Overview of .cursorrules prompt
+The .cursorrules file outlines a comprehensive coding style guide for developing TypeScript applications, focusing on code structure, naming conventions, and TypeScript usage. It emphasizes functional programming, iteration, and modularization, recommending the use of interfaces, maps, and Zod for form validation. The guide advises using specific UI libraries and responsive design with Tailwind CSS, promoting performance optimization techniques like dynamic loading and lazy loading. It also stresses error handling, logging, and user-friendly messaging, suggesting the use of server components, early returns, and guard clauses. Additionally, it provides guidelines for managing URL state, optimizing Web Vitals, and integrating with React Remix and Next.js for data fetching and routing.
+
Index: frontend/pos/src/app/pos/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/app/pos/page.tsx b/frontend/pos/src/app/pos/page.tsx
new file mode 100644
--- /dev/null	(date 1750227174648)
+++ b/frontend/pos/src/app/pos/page.tsx	(date 1750227174648)
@@ -0,0 +1,421 @@
+"use client";
+
+import { useState, useEffect } from "react";
+import { Search, ShoppingCart, User, Plus, Minus } from "lucide-react";
+import { Button } from "@/components/ui/button";
+import { Input } from "@/components/ui/input";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Separator } from "@/components/ui/separator";
+import { usePOSStore } from "@/stores/pos";
+import { categoryService } from "@/lib/services/category-service";
+import { productService } from "@/lib/services/product-service";
+import { Category, Product, ProductPrice } from "@/types";
+
+// Category icons mapping
+const categoryIcons: Record<string, string> = {
+  "Bánh Sinh Nhật": "🎂",
+  "Bánh Cupcake": "🧁", 
+  "Bánh Tart": "🥧",
+  "Bánh Cookies": "🍪",
+  "Đồ Uống": "☕",
+  "Phụ Kiện": "🎁",
+  "Bánh Ngọt": "🍰",
+  "Bánh Mì": "🥖",
+  "Kem": "🍦"
+};
+
+export default function POSPage() {
+  const {
+    categories,
+    selectedCategoryId,
+    cart,
+    searchQuery,
+    isLoadingCategories,
+    isLoadingProducts,
+    setCategories,
+    setSelectedCategoryId,
+    setProducts,
+    setAllProducts,
+    setSearchQuery,
+    setIsLoadingCategories,
+    setIsLoadingProducts,
+    addToCart,
+    updateCartItemQuantity,
+    removeFromCart,
+    getCartTotal,
+    getCartItemCount,
+    getFilteredProducts
+  } = usePOSStore();
+
+  const [customer] = useState({ name: "James Anderson", phone: "0123456789" });
+  const [activeProducts, setActiveProducts] = useState<(Product & { activePrice?: ProductPrice })[]>([]);
+
+  // Load categories on mount
+  useEffect(() => {
+    const loadCategories = async () => {
+      try {
+        setIsLoadingCategories(true);
+        const result = await categoryService.getAll({ limit: 100 });
+        setCategories(result.data);
+        
+        // Set first category as selected if none selected
+        if (!selectedCategoryId && result.data.length > 0) {
+          setSelectedCategoryId(result.data[0].category_id);
+        }
+      } catch (error) {
+        console.error('Lỗi khi tải danh mục:', error);
+      } finally {
+        setIsLoadingCategories(false);
+      }
+    };
+
+    loadCategories();
+  }, []);
+
+  // Load all products on mount
+  useEffect(() => {
+    const loadAllProducts = async () => {
+      try {
+        setIsLoadingProducts(true);
+        const result = await productService.getAll({ limit: 100 });
+        setAllProducts(result.data);
+      } catch (error) {
+        console.error('Lỗi khi tải tất cả sản phẩm:', error);
+      } finally {
+        setIsLoadingProducts(false);
+      }
+    };
+
+    loadAllProducts();
+  }, []);
+
+  // Load products by category
+  useEffect(() => {
+    if (!selectedCategoryId) return;
+
+    const loadProductsByCategory = async () => {
+      try {
+        setIsLoadingProducts(true);
+        const result = await productService.getByCategory(selectedCategoryId, { limit: 100 });
+        setProducts(result.data);
+      } catch (error) {
+        console.error('Lỗi khi tải sản phẩm theo danh mục:', error);
+      } finally {
+        setIsLoadingProducts(false);
+      }
+    };
+
+    loadProductsByCategory();
+  }, [selectedCategoryId]);
+
+  // Load product prices for filtered products
+  useEffect(() => {
+    const loadProductPrices = async () => {
+      const filteredProducts = getFilteredProducts();
+      const productsWithPrices = await Promise.all(
+        filteredProducts.map(async (product) => {
+          try {
+            const prices = await productService.getProductPrices(product.product_id);
+            const activePrice = prices.find(p => p.is_active);
+            return { ...product, activePrice };
+          } catch (error) {
+            console.error(`Lỗi khi tải giá sản phẩm ${product.product_id}:`, error);
+            return product;
+          }
+        })
+      );
+      setActiveProducts(productsWithPrices);
+    };
+
+    const filteredProducts = getFilteredProducts();
+    if (filteredProducts.length > 0) {
+      loadProductPrices();
+    }
+  }, [getFilteredProducts()]);
+
+  const handleAddToCart = (product: Product & { activePrice?: ProductPrice }) => {
+    if (!product.activePrice) {
+      console.error('Sản phẩm không có giá active');
+      return;
+    }
+
+    addToCart({
+      product_price_id: product.activePrice.product_price_id,
+      product: {
+        product_id: product.product_id,
+        name: product.name,
+        image_path: product.image_path
+      },
+      product_size: product.activePrice.product_size || {
+        size_id: product.activePrice.size_id,
+        name: 'Standard',
+        unit: 'pcs'
+      },
+      price: product.activePrice.price
+    });
+  };
+
+  const subtotal = getCartTotal();
+  const tax = subtotal * 0.1;
+  const total = subtotal + tax;
+
+  const formatPrice = (price: number) => {
+    return new Intl.NumberFormat('vi-VN', {
+      style: 'currency',
+      currency: 'VND'
+    }).format(price);
+  };
+
+  // Helper function to get initials
+  const getInitials = (name: string) => {
+    return name.split(' ').map(word => word[0]).join('').toUpperCase().slice(0, 2);
+  };
+
+  // Get category icon
+  const getCategoryIcon = (categoryName: string) => {
+    return categoryIcons[categoryName] || "📦";
+  };
+
+  return (
+    <div className="flex h-screen bg-gray-50">
+      {/* Sidebar - Categories */}
+      <div className="w-64 bg-white shadow-sm border-r">
+        <div className="p-4">
+          <div className="flex items-center space-x-2 mb-6">
+            <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
+              <span className="text-white font-bold text-sm">🧁</span>
+            </div>
+            <h1 className="text-xl font-bold text-gray-900">Cake POS</h1>
+          </div>
+          
+          <nav className="space-y-2">
+            {isLoadingCategories ? (
+              <div className="text-center py-4">
+                <div className="text-sm text-gray-500">Đang tải danh mục...</div>
+              </div>
+            ) : (
+              <>
+                <button
+                  onClick={() => setSelectedCategoryId(null)}
+                  className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left transition-colors ${
+                    selectedCategoryId === null
+                      ? 'bg-blue-50 text-blue-700 border border-blue-200'
+                      : 'text-gray-600 hover:bg-gray-50'
+                  }`}
+                >
+                  <span className="text-lg">📦</span>
+                  <span className="font-medium">Tất cả</span>
+                </button>
+                {categories.map((category) => (
+                  <button
+                    key={category.category_id}
+                    onClick={() => setSelectedCategoryId(category.category_id)}
+                    className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left transition-colors ${
+                      selectedCategoryId === category.category_id
+                        ? 'bg-blue-50 text-blue-700 border border-blue-200'
+                        : 'text-gray-600 hover:bg-gray-50'
+                    }`}
+                  >
+                    <span className="text-lg">{getCategoryIcon(category.name)}</span>
+                    <span className="font-medium">{category.name}</span>
+                  </button>
+                ))}
+              </>
+            )}
+          </nav>
+        </div>
+      </div>
+
+      {/* Main Content */}
+      <div className="flex-1 flex flex-col">
+        {/* Header */}
+        <header className="bg-white shadow-sm border-b px-6 py-4">
+          <div className="flex items-center justify-between">
+            <div className="flex items-center space-x-4">
+              <div className="relative">
+                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
+                <Input
+                  placeholder="Tìm kiếm sản phẩm..."
+                  value={searchQuery}
+                  onChange={(e) => setSearchQuery(e.target.value)}
+                  className="pl-10 w-80"
+                />
+              </div>
+            </div>
+            
+            <div className="flex items-center space-x-4">
+              <Button variant="outline" size="sm">
+                <User className="w-4 h-4 mr-2" />
+                Tài khoản
+              </Button>
+            </div>
+          </div>
+        </header>
+
+        {/* Products Grid */}
+        <div className="flex-1 p-6">
+          {isLoadingProducts ? (
+            <div className="flex items-center justify-center h-64">
+              <div className="text-center">
+                <div className="text-lg text-gray-500">Đang tải sản phẩm...</div>
+              </div>
+            </div>
+          ) : (
+            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
+              {activeProducts.map((product) => (
+                <Card key={product.product_id} className="cursor-pointer hover:shadow-md transition-shadow">
+                  <CardContent className="p-4">
+                    <div className="text-center">
+                      <div className="text-4xl mb-2">
+                        {product.image_path ? (
+                          <img 
+                            src={product.image_path} 
+                            alt={product.name}
+                            className="w-16 h-16 mx-auto object-cover rounded"
+                          />
+                        ) : (
+                          getCategoryIcon(product.category?.name || '')
+                        )}
+                      </div>
+                      <h3 className="font-medium text-sm mb-2 line-clamp-2">{product.name}</h3>
+                      {product.activePrice ? (
+                        <>
+                          <p className="text-lg font-bold text-blue-600 mb-3">
+                            {formatPrice(product.activePrice.price)}
+                          </p>
+                          <Button 
+                            onClick={() => handleAddToCart(product)}
+                            className="w-full"
+                            size="sm"
+                          >
+                            <Plus className="w-4 h-4 mr-1" />
+                            Thêm
+                          </Button>
+                        </>
+                      ) : (
+                        <p className="text-sm text-gray-500 mb-3">Chưa có giá</p>
+                      )}
+                    </div>
+                  </CardContent>
+                </Card>
+              ))}
+            </div>
+          )}
+        </div>
+      </div>
+
+      {/* Order Panel */}
+      <div className="w-96 bg-white shadow-sm border-l">
+        <div className="p-4 border-b">
+          <h2 className="text-lg font-semibold mb-4">Đơn hàng</h2>
+          
+          {/* Customer Info */}
+          <Card className="mb-4">
+            <CardHeader className="pb-2">
+              <CardTitle className="text-sm">Thông tin khách hàng</CardTitle>
+            </CardHeader>
+            <CardContent className="pt-0">
+              <div className="flex items-center space-x-3">
+                <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
+                  <span className="text-blue-600 font-semibold text-xs">
+                    {getInitials(customer.name)}
+                  </span>
+                </div>
+                <div>
+                  <p className="font-medium text-sm">{customer.name}</p>
+                  <p className="text-xs text-gray-500">{customer.phone}</p>
+                </div>
+              </div>
+            </CardContent>
+          </Card>
+        </div>
+
+        {/* Cart Items */}
+        <div className="flex-1 overflow-y-auto p-4">
+          {cart.length === 0 ? (
+            <div className="text-center py-8">
+              <ShoppingCart className="w-12 h-12 text-gray-300 mx-auto mb-2" />
+              <p className="text-gray-500">Giỏ hàng trống</p>
+            </div>
+          ) : (
+            <div className="space-y-3">
+              {cart.map((item) => (
+                <Card key={item.product_price_id} className="p-3">
+                  <div className="flex items-center justify-between">
+                    <div className="flex-1">
+                      <h4 className="font-medium text-sm">{item.product.name}</h4>
+                      <p className="text-xs text-gray-500">
+                        {item.product_size.name} - {formatPrice(item.price)}
+                      </p>
+                    </div>
+                    <div className="flex items-center space-x-2">
+                      <Button
+                        variant="outline"
+                        size="sm"
+                        onClick={() => updateCartItemQuantity(item.product_price_id, item.quantity - 1)}
+                        className="w-6 h-6 p-0"
+                      >
+                        <Minus className="w-3 h-3" />
+                      </Button>
+                      <span className="text-sm font-medium w-8 text-center">{item.quantity}</span>
+                      <Button
+                        variant="outline"
+                        size="sm"
+                        onClick={() => updateCartItemQuantity(item.product_price_id, item.quantity + 1)}
+                        className="w-6 h-6 p-0"
+                      >
+                        <Plus className="w-3 h-3" />
+                      </Button>
+                    </div>
+                  </div>
+                  <div className="flex justify-between items-center mt-2">
+                    <Button
+                      variant="ghost"
+                      size="sm"
+                      onClick={() => removeFromCart(item.product_price_id)}
+                      className="text-red-500 hover:text-red-700 p-0 h-auto"
+                    >
+                      Xóa
+                    </Button>
+                    <p className="font-medium text-sm">{formatPrice(item.total)}</p>
+                  </div>
+                </Card>
+              ))}
+            </div>
+          )}
+        </div>
+
+        {/* Order Summary */}
+        {cart.length > 0 && (
+          <div className="border-t p-4">
+            <div className="space-y-2 mb-4">
+              <div className="flex justify-between text-sm">
+                <span>Tạm tính:</span>
+                <span>{formatPrice(subtotal)}</span>
+              </div>
+              <div className="flex justify-between text-sm">
+                <span>VAT (10%):</span>
+                <span>{formatPrice(tax)}</span>
+              </div>
+              <Separator />
+              <div className="flex justify-between font-semibold">
+                <span>Tổng cộng:</span>
+                <span>{formatPrice(total)}</span>
+              </div>
+            </div>
+            
+            <div className="space-y-2">
+              <Button className="w-full" size="lg">
+                Thanh toán
+              </Button>
+              <Button variant="outline" className="w-full">
+                Lưu đơn hàng
+              </Button>
+            </div>
+          </div>
+        )}
+      </div>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/.cursor/rules/react-remix.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/react-remix.mdc b/frontend/pos/.cursor/rules/react-remix.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/react-remix.mdc	(date 1750212011795)
@@ -0,0 +1,5 @@
+---
+description: Directs developers to follow React Remix documentation for data fetching, rendering, and routing when using React Remix.
+globs: **/remix/**/*
+---
+- Follow React Remix docs for Data Fetching, Rendering, and Routing.
\ No newline at end of file
Index: frontend/pos/.cursor/rules/performance-optimization.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/performance-optimization.mdc b/frontend/pos/.cursor/rules/performance-optimization.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/performance-optimization.mdc	(date 1750212011795)
@@ -0,0 +1,9 @@
+---
+description: Outlines performance optimization techniques, such as minimizing useEffect and setState, using Suspense, and optimizing images.
+globs: *.tsx,*.jsx,*.js
+alwaysApply: false
+---
+- Minimize 'useEffect', and 'setState'; favor React Remix Components (RSC).
+- Wrap client components in Suspense with fallback.
+- Use dynamic loading for non-critical components.
+- Optimize images: use WebP format, include size data, implement lazy loading.
\ No newline at end of file
Index: frontend/manager/src/lib/validations/discount.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/validations/discount.ts b/frontend/manager/src/lib/validations/discount.ts
new file mode 100644
--- /dev/null	(date 1750168673698)
+++ b/frontend/manager/src/lib/validations/discount.ts	(date 1750168673698)
@@ -0,0 +1,150 @@
+import { z } from "zod";
+import { CreateDiscountDto, UpdateDiscountDto } from "@/types/api";
+
+// Base discount validation schema
+export const discountSchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên khuyến mãi là bắt buộc")
+    .max(500, "Tên khuyến mãi không được vượt quá 500 ký tự")
+    .trim(),
+  
+  description: z
+    .string()
+    .max(1000, "Mô tả không được vượt quá 1000 ký tự")
+    .optional()
+    .or(z.literal("")),
+  
+  coupon_code: z
+    .string()
+    .min(1, "Mã giảm giá là bắt buộc")
+    .max(50, "Mã giảm giá không được vượt quá 50 ký tự")
+    .regex(/^[A-Z0-9]+$/, "Mã giảm giá chỉ được chứa chữ hoa và số")
+    .trim(),
+  
+  discount_value: z
+    .number()
+    .min(0, "Giá trị giảm giá phải lớn hơn hoặc bằng 0")
+    .max(100, "Giá trị giảm giá không được vượt quá 100%"),
+  
+  min_required_order_value: z
+    .number()
+    .min(0, "Giá trị đơn hàng tối thiểu phải lớn hơn hoặc bằng 0"),
+  
+  max_discount_amount: z
+    .number()
+    .min(0, "Số tiền giảm tối đa phải lớn hơn hoặc bằng 0"),
+  
+  min_required_product: z
+    .number()
+    .min(0, "Số lượng sản phẩm tối thiểu phải lớn hơn hoặc bằng 0")
+    .optional(),
+  
+  valid_from: z
+    .string()
+    .datetime("Ngày bắt đầu không hợp lệ")
+    .optional()
+    .or(z.literal("")),
+  
+  valid_until: z
+    .string()
+    .datetime("Ngày kết thúc không hợp lệ")
+    .min(1, "Ngày kết thúc là bắt buộc"),
+  
+  max_uses: z
+    .number()
+    .min(1, "Số lần sử dụng tối đa phải lớn hơn 0")
+    .optional(),
+  
+  max_uses_per_customer: z
+    .number()
+    .min(1, "Số lần sử dụng tối đa mỗi khách hàng phải lớn hơn 0")
+    .optional(),
+  
+  is_active: z
+    .boolean()
+    .default(true),
+});
+
+// Create discount form schema
+export const createDiscountFormSchema = discountSchema.refine(
+  (data) => {
+    if (data.valid_from && data.valid_until) {
+      return new Date(data.valid_from) < new Date(data.valid_until);
+    }
+    return true;
+  },
+  {
+    message: "Ngày bắt đầu phải trước ngày kết thúc",
+    path: ["valid_from"],
+  }
+);
+
+// Update discount form schema (all fields optional except validations)
+export const updateDiscountFormSchema = discountSchema.partial().refine(
+  (data) => {
+    if (data.valid_from && data.valid_until) {
+      return new Date(data.valid_from) < new Date(data.valid_until);
+    }
+    return true;
+  },
+  {
+    message: "Ngày bắt đầu phải trước ngày kết thúc",
+    path: ["valid_from"],
+  }
+);
+
+// TypeScript types derived from schemas
+export type CreateDiscountFormData = z.infer<typeof createDiscountFormSchema>;
+export type UpdateDiscountFormData = z.infer<typeof updateDiscountFormSchema>;
+
+// Helper functions to transform form data to API DTOs
+export function transformCreateDiscountFormData(formData: CreateDiscountFormData): CreateDiscountDto {
+  return {
+    name: formData.name,
+    description: formData.description || undefined,
+    coupon_code: formData.coupon_code,
+    discount_value: formData.discount_value,
+    min_required_order_value: formData.min_required_order_value,
+    max_discount_amount: formData.max_discount_amount,
+    min_required_product: formData.min_required_product,
+    valid_from: formData.valid_from || undefined,
+    valid_until: formData.valid_until,
+    max_uses: formData.max_uses,
+    max_uses_per_customer: formData.max_uses_per_customer,
+    is_active: formData.is_active,
+  };
+}
+
+export function transformUpdateDiscountFormData(formData: UpdateDiscountFormData): UpdateDiscountDto {
+  return {
+    name: formData.name,
+    description: formData.description || undefined,
+    coupon_code: formData.coupon_code,
+    discount_value: formData.discount_value,
+    min_required_order_value: formData.min_required_order_value,
+    max_discount_amount: formData.max_discount_amount,
+    min_required_product: formData.min_required_product,
+    valid_from: formData.valid_from || undefined,
+    valid_until: formData.valid_until,
+    max_uses: formData.max_uses,
+    max_uses_per_customer: formData.max_uses_per_customer,
+    is_active: formData.is_active,
+  };
+}
+
+// Default values for forms
+export const defaultDiscountValues: Partial<CreateDiscountFormData> = {
+  name: "",
+  description: "",
+  coupon_code: "",
+  discount_value: 0,
+  min_required_order_value: 0,
+  max_discount_amount: 0,
+  min_required_product: undefined,
+  valid_from: "",
+  valid_until: "",
+  max_uses: undefined,
+  max_uses_per_customer: undefined,
+  is_active: true,
+}; 
\ No newline at end of file
Index: frontend/manager/src/stores/discounts.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/discounts.ts b/frontend/manager/src/stores/discounts.ts
new file mode 100644
--- /dev/null	(date 1750209148270)
+++ b/frontend/manager/src/stores/discounts.ts	(date 1750209148270)
@@ -0,0 +1,229 @@
+import { create } from 'zustand';
+import { devtools } from 'zustand/middleware';
+import { discountService } from '@/lib/services/discount-service';
+import { Discount, CreateDiscountDto, UpdateDiscountDto, PaginatedResponse } from '@/types/api';
+
+interface DiscountState {
+  // Data
+  discounts: Discount[];
+  currentDiscount: Discount | null;
+  
+  // Pagination
+  pagination: {
+    page: number;
+    limit: number;
+    total: number;
+    totalPages: number;
+  };
+  
+  // Loading states
+  isLoading: boolean;
+  isCreating: boolean;
+  isUpdating: boolean;
+  isDeleting: boolean;
+  
+  // Search and filters
+  searchQuery: string;
+  isActiveFilter: boolean | null;
+  
+  // Actions
+  fetchDiscounts: (params?: { page?: number; limit?: number; refresh?: boolean }) => Promise<void>;
+  fetchDiscountById: (id: number) => Promise<void>;
+  fetchDiscountByCouponCode: (couponCode: string) => Promise<Discount>;
+  createDiscount: (data: CreateDiscountDto) => Promise<void>;
+  updateDiscount: (id: number, data: UpdateDiscountDto) => Promise<void>;
+  deleteDiscount: (id: number) => Promise<void>;
+  bulkDeleteDiscounts: (ids: number[]) => Promise<any>;
+  
+  // UI Actions
+  setSearchQuery: (query: string) => void;
+  setIsActiveFilter: (isActive: boolean | null) => void;
+  setCurrentDiscount: (discount: Discount | null) => void;
+  resetState: () => void;
+}
+
+const initialState = {
+  discounts: [],
+  currentDiscount: null,
+  pagination: {
+    page: 1,
+    limit: 10,
+    total: 0,
+    totalPages: 0,
+  },
+  isLoading: false,
+  isCreating: false,
+  isUpdating: false,
+  isDeleting: false,
+  searchQuery: '',
+  isActiveFilter: null,
+};
+
+export const useDiscountsStore = create<DiscountState>()(
+  devtools(
+    (set, get) => ({
+      ...initialState,
+
+      fetchDiscounts: async (params = {}) => {
+        const { page = 1, limit = 10, refresh = false } = params;
+        const { searchQuery, isActiveFilter } = get();
+        
+        try {
+          set({ isLoading: true });
+          
+          const response: PaginatedResponse<Discount> = await discountService.getAll({
+            page,
+            limit,
+            search: searchQuery || undefined,
+            isActive: isActiveFilter ?? undefined,
+          });
+          
+          set({
+            discounts: refresh ? response.data : response.data,
+            pagination: {
+              page: response.page,
+              limit: response.limit,
+              total: response.total,
+              totalPages: response.totalPages,
+            },
+            isLoading: false,
+          });
+        } catch (error) {
+          console.error('Lỗi lấy danh sách khuyến mãi:', error);
+          set({ isLoading: false });
+          throw error;
+        }
+      },
+
+      fetchDiscountById: async (id: number) => {
+        try {
+          set({ isLoading: true });
+          const discount = await discountService.getById(id);
+          set({ 
+            currentDiscount: discount,
+            isLoading: false 
+          });
+        } catch (error) {
+          console.error('Lỗi lấy thông tin khuyến mãi:', error);
+          set({ isLoading: false });
+          throw error;
+        }
+      },
+
+      fetchDiscountByCouponCode: async (couponCode: string) => {
+        try {
+          const discount = await discountService.getByCouponCode(couponCode);
+          return discount;
+        } catch (error) {
+          console.error('Lỗi lấy thông tin khuyến mãi theo mã:', error);
+          throw error;
+        }
+      },
+
+      createDiscount: async (data: CreateDiscountDto) => {
+        try {
+          set({ isCreating: true });
+          const newDiscount = await discountService.create(data);
+          
+          // Thêm discount mới vào đầu danh sách
+          set((state) => ({
+            discounts: [newDiscount, ...state.discounts],
+            pagination: {
+              ...state.pagination,
+              total: state.pagination.total + 1,
+            },
+            isCreating: false,
+          }));
+        } catch (error) {
+          console.error('Lỗi tạo khuyến mãi:', error);
+          set({ isCreating: false });
+          throw error;
+        }
+      },
+
+      updateDiscount: async (id: number, data: UpdateDiscountDto) => {
+        try {
+          set({ isUpdating: true });
+          const updatedDiscount = await discountService.update(id, data);
+          
+          // Cập nhật discount trong danh sách
+          set((state) => ({
+            discounts: state.discounts.map((discount) =>
+              discount.id === id ? updatedDiscount : discount
+            ),
+            currentDiscount: state.currentDiscount?.id === id ? updatedDiscount : state.currentDiscount,
+            isUpdating: false,
+          }));
+        } catch (error) {
+          console.error('Lỗi cập nhật khuyến mãi:', error);  
+          set({ isUpdating: false });
+          throw error;
+        }
+      },
+
+      deleteDiscount: async (id: number) => {
+        try {
+          set({ isDeleting: true });
+          await discountService.delete(id);
+          
+          // Xóa discount khỏi danh sách
+          set((state) => ({
+            discounts: state.discounts.filter((discount) => discount.id !== id),
+            currentDiscount: state.currentDiscount?.id === id ? null : state.currentDiscount,
+            pagination: {
+              ...state.pagination,
+              total: Math.max(0, state.pagination.total - 1),
+            },
+            isDeleting: false,
+          }));
+        } catch (error) {
+          console.error('Lỗi xóa khuyến mãi:', error);
+          set({ isDeleting: false });
+          throw error;
+        }
+      },
+
+      bulkDeleteDiscounts: async (ids: number[]) => {
+        try {
+          set({ isDeleting: true });
+          const result = await discountService.bulkDelete(ids);
+          
+          // Xóa các discount đã xóa thành công khỏi danh sách
+          set((state) => ({
+            discounts: state.discounts.filter((discount) => !result.deleted.includes(discount.id)),
+            pagination: {
+              ...state.pagination,
+              total: Math.max(0, state.pagination.total - result.deleted.length),
+            },
+            isDeleting: false,
+          }));
+          
+          return result;
+        } catch (error) {
+          console.error('Lỗi xóa nhiều khuyến mãi:', error);
+          set({ isDeleting: false });
+          throw error;
+        }
+      },
+
+      setSearchQuery: (query: string) => {
+        set({ searchQuery: query });
+      },
+
+      setIsActiveFilter: (isActive: boolean | null) => {
+        set({ isActiveFilter: isActive });
+      },
+
+      setCurrentDiscount: (discount: Discount | null) => {
+        set({ currentDiscount: discount });
+      },
+
+      resetState: () => {
+        set({ ...initialState });
+      },
+    }),
+    {
+      name: 'discounts-store',
+    }
+  )
+); 
\ No newline at end of file
Index: frontend/manager/src/lib/services/discount-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/discount-service.ts b/frontend/manager/src/lib/services/discount-service.ts
new file mode 100644
--- /dev/null	(date 1750211613230)
+++ b/frontend/manager/src/lib/services/discount-service.ts	(date 1750211613230)
@@ -0,0 +1,101 @@
+import { apiClient } from "@/lib/api-client";
+import { 
+  BackendDiscountResponse, 
+  Discount, 
+  CreateDiscountDto, 
+  UpdateDiscountDto,
+  BackendPaginatedResponse,
+  PaginatedResponse,
+  BulkDeleteResponse,
+  transformDiscountResponse
+} from "@/types/api";
+
+/**
+ * Discount Service
+ * Xử lý tất cả API calls liên quan đến discounts
+ */
+export class DiscountService {
+  private readonly endpoint = "/discounts";
+
+  /**
+   * Lấy danh sách discounts với pagination
+   */
+  async getAll(params?: { 
+    page?: number; 
+    limit?: number;
+    search?: string;
+    isActive?: boolean;
+  }): Promise<PaginatedResponse<Discount>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendDiscountResponse>>(
+      this.endpoint, 
+      params
+    );
+    
+    // Transform backend response sang frontend format
+    return {
+      data: backendResponse.data.map(transformDiscountResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
+  /**
+   * Lấy discount theo ID
+   */
+  async getById(id: number): Promise<Discount> {
+    const backendResponse = await apiClient.get<BackendDiscountResponse>(`${this.endpoint}/${id}`);
+    return transformDiscountResponse(backendResponse);
+  }
+
+  /**
+   * Lấy discount theo coupon code
+   */
+  async getByCouponCode(couponCode: string): Promise<Discount> {
+    const backendResponse = await apiClient.get<BackendDiscountResponse>(`${this.endpoint}/coupon/${couponCode}`);
+    return transformDiscountResponse(backendResponse);
+  }
+
+  /**
+   * Tạo discount mới
+   */
+  async create(discountData: CreateDiscountDto): Promise<Discount> {
+    const backendResponse = await apiClient.post<BackendDiscountResponse>(this.endpoint, discountData);
+    return transformDiscountResponse(backendResponse);
+  }
+
+  /**
+   * Cập nhật discount
+   */
+  async update(id: number, discountData: UpdateDiscountDto): Promise<Discount> {
+    const backendResponse = await apiClient.patch<BackendDiscountResponse>(`${this.endpoint}/${id}`, discountData);
+    return transformDiscountResponse(backendResponse);
+  }
+
+  /**
+   * Xóa discount
+   */
+  async delete(id: number): Promise<void> {
+    return apiClient.delete<void>(`${this.endpoint}/${id}`);
+  }
+
+  /**
+   * Xóa nhiều discount
+   */
+  async bulkDelete(ids: number[]): Promise<BulkDeleteResponse> {
+    return apiClient.delete<BulkDeleteResponse>(`${this.endpoint}/bulk`, { 
+      ids: ids
+    });
+  }
+
+  /**
+   * Test API connection
+   */
+  async ping(): Promise<{ message: string }> {
+    return apiClient.get<{ message: string }>(`${this.endpoint}/test/ping`);
+  }
+}
+
+// Export singleton instance
+export const discountService = new DiscountService(); 
\ No newline at end of file
Index: frontend/manager/src/lib/services/reports-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/reports-service.ts b/frontend/manager/src/lib/services/reports-service.ts
new file mode 100644
--- /dev/null	(date 1750226446737)
+++ b/frontend/manager/src/lib/services/reports-service.ts	(date 1750226446737)
@@ -0,0 +1,91 @@
+import { apiClient } from '../api-client';
+import { 
+  SalesReportQuery, 
+  SalesReportResponse, 
+  transformSalesReportResponse 
+} from '@/types/api';
+
+export class ReportsService {
+  private readonly baseUrl = '/reports';
+
+  async getSalesReport(query?: SalesReportQuery): Promise<SalesReportResponse> {
+    try {
+      console.log('Query params:', query);
+      
+      const response = await apiClient.get(`${this.baseUrl}/sales`, query) as any;
+      console.log('API Response:', response);
+      
+      if (!response) {
+        console.warn('Empty response from API');
+        return transformSalesReportResponse(null);
+      }
+      
+      return transformSalesReportResponse(response);
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo bán hàng:', error);
+      throw new Error('Không thể lấy báo cáo bán hàng');
+    }
+  }
+
+  async getMonthlySalesReport(query?: SalesReportQuery): Promise<SalesReportResponse> {
+    try {
+      const response = await apiClient.get(`${this.baseUrl}/sales/monthly`, query) as any;
+      
+      if (!response) {
+        return transformSalesReportResponse(null);
+      }
+      
+      return transformSalesReportResponse(response);
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo theo tháng:', error);
+      throw new Error('Không thể lấy báo cáo theo tháng');
+    }
+  }
+
+  async getDailySalesReport(query?: SalesReportQuery): Promise<SalesReportResponse> {
+    try {
+      const response = await apiClient.get(`${this.baseUrl}/sales/daily`, query) as any;
+      
+      if (!response) {
+        return transformSalesReportResponse(null);
+      }
+      
+      return transformSalesReportResponse(response);
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo theo ngày:', error);
+      throw new Error('Không thể lấy báo cáo theo ngày');
+    }
+  }
+
+  async getEmployeeSalesReport(query?: SalesReportQuery): Promise<SalesReportResponse> {
+    try {
+      const response = await apiClient.get(`${this.baseUrl}/sales/employee`, query) as any;
+      
+      if (!response) {
+        return transformSalesReportResponse(null);
+      }
+      
+      return transformSalesReportResponse(response);
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo theo nhân viên:', error);
+      throw new Error('Không thể lấy báo cáo theo nhân viên');
+    }
+  }
+
+  async getProductSalesReport(query?: SalesReportQuery): Promise<SalesReportResponse> {
+    try {
+      const response = await apiClient.get(`${this.baseUrl}/sales/products`, query) as any;
+      
+      if (!response) {
+        return transformSalesReportResponse(null);
+      }
+      
+      return transformSalesReportResponse(response);
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo sản phẩm:', error);
+      throw new Error('Không thể lấy báo cáo sản phẩm');
+    }
+  }
+}
+
+export const reportsService = new ReportsService(); 
\ No newline at end of file
Index: frontend/manager/src/app/users/membership-types/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { \n  ArrowLeft, \n  Edit, \n  Save, \n  X, \n  Tag, \n  Percent, \n  Star, \n  Calendar,\n  FileText,\n  Loader2,\n  CheckCircle,\n  XCircle\n} from \"lucide-react\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { AuthGuard } from \"@/components/auth/auth-guard\";\nimport { useMembershipTypeStore } from \"@/stores/membership-types\";\nimport { updateMembershipTypeSchema, UpdateMembershipTypeFormData } from \"@/lib/validations/membership-type\";\n\nfunction formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"vi-VN\", {\n    year: \"numeric\",\n    month: \"long\", \n    day: \"numeric\",\n  }).format(date);\n}\n\nfunction formatCurrency(amount: number): string {\n  return new Intl.NumberFormat(\"vi-VN\", {\n    style: \"currency\",\n    currency: \"VND\",\n  }).format(amount);\n}\n\nexport default function MembershipTypeDetailPage() {\n  const router = useRouter();\n  const params = useParams();\n  const membershipTypeId = parseInt(params.id as string);\n  \n  const [isEditing, setIsEditing] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  \n  const {\n    currentMembershipType: membershipType,\n    isLoading,\n    fetchMembershipTypeById,\n    updateMembershipType,\n  } = useMembershipTypeStore();\n\n  // Form cho cập nhật membership type\n  const form = useForm<UpdateMembershipTypeFormData>({\n    resolver: zodResolver(updateMembershipTypeSchema),\n    defaultValues: {\n      type: \"\",\n      discountValue: 0,\n      requiredPoint: 0,\n      description: \"\",\n      validUntil: \"\",\n      isActive: true,\n    },\n  });\n\n  useEffect(() => {\n    if (membershipTypeId) {\n      fetchMembershipTypeById(membershipTypeId);\n    }\n  }, [membershipTypeId, fetchMembershipTypeById]);\n\n  useEffect(() => {\n    if (membershipType && isEditing) {\n      form.reset({\n        type: membershipType.type,\n        discountValue: membershipType.discountValue,\n        requiredPoint: membershipType.requiredPoint,\n        description: membershipType.description || \"\",\n        validUntil: membershipType.validUntil ? \n          membershipType.validUntil.toISOString().split('T')[0] : \"\",\n        isActive: membershipType.isActive,\n      });\n    }\n  }, [membershipType, isEditing, form]);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    form.reset();\n  };\n\n  const handleSave = async (data: UpdateMembershipTypeFormData) => {\n    if (!membershipType) return;\n    \n    try {\n      setIsUpdating(true);\n      \n      const result = await updateMembershipType(membershipType.id, data);\n      if (result) {\n        toast.success(\"Cập nhật loại thành viên thành công\");\n        setIsEditing(false);\n      }\n    } catch (error) {\n      toast.error(\"Có lỗi xảy ra khi cập nhật loại thành viên\");\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AuthGuard>\n        <div className=\"flex items-center justify-center min-h-[400px]\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n        </div>\n      </AuthGuard>\n    );\n  }\n\n  if (!membershipType) {\n    return (\n      <AuthGuard>\n        <div className=\"space-y-6\">\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => router.back()}\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Quay lại\n            </Button>\n          </div>\n          <Card>\n            <CardContent className=\"flex items-center justify-center min-h-[200px]\">\n              <p className=\"text-muted-foreground\">Không tìm thấy loại thành viên</p>\n            </CardContent>\n          </Card>\n        </div>\n      </AuthGuard>\n    );\n  }\n\n  return (\n    <AuthGuard>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => router.back()}\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Quay lại\n            </Button>\n            <div>\n              <h1 className=\"text-2xl font-bold\">{membershipType.type}</h1>\n              <p className=\"text-muted-foreground\">\n                Chi tiết loại thành viên\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <Badge variant={membershipType.isActive ? \"default\" : \"secondary\"}>\n              {membershipType.isActive ? (\n                <>\n                  <CheckCircle className=\"h-3 w-3 mr-1\" />\n                  Hoạt động\n                </>\n              ) : (\n                <>\n                  <XCircle className=\"h-3 w-3 mr-1\" />\n                  Không hoạt động\n                </>\n              )}\n            </Badge>\n          </div>\n        </div>\n\n        {/* Thông tin loại thành viên */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-lg font-medium\">\n              Thông tin loại thành viên\n            </CardTitle>\n            {!isEditing ? (\n              <Button variant=\"outline\" size=\"sm\" onClick={handleEdit}>\n                <Edit className=\"h-4 w-4 mr-2\" />\n                Chỉnh sửa\n              </Button>\n            ) : (\n              <div className=\"flex space-x-2\">\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\" \n                  onClick={handleCancelEdit}\n                  disabled={isUpdating}\n                >\n                  <X className=\"h-4 w-4 mr-2\" />\n                  Hủy\n                </Button>\n                <Button \n                  size=\"sm\" \n                  onClick={form.handleSubmit(handleSave)}\n                  disabled={isUpdating}\n                >\n                  {isUpdating ? (\n                    <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  ) : (\n                    <Save className=\"h-4 w-4 mr-2\" />\n                  )}\n                  Lưu\n                </Button>\n              </div>\n            )}\n          </CardHeader>\n          <CardContent>\n            {!isEditing ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Tag className=\"h-5 w-5 text-muted-foreground\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Tên loại thành viên</p>\n                      <p className=\"text-sm text-muted-foreground\">{membershipType.type}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    <Percent className=\"h-5 w-5 text-muted-foreground\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Tỷ lệ giảm giá</p>\n                      <p className=\"text-sm text-muted-foreground\">{membershipType.discountValue}%</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    <Star className=\"h-5 w-5 text-muted-foreground\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Điểm yêu cầu</p>\n                      <p className=\"text-sm text-muted-foreground\">{membershipType.requiredPoint.toLocaleString()} điểm</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  {membershipType.validUntil && (\n                    <div className=\"flex items-center space-x-3\">\n                      <Calendar className=\"h-5 w-5 text-muted-foreground\" />\n                      <div>\n                        <p className=\"text-sm font-medium\">Có hiệu lực đến</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {formatDate(new Date(membershipType.validUntil))}\n                        </p>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {membershipType.description && (\n                    <div className=\"flex items-start space-x-3\">\n                      <FileText className=\"h-5 w-5 text-muted-foreground mt-0.5\" />\n                      <div>\n                        <p className=\"text-sm font-medium\">Mô tả</p>\n                        <p className=\"text-sm text-muted-foreground\">{membershipType.description}</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(handleSave)} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {/* Type */}\n                    <FormField\n                      control={form.control}\n                      name=\"type\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>\n                            Tên loại thành viên <span className=\"text-red-500\">*</span>\n                          </FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"VIP, Premium, Silver...\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Discount Value */}\n                    <FormField\n                      control={form.control}\n                      name=\"discountValue\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>\n                            Tỷ lệ giảm giá (%) <span className=\"text-red-500\">*</span>\n                          </FormLabel>\n                          <FormControl>\n                            <Input \n                              type=\"number\" \n                              placeholder=\"5\" \n                              min=\"0\"\n                              max=\"100\"\n                              step=\"0.1\"\n                              {...field}\n                              onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Required Point */}\n                    <FormField\n                      control={form.control}\n                      name=\"requiredPoint\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>\n                            Điểm yêu cầu <span className=\"text-red-500\">*</span>\n                          </FormLabel>\n                          <FormControl>\n                            <Input \n                              type=\"number\" \n                              placeholder=\"1000\" \n                              min=\"0\"\n                              {...field}\n                              onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Valid Until */}\n                    <FormField\n                      control={form.control}\n                      name=\"validUntil\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Có hiệu lực đến</FormLabel>\n                          <FormControl>\n                            <Input \n                              type=\"date\" \n                              {...field}\n                              value={field.value || \"\"}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  {/* Description */}\n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Mô tả</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Mô tả quyền lợi của loại thành viên này...\"\n                            className=\"resize-none\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Is Active */}\n                  <FormField\n                    control={form.control}\n                    name=\"isActive\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm\">\n                        <div className=\"space-y-0.5\">\n                          <FormLabel>Kích hoạt</FormLabel>\n                          <div className=\"text-sm text-muted-foreground\">\n                            Loại thành viên này có hoạt động hay không\n                          </div>\n                        </div>\n                        <FormControl>\n                          <Switch\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                      </FormItem>\n                    )}\n                  />\n                </form>\n              </Form>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Thông tin hệ thống */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg font-medium\">Thông tin hệ thống</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm font-medium\">ID</p>\n                  <p className=\"text-sm text-muted-foreground\">{membershipType.id}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm font-medium\">Ngày tạo</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {formatDate(new Date(membershipType.createdAt))}\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm font-medium\">Cập nhật lần cuối</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {formatDate(new Date(membershipType.updatedAt))}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </AuthGuard>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/membership-types/[id]/page.tsx b/frontend/manager/src/app/users/membership-types/[id]/page.tsx
--- a/frontend/manager/src/app/users/membership-types/[id]/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/membership-types/[id]/page.tsx	(date 1750128336958)
@@ -23,7 +23,6 @@
 import { Button } from "@/components/ui/button";
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
 import { Badge } from "@/components/ui/badge";
-import { Separator } from "@/components/ui/separator";
 import {
   Form,
   FormControl,
Index: frontend/manager/src/stores/products.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/products.ts b/frontend/manager/src/stores/products.ts
new file mode 100644
--- /dev/null	(date 1750164100702)
+++ b/frontend/manager/src/stores/products.ts	(date 1750164100702)
@@ -0,0 +1,521 @@
+"use client";
+
+import { create } from 'zustand';
+import { devtools } from 'zustand/middleware';
+import { Product, ProductPrice, PaginatedResponse, BulkDeleteResponse } from '@/types/api';
+import { productService } from '@/lib/services/product-service';
+import { 
+  CreateProductFormData, 
+  UpdateProductFormData,
+  CreateProductPriceFormData,
+  UpdateProductPriceFormData,
+  BulkDeleteProductFormData 
+} from '@/lib/validations/product';
+import { toast } from 'sonner';
+
+interface ProductState {
+  // State
+  products: Product[];
+  selectedProducts: Product[];
+  currentProduct: Product | null;
+  isLoading: boolean;
+  isCreating: boolean;
+  isUpdating: boolean;
+  isDeleting: boolean;
+  error: string | null;
+  
+  // Price management states
+  isCreatingPrice: boolean;
+  isUpdatingPrice: boolean;
+  isDeletingPrice: boolean;
+  
+  // Pagination
+  currentPage: number;
+  totalPages: number;
+  totalItems: number;
+  itemsPerPage: number;
+  
+  // Selection
+  selectedIds: Set<number>;
+  
+  // Filters
+  categoryFilter: number | null;
+  isSignatureFilter: boolean | null;
+  searchQuery: string;
+  
+  // Actions - Products
+  fetchProducts: (params?: { 
+    page?: number; 
+    limit?: number; 
+    search?: string;
+    category_id?: number;
+    is_signature?: boolean;
+  }) => Promise<void>;
+  fetchProductById: (id: number) => Promise<void>;
+  fetchProductsByCategory: (categoryId: number, params?: { page?: number; limit?: number; search?: string }) => Promise<void>;
+  createProduct: (data: CreateProductFormData) => Promise<Product | null>;
+  updateProduct: (id: number, data: UpdateProductFormData) => Promise<Product | null>;
+  deleteProduct: (id: number) => Promise<boolean>;
+  bulkDeleteProducts: (data: BulkDeleteProductFormData) => Promise<BulkDeleteResponse>;
+  
+  // Actions - Product Prices
+  fetchProductPrices: (productId: number) => Promise<ProductPrice[]>;
+  createProductPrice: (data: CreateProductPriceFormData) => Promise<ProductPrice | null>;
+  updateProductPrice: (priceId: number, data: UpdateProductPriceFormData) => Promise<ProductPrice | null>;
+  deleteProductPrice: (priceId: number) => Promise<boolean>;
+  bulkDeleteProductPrices: (priceIds: number[]) => Promise<BulkDeleteResponse>;
+  
+  // Selection actions
+  selectProduct: (id: number) => void;
+  deselectProduct: (id: number) => void;
+  selectAllProducts: () => void;
+  deselectAllProducts: () => void;
+  
+  // Filter actions
+  setCategoryFilter: (categoryId: number | null) => void;
+  setIsSignatureFilter: (isSignature: boolean | null) => void;
+  setSearchQuery: (query: string) => void;
+  clearFilters: () => void;
+  
+  // UI actions
+  setCurrentProduct: (product: Product | null) => void;
+  clearError: () => void;
+  resetState: () => void;
+}
+
+const initialState = {
+  products: [],
+  selectedProducts: [],
+  currentProduct: null,
+  isLoading: false,
+  isCreating: false,
+  isUpdating: false,
+  isDeleting: false,
+  error: null,
+  isCreatingPrice: false,
+  isUpdatingPrice: false,
+  isDeletingPrice: false,
+  currentPage: 1,
+  totalPages: 1,
+  totalItems: 0,
+  itemsPerPage: 10,
+  selectedIds: new Set<number>(),
+  categoryFilter: null,
+  isSignatureFilter: null,
+  searchQuery: '',
+};
+
+export const useProductStore = create<ProductState>()(
+  devtools(
+    (set, get) => ({
+      ...initialState,
+
+      // === PRODUCT ACTIONS ===
+
+      fetchProducts: async (params = {}) => {
+        set({ isLoading: true, error: null });
+        
+        try {
+          const { page = 1, limit = 10, search, category_id, is_signature } = params;
+          const response: PaginatedResponse<Product> = await productService.getAll({
+            page,
+            limit,
+            search,
+            category_id,
+            is_signature,
+          });
+          
+          set({
+            products: response.data,
+            currentPage: response.page,
+            totalPages: response.totalPages,
+            totalItems: response.total,
+            itemsPerPage: response.limit,
+            isLoading: false,
+          });
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể tải danh sách sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isLoading: false,
+            products: [],
+          });
+          toast.error(errorMessage);
+        }
+      },
+
+      fetchProductById: async (id: number) => {
+        set({ isLoading: true, error: null });
+        
+        try {
+          const product = await productService.getById(id);
+          set({
+            currentProduct: product,
+            isLoading: false,
+          });
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể tải thông tin sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isLoading: false,
+            currentProduct: null,
+          });
+          toast.error(errorMessage);
+        }
+      },
+
+      fetchProductsByCategory: async (categoryId: number, params = {}) => {
+        set({ isLoading: true, error: null });
+        
+        try {
+          const { page = 1, limit = 10, search } = params;
+          const response: PaginatedResponse<Product> = await productService.getByCategory(categoryId, {
+            page,
+            limit,
+            search,
+          });
+          
+          set({
+            products: response.data,
+            currentPage: response.page,
+            totalPages: response.totalPages,
+            totalItems: response.total,
+            itemsPerPage: response.limit,
+            categoryFilter: categoryId,
+            isLoading: false,
+          });
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể tải sản phẩm theo danh mục';
+          set({ 
+            error: errorMessage, 
+            isLoading: false,
+            products: [],
+          });
+          toast.error(errorMessage);
+        }
+      },
+
+      createProduct: async (data: CreateProductFormData) => {
+        set({ isCreating: true, error: null });
+        
+        try {
+          const newProduct = await productService.create(data);
+          
+          // Refresh products list
+          const { currentPage, itemsPerPage } = get();
+          await get().fetchProducts({ page: currentPage, limit: itemsPerPage });
+          
+          set({ isCreating: false });
+          toast.success('Tạo sản phẩm thành công');
+          return newProduct;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể tạo sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isCreating: false 
+          });
+          toast.error(errorMessage);
+          return null;
+        }
+      },
+
+      updateProduct: async (id: number, data: UpdateProductFormData) => {
+        set({ isUpdating: true, error: null });
+        
+        try {
+          const updatedProduct = await productService.update(id, data);
+          
+          // Update products in current list
+          set((state) => ({
+            products: state.products.map(product => 
+              product.id === id ? updatedProduct : product
+            ),
+            currentProduct: state.currentProduct?.id === id ? updatedProduct : state.currentProduct,
+            isUpdating: false,
+          }));
+          
+          toast.success('Cập nhật sản phẩm thành công');
+          return updatedProduct;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể cập nhật sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isUpdating: false 
+          });
+          toast.error(errorMessage);
+          return null;
+        }
+      },
+
+      deleteProduct: async (id: number) => {
+        set({ isDeleting: true, error: null });
+        
+        try {
+          await productService.delete(id);
+          
+          // Remove product from current list
+          set((state) => ({
+            products: state.products.filter(product => product.id !== id),
+            selectedIds: new Set([...state.selectedIds].filter(selectedId => selectedId !== id)),
+            currentProduct: state.currentProduct?.id === id ? null : state.currentProduct,
+            totalItems: Math.max(0, state.totalItems - 1),
+            isDeleting: false,
+          }));
+          
+          toast.success('Xóa sản phẩm thành công');
+          return true;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể xóa sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isDeleting: false 
+          });
+          toast.error(errorMessage);
+          return false;
+        }
+      },
+
+      bulkDeleteProducts: async (data: BulkDeleteProductFormData) => {
+        set({ isDeleting: true, error: null });
+        
+        try {
+          const result = await productService.bulkDelete(data);
+          
+          // Remove deleted products from current list
+          set((state) => ({
+            products: state.products.filter(product => !result.deleted.includes(product.id)),
+            selectedIds: new Set(),
+            totalItems: Math.max(0, state.totalItems - result.deleted.length),
+            isDeleting: false,
+          }));
+          
+          return result;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể xóa các sản phẩm đã chọn';
+          set({ 
+            error: errorMessage, 
+            isDeleting: false 
+          });
+          toast.error(errorMessage);
+          throw error;
+        }
+      },
+
+      // === PRODUCT PRICE ACTIONS ===
+
+      fetchProductPrices: async (productId: number) => {
+        try {
+          const prices = await productService.getProductPrices(productId);
+          return prices;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể tải danh sách giá sản phẩm';
+          toast.error(errorMessage);
+          return [];
+        }
+      },
+
+      createProductPrice: async (data: CreateProductPriceFormData) => {
+        set({ isCreatingPrice: true, error: null });
+        
+        try {
+          const newPrice = await productService.createProductPrice(data);
+          
+          // Refresh current product if it matches
+          const { currentProduct } = get();
+          if (currentProduct && currentProduct.id === data.product_id) {
+            await get().fetchProductById(data.product_id);
+          }
+          
+          set({ isCreatingPrice: false });
+          toast.success('Thêm giá sản phẩm thành công');
+          return newPrice;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể thêm giá sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isCreatingPrice: false 
+          });
+          toast.error(errorMessage);
+          return null;
+        }
+      },
+
+      updateProductPrice: async (priceId: number, data: UpdateProductPriceFormData) => {
+        set({ isUpdatingPrice: true, error: null });
+        
+        try {
+          const updatedPrice = await productService.updateProductPrice(priceId, data);
+          
+          // Refresh current product if needed
+          const { currentProduct } = get();
+          if (currentProduct) {
+            await get().fetchProductById(currentProduct.id);
+          }
+          
+          set({ isUpdatingPrice: false });
+          toast.success('Cập nhật giá sản phẩm thành công');
+          return updatedPrice;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể cập nhật giá sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isUpdatingPrice: false 
+          });
+          toast.error(errorMessage);
+          return null;
+        }
+      },
+
+      deleteProductPrice: async (priceId: number) => {
+        set({ isDeletingPrice: true, error: null });
+        
+        try {
+          await productService.deleteProductPrice(priceId);
+          
+          // Refresh current product if needed
+          const { currentProduct } = get();
+          if (currentProduct) {
+            await get().fetchProductById(currentProduct.id);
+          }
+          
+          set({ isDeletingPrice: false });
+          toast.success('Xóa giá sản phẩm thành công');
+          return true;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể xóa giá sản phẩm';
+          set({ 
+            error: errorMessage, 
+            isDeletingPrice: false 
+          });
+          toast.error(errorMessage);
+          return false;
+        }
+      },
+
+      bulkDeleteProductPrices: async (priceIds: number[]) => {
+        set({ isDeletingPrice: true, error: null });
+        
+        try {
+          const result = await productService.bulkDeleteProductPrices(priceIds);
+          
+          // Refresh current product if needed
+          const { currentProduct } = get();
+          if (currentProduct) {
+            await get().fetchProductById(currentProduct.id);
+          }
+          
+          set({ isDeletingPrice: false });
+          
+          if (result.summary.success > 0) {
+            toast.success(`Đã xóa thành công ${result.summary.success} giá sản phẩm`);
+          }
+          
+          if (result.summary.failed > 0) {
+            toast.error(`Không thể xóa ${result.summary.failed} giá sản phẩm`);
+          }
+          
+          return result;
+        } catch (error: any) {
+          const errorMessage = error?.response?.data?.message || 'Không thể xóa các giá sản phẩm đã chọn';
+          set({ 
+            error: errorMessage, 
+            isDeletingPrice: false 
+          });
+          toast.error(errorMessage);
+          throw error;
+        }
+      },
+
+      // === SELECTION ACTIONS ===
+
+      selectProduct: (id: number) => {
+        set((state) => {
+          const newSelected = new Set(state.selectedIds);
+          newSelected.add(id);
+          return { selectedIds: newSelected };
+        });
+      },
+
+      deselectProduct: (id: number) => {
+        set((state) => {
+          const newSelected = new Set(state.selectedIds);
+          newSelected.delete(id);
+          return { selectedIds: newSelected };
+        });
+      },
+
+      selectAllProducts: () => {
+        set((state) => ({
+          selectedIds: new Set(state.products.map(product => product.id)),
+        }));
+      },
+
+      deselectAllProducts: () => {
+        set({ selectedIds: new Set() });
+      },
+
+      // === FILTER ACTIONS ===
+
+      setCategoryFilter: (categoryId: number | null) => {
+        set({ categoryFilter: categoryId });
+        const { currentPage, itemsPerPage, searchQuery, isSignatureFilter } = get();
+        get().fetchProducts({ 
+          page: currentPage, 
+          limit: itemsPerPage, 
+          search: searchQuery,
+          category_id: categoryId || undefined,
+          is_signature: isSignatureFilter || undefined,
+        });
+      },
+
+      setIsSignatureFilter: (isSignature: boolean | null) => {
+        set({ isSignatureFilter: isSignature });
+        const { currentPage, itemsPerPage, searchQuery, categoryFilter } = get();
+        get().fetchProducts({ 
+          page: currentPage, 
+          limit: itemsPerPage, 
+          search: searchQuery,
+          category_id: categoryFilter || undefined,
+          is_signature: isSignature || undefined,
+        });
+      },
+
+      setSearchQuery: (query: string) => {
+        set({ searchQuery: query });
+        const { currentPage, itemsPerPage, categoryFilter, isSignatureFilter } = get();
+        get().fetchProducts({ 
+          page: currentPage, 
+          limit: itemsPerPage, 
+          search: query,
+          category_id: categoryFilter || undefined,
+          is_signature: isSignatureFilter || undefined,
+        });
+      },
+
+      clearFilters: () => {
+        set({ 
+          categoryFilter: null, 
+          isSignatureFilter: null, 
+          searchQuery: '' 
+        });
+        const { currentPage, itemsPerPage } = get();
+        get().fetchProducts({ page: currentPage, limit: itemsPerPage });
+      },
+
+      // === UI ACTIONS ===
+
+      setCurrentProduct: (product: Product | null) => {
+        set({ currentProduct: product });
+      },
+
+      clearError: () => {
+        set({ error: null });
+      },
+
+      resetState: () => {
+        set(initialState);
+      },
+    }),
+    { name: 'product-store' }
+  )
+); 
\ No newline at end of file
Index: frontend/manager/src/stores/reports.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/reports.ts b/frontend/manager/src/stores/reports.ts
new file mode 100644
--- /dev/null	(date 1750225926661)
+++ b/frontend/manager/src/stores/reports.ts	(date 1750225926661)
@@ -0,0 +1,86 @@
+import { create } from 'zustand';
+import { 
+  SalesReportQuery, 
+  SalesReportResponse 
+} from '@/types/api';
+import { reportsService } from '@/lib/services/reports-service';
+
+interface ReportsState {
+  // State
+  currentReport: SalesReportResponse | null;
+  isLoading: boolean;
+  
+    // Actions
+  getSalesReport: (query?: SalesReportQuery) => Promise<void>;
+  getMonthlySalesReport: (query?: SalesReportQuery) => Promise<void>;
+  getDailySalesReport: (query?: SalesReportQuery) => Promise<void>;
+  getEmployeeSalesReport: (query?: SalesReportQuery) => Promise<void>;
+  getProductSalesReport: (query?: SalesReportQuery) => Promise<void>;
+  clearReport: () => void;
+}
+
+export const useReportsStore = create<ReportsState>((set) => ({
+  // Initial state
+  currentReport: null,
+  isLoading: false,
+
+  // Actions
+  getSalesReport: async (query?: SalesReportQuery) => {
+    set({ isLoading: true });
+    try {
+      const report = await reportsService.getSalesReport(query);
+      set({ currentReport: report, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo bán hàng:', error);
+      set({ isLoading: false });
+    }
+  },
+
+  getMonthlySalesReport: async (query?: SalesReportQuery) => {
+    set({ isLoading: true });
+    try {
+      const report = await reportsService.getMonthlySalesReport(query);
+      set({ currentReport: report, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo theo tháng:', error);
+      set({ isLoading: false });
+    }
+  },
+
+  getDailySalesReport: async (query?: SalesReportQuery) => {
+    set({ isLoading: true });
+    try {
+      const report = await reportsService.getDailySalesReport(query);
+      set({ currentReport: report, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo theo ngày:', error);
+      set({ isLoading: false });
+    }
+  },
+
+  getEmployeeSalesReport: async (query?: SalesReportQuery) => {
+    set({ isLoading: true });
+    try {
+      const report = await reportsService.getEmployeeSalesReport(query);
+      set({ currentReport: report, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo theo nhân viên:', error);  
+      set({ isLoading: false });
+    }
+  },
+
+  getProductSalesReport: async (query?: SalesReportQuery) => {
+    set({ isLoading: true });
+    try {
+      const report = await reportsService.getProductSalesReport(query);
+      set({ currentReport: report, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi khi lấy báo cáo sản phẩm:', error);
+      set({ isLoading: false });
+    }
+  },
+
+  clearReport: () => {
+    set({ currentReport: null });
+  },
+})); 
\ No newline at end of file
Index: frontend/manager/src/stores/orders.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/orders.ts b/frontend/manager/src/stores/orders.ts
new file mode 100644
--- /dev/null	(date 1750214851809)
+++ b/frontend/manager/src/stores/orders.ts	(date 1750214851809)
@@ -0,0 +1,288 @@
+import { create } from "zustand";
+import { devtools } from "zustand/middleware";
+import { Order } from "@/types/api";
+import { orderService } from "@/lib/services/order-service";
+
+interface OrdersState {
+  // State
+  orders: Order[];
+  currentOrder: Order | null;
+  isLoading: boolean;
+  isCreating: boolean;
+  isUpdating: boolean;
+  isDeleting: boolean;
+  error: string | null;
+  
+  // Pagination
+  page: number;
+  limit: number;
+  total: number;
+  totalPages: number;
+  
+  // Filters
+  statusFilter: 'ALL' | 'PROCESSING' | 'CANCELLED' | 'COMPLETED';
+  customerIdFilter?: number;
+  employeeIdFilter?: number;
+
+  // Actions
+  fetchOrders: (params?: { page?: number; limit?: number; }) => Promise<void>;
+  fetchOrdersByStatus: (status: 'PROCESSING' | 'CANCELLED' | 'COMPLETED', params?: { page?: number; limit?: number; }) => Promise<void>;
+  fetchOrdersByEmployee: (employeeId: number, params?: { page?: number; limit?: number; }) => Promise<void>;
+  fetchOrdersByCustomer: (customerId: number, params?: { page?: number; limit?: number; }) => Promise<void>;
+  fetchOrderById: (id: number) => Promise<void>;
+  cancelOrder: (id: number) => Promise<void>;
+  deleteOrder: (id: number) => Promise<void>;
+  
+  // Filter actions
+  setStatusFilter: (status: 'ALL' | 'PROCESSING' | 'CANCELLED' | 'COMPLETED') => void;
+  setCustomerFilter: (customerId?: number) => void;
+  setEmployeeFilter: (employeeId?: number) => void;
+  clearFilters: () => void;
+  
+  // Utility actions
+  setError: (error: string | null) => void;
+  clearError: () => void;
+  reset: () => void;
+}
+
+const initialState = {
+  orders: [],
+  currentOrder: null,
+  isLoading: false,
+  isCreating: false,
+  isUpdating: false,
+  isDeleting: false,
+  error: null,
+  page: 1,
+  limit: 10,
+  total: 0,
+  totalPages: 0,
+  statusFilter: 'ALL' as const,
+  customerIdFilter: undefined,
+  employeeIdFilter: undefined,
+};
+
+export const useOrdersStore = create<OrdersState>()(
+  devtools(
+    (set, get) => ({
+      ...initialState,
+
+      fetchOrders: async (params) => {
+        try {
+          set({ isLoading: true, error: null });
+          const { statusFilter, customerIdFilter, employeeIdFilter } = get();
+          
+          const response = await orderService.getOrders({
+            page: params?.page || get().page,
+            limit: params?.limit || get().limit,
+            ...(statusFilter !== 'ALL' && { status: statusFilter }),
+            ...(customerIdFilter && { customerId: customerIdFilter }),
+            ...(employeeIdFilter && { employeeId: employeeIdFilter }),
+          });
+
+          set({
+            orders: response.data,
+            page: response.page,
+            limit: response.limit,
+            total: response.total,
+            totalPages: response.totalPages,
+            isLoading: false,
+          });
+        } catch (error) {
+          console.error("Lỗi khi tải danh sách đơn hàng:", error);
+          set({
+            error: "Không thể tải danh sách đơn hàng",
+            isLoading: false,
+          });
+          throw error;
+        }
+      },
+
+      fetchOrdersByStatus: async (status, params) => {
+        try {
+          set({ isLoading: true, error: null });
+          
+          const response = await orderService.getOrdersByStatus(status, {
+            page: params?.page || get().page,
+            limit: params?.limit || get().limit,
+          });
+
+          set({
+            orders: response.data,
+            page: response.page,
+            limit: response.limit,
+            total: response.total,
+            totalPages: response.totalPages,
+            statusFilter: status,
+            isLoading: false,
+          });
+        } catch (error) {
+          console.error("Lỗi khi tải đơn hàng theo trạng thái:", error);
+          set({
+            error: "Không thể tải đơn hàng theo trạng thái",
+            isLoading: false,
+          });
+          throw error;
+        }
+      },
+
+      fetchOrdersByEmployee: async (employeeId, params) => {
+        try {
+          set({ isLoading: true, error: null });
+          
+          const response = await orderService.getOrdersByEmployee(employeeId, {
+            page: params?.page || get().page,
+            limit: params?.limit || get().limit,
+          });
+
+          set({
+            orders: response.data,
+            page: response.page,
+            limit: response.limit,
+            total: response.total,
+            totalPages: response.totalPages,
+            employeeIdFilter: employeeId,
+            isLoading: false,
+          });
+        } catch (error) {
+          console.error("Lỗi khi tải đơn hàng theo nhân viên:", error);
+          set({
+            error: "Không thể tải đơn hàng theo nhân viên",
+            isLoading: false,
+          });
+          throw error;
+        }
+      },
+
+      fetchOrdersByCustomer: async (customerId, params) => {
+        try {
+          set({ isLoading: true, error: null });
+          
+          const response = await orderService.getOrdersByCustomer(customerId, {
+            page: params?.page || get().page,
+            limit: params?.limit || get().limit,
+          });
+
+          set({
+            orders: response.data,
+            page: response.page,
+            limit: response.limit,
+            total: response.total,
+            totalPages: response.totalPages,
+            customerIdFilter: customerId,
+            isLoading: false,
+          });
+        } catch (error) {
+          console.error("Lỗi khi tải đơn hàng theo khách hàng:", error);
+          set({
+            error: "Không thể tải đơn hàng theo khách hàng",
+            isLoading: false,
+          });
+          throw error;
+        }
+      },
+
+      fetchOrderById: async (id) => {
+        try {
+          set({ isLoading: true, error: null });
+          
+          const order = await orderService.getById(id);
+          
+          set({
+            currentOrder: order,
+            isLoading: false,
+          });
+        } catch (error) {
+          console.error("Lỗi khi tải chi tiết đơn hàng:", error);
+          set({
+            error: "Không thể tải chi tiết đơn hàng",
+            isLoading: false,
+          });
+          throw error;
+        }
+      },
+
+      cancelOrder: async (id) => {
+        try {
+          set({ isUpdating: true, error: null });
+          
+          const updatedOrder = await orderService.cancelOrder(id);
+          
+          // Update trong list orders
+          set((state) => ({
+            orders: state.orders.map((order) =>
+              order.id === id ? updatedOrder : order
+            ),
+            currentOrder: state.currentOrder?.id === id ? updatedOrder : state.currentOrder,
+            isUpdating: false,
+          }));
+        } catch (error) {
+          console.error("Lỗi khi hủy đơn hàng:", error);
+          set({
+            error: "Không thể hủy đơn hàng",
+            isUpdating: false,
+          });
+          throw error;
+        }
+      },
+
+      deleteOrder: async (id) => {
+        try {
+          set({ isDeleting: true, error: null });
+          
+          await orderService.deleteOrder(id);
+          
+          // Remove từ list orders
+          set((state) => ({
+            orders: state.orders.filter((order) => order.id !== id),
+            currentOrder: state.currentOrder?.id === id ? null : state.currentOrder,
+            total: state.total - 1,
+            isDeleting: false,
+          }));
+        } catch (error) {
+          console.error("Lỗi khi xóa đơn hàng:", error);
+          set({
+            error: "Không thể xóa đơn hàng",
+            isDeleting: false,
+          });
+          throw error;
+        }
+      },
+
+      setStatusFilter: (status) => {
+        set({ statusFilter: status });
+      },
+
+      setCustomerFilter: (customerId) => {
+        set({ customerIdFilter: customerId });
+      },
+
+      setEmployeeFilter: (employeeId) => {
+        set({ employeeIdFilter: employeeId });
+      },
+
+      clearFilters: () => {
+        set({
+          statusFilter: 'ALL',
+          customerIdFilter: undefined,
+          employeeIdFilter: undefined,
+        });
+      },
+
+      setError: (error) => {
+        set({ error });
+      },
+
+      clearError: () => {
+        set({ error: null });
+      },
+
+      reset: () => {
+        set(initialState);
+      },
+    }),
+    {
+      name: "orders-store",
+    }
+  )
+); 
\ No newline at end of file
Index: frontend/manager/src/stores/product-sizes.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/product-sizes.ts b/frontend/manager/src/stores/product-sizes.ts
new file mode 100644
--- /dev/null	(date 1750166055991)
+++ b/frontend/manager/src/stores/product-sizes.ts	(date 1750166055991)
@@ -0,0 +1,222 @@
+"use client";
+
+import { create } from 'zustand';
+import { devtools } from 'zustand/middleware';
+import { ProductSize, BulkDeleteResponse } from '@/types/api';
+import { productSizeService } from '@/lib/services/product-size-service';
+import { 
+  CreateProductSizeFormData, 
+  UpdateProductSizeFormData,
+  BulkDeleteProductSizeFormData 
+} from '@/lib/validations/product-size';
+import { toast } from 'sonner';
+
+interface ProductSizeState {
+  // State
+  productSizes: ProductSize[];
+  currentProductSize: ProductSize | null;
+  isLoading: boolean;
+  isCreating: boolean;
+  isUpdating: boolean;
+  isDeleting: boolean;
+  error: string | null;
+  
+  // Pagination
+  page: number;
+  limit: number;
+  total: number;
+  totalPages: number;
+
+  // Actions
+  fetchProductSizes: (params?: { page?: number; limit?: number; search?: string }) => Promise<void>;
+  getProductSizeById: (id: number) => Promise<void>;
+  createProductSize: (formData: CreateProductSizeFormData) => Promise<void>;
+  updateProductSize: (id: number, formData: UpdateProductSizeFormData) => Promise<void>;
+  deleteProductSize: (id: number) => Promise<void>;
+  bulkDeleteProductSizes: (formData: BulkDeleteProductSizeFormData) => Promise<BulkDeleteResponse>;
+  
+  // Utility actions
+  setPage: (page: number) => void;
+  setLimit: (limit: number) => void;
+  clearError: () => void;
+  reset: () => void;
+}
+
+const initialState = {
+  productSizes: [],
+  currentProductSize: null,
+  isLoading: false,
+  isCreating: false,
+  isUpdating: false,
+  isDeleting: false,
+  error: null,
+  page: 1,
+  limit: 10,
+  total: 0,
+  totalPages: 0,
+};
+
+export const useProductSizeStore = create<ProductSizeState>()(
+  devtools(
+    (set, get) => ({
+      ...initialState,
+
+      fetchProductSizes: async (params) => {
+        try {
+          set({ isLoading: true, error: null });
+          
+          const { page = get().page, limit = get().limit, search } = params || {};
+          
+          const response = await productSizeService.getAll({ page, limit, search });
+          
+          set({
+            productSizes: response.data,
+            page: response.page,
+            limit: response.limit,
+            total: response.total,
+            totalPages: response.totalPages,
+            isLoading: false,
+          });
+        } catch (error: any) {
+          set({ 
+            error: error.message || 'Lỗi tải danh sách kích thước sản phẩm',
+            isLoading: false 
+          });
+          toast.error('Không thể tải danh sách kích thước sản phẩm');
+        }
+      },
+
+      getProductSizeById: async (id) => {
+        try {
+          set({ isLoading: true, error: null });
+          
+          const productSize = await productSizeService.getById(id);
+          
+          set({
+            currentProductSize: productSize,
+            isLoading: false,
+          });
+        } catch (error: any) {
+          set({ 
+            error: error.message || 'Lỗi tải thông tin kích thước sản phẩm',
+            isLoading: false 
+          });
+          toast.error('Không thể tải thông tin kích thước sản phẩm');
+        }
+      },
+
+      createProductSize: async (formData) => {
+        try {
+          set({ isCreating: true, error: null });
+          
+          const newProductSize = await productSizeService.create(formData);
+          
+          set((state) => ({
+            productSizes: [newProductSize, ...state.productSizes],
+            total: state.total + 1,
+            isCreating: false,
+          }));
+          
+          toast.success('Tạo kích thước sản phẩm thành công!');
+        } catch (error: any) {
+          set({ 
+            error: error.message || 'Lỗi tạo kích thước sản phẩm',
+            isCreating: false 
+          });
+          throw error;
+        }
+      },
+
+      updateProductSize: async (id, formData) => {
+        try {
+          set({ isUpdating: true, error: null });
+          
+          const updatedProductSize = await productSizeService.update(id, formData);
+          
+          set((state) => ({
+            productSizes: state.productSizes.map(ps => 
+              ps.id === id ? updatedProductSize : ps
+            ),
+            currentProductSize: state.currentProductSize?.id === id 
+              ? updatedProductSize 
+              : state.currentProductSize,
+            isUpdating: false,
+          }));
+          
+          toast.success('Cập nhật kích thước sản phẩm thành công!');
+        } catch (error: any) {
+          set({ 
+            error: error.message || 'Lỗi cập nhật kích thước sản phẩm',
+            isUpdating: false 
+          });
+          throw error;
+        }
+      },
+
+      deleteProductSize: async (id) => {
+        try {
+          set({ isDeleting: true, error: null });
+          
+          await productSizeService.delete(id);
+          
+          set((state) => ({
+            productSizes: state.productSizes.filter(ps => ps.id !== id),
+            total: state.total - 1,
+            currentProductSize: state.currentProductSize?.id === id 
+              ? null 
+              : state.currentProductSize,
+            isDeleting: false,
+          }));
+          
+          toast.success('Xóa kích thước sản phẩm thành công!');
+        } catch (error: any) {
+          set({ 
+            error: error.message || 'Lỗi xóa kích thước sản phẩm',
+            isDeleting: false 
+          });
+          throw error;
+        }
+      },
+
+      bulkDeleteProductSizes: async (formData) => {
+        try {
+          set({ isDeleting: true, error: null });
+          
+          const result = await productSizeService.bulkDelete(formData);
+          
+          // Refresh danh sách sau khi bulk delete
+          await get().fetchProductSizes();
+          
+          set({ isDeleting: false });
+          
+          return result;
+        } catch (error: any) {
+          set({ 
+            error: error.message || 'Lỗi xóa nhiều kích thước sản phẩm',
+            isDeleting: false 
+          });
+          throw error;
+        }
+      },
+
+      setPage: (page) => {
+        set({ page });
+      },
+
+      setLimit: (limit) => {
+        set({ limit, page: 1 }); // Reset về trang 1 khi thay đổi limit
+      },
+
+      clearError: () => {
+        set({ error: null });
+      },
+
+      reset: () => {
+        set(initialState);
+      },
+    }),
+    {
+      name: 'product-size-store',
+    }
+  )
+); 
\ No newline at end of file
Index: frontend/pos/tailwind.config.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/tailwind.config.ts b/frontend/pos/tailwind.config.ts
new file mode 100644
--- /dev/null	(date 1750218066732)
+++ b/frontend/pos/tailwind.config.ts	(date 1750218066732)
@@ -0,0 +1,77 @@
+import type { Config } from "tailwindcss";
+
+export default {
+  darkMode: "class",
+  content: [
+    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
+    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
+    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
+  ],
+  prefix: "",
+  theme: {
+    container: {
+      center: true,
+      padding: "2rem",
+      screens: {
+        "2xl": "1400px",
+      },
+    },
+    extend: {
+      colors: {
+        border: "hsl(var(--border))",
+        input: "hsl(var(--input))",
+        ring: "hsl(var(--ring))",
+        background: "hsl(var(--background))",
+        foreground: "hsl(var(--foreground))",
+        primary: {
+          DEFAULT: "hsl(var(--primary))",
+          foreground: "hsl(var(--primary-foreground))",
+        },
+        secondary: {
+          DEFAULT: "hsl(var(--secondary))",
+          foreground: "hsl(var(--secondary-foreground))",
+        },
+        destructive: {
+          DEFAULT: "hsl(var(--destructive))",
+          foreground: "hsl(var(--destructive-foreground))",
+        },
+        muted: {
+          DEFAULT: "hsl(var(--muted))",
+          foreground: "hsl(var(--muted-foreground))",
+        },
+        accent: {
+          DEFAULT: "hsl(var(--accent))",
+          foreground: "hsl(var(--accent-foreground))",
+        },
+        popover: {
+          DEFAULT: "hsl(var(--popover))",
+          foreground: "hsl(var(--popover-foreground))",
+        },
+        card: {
+          DEFAULT: "hsl(var(--card))",
+          foreground: "hsl(var(--card-foreground))",
+        },
+      },
+      borderRadius: {
+        lg: "var(--radius)",
+        md: "calc(var(--radius) - 2px)",
+        sm: "calc(var(--radius) - 4px)",
+      },
+      keyframes: {
+        "accordion-down": {
+          from: { height: "0" },
+          to: { height: "var(--radix-accordion-content-height)" },
+        },
+        "accordion-up": {
+          from: { height: "var(--radix-accordion-content-height)" },
+          to: { height: "0" },
+        },
+      },
+      animation: {
+        "accordion-down": "accordion-down 0.2s ease-out",
+        "accordion-up": "accordion-up 0.2s ease-out",
+      },
+    },
+  },
+  plugins: [require("tailwindcss-animate")],
+} satisfies Config; 
\ No newline at end of file
Index: frontend/pos/src/components/ui/label.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/label.tsx b/frontend/pos/src/components/ui/label.tsx
new file mode 100644
--- /dev/null	(date 1750214549300)
+++ b/frontend/pos/src/components/ui/label.tsx	(date 1750214549300)
@@ -0,0 +1,24 @@
+"use client"
+
+import * as React from "react"
+import * as LabelPrimitive from "@radix-ui/react-label"
+
+import { cn } from "@/lib/utils"
+
+function Label({
+  className,
+  ...props
+}: React.ComponentProps<typeof LabelPrimitive.Root>) {
+  return (
+    <LabelPrimitive.Root
+      data-slot="label"
+      className={cn(
+        "flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export { Label }
Index: frontend/pos/src/components/ui/separator.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/separator.tsx b/frontend/pos/src/components/ui/separator.tsx
new file mode 100644
--- /dev/null	(date 1750226775633)
+++ b/frontend/pos/src/components/ui/separator.tsx	(date 1750226775633)
@@ -0,0 +1,23 @@
+import * as React from "react";
+import { cn } from "@/lib/utils";
+
+interface SeparatorProps extends React.HTMLAttributes<HTMLDivElement> {
+  orientation?: "horizontal" | "vertical";
+}
+
+const Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(
+  ({ className, orientation = "horizontal", ...props }, ref) => (
+    <div
+      ref={ref}
+      className={cn(
+        "shrink-0 bg-border",
+        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
+        className
+      )}
+      {...props}
+    />
+  )
+);
+Separator.displayName = "Separator";
+
+export { Separator }; 
\ No newline at end of file
Index: frontend/pos/pnpm-lock.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/pnpm-lock.yaml b/frontend/pos/pnpm-lock.yaml
new file mode 100644
--- /dev/null	(date 1750227195427)
+++ b/frontend/pos/pnpm-lock.yaml	(date 1750227195427)
@@ -0,0 +1,4743 @@
+lockfileVersion: '9.0'
+
+settings:
+  autoInstallPeers: true
+  excludeLinksFromLockfile: false
+
+importers:
+
+  .:
+    dependencies:
+      '@hookform/resolvers':
+        specifier: ^5.1.1
+        version: 5.1.1(react-hook-form@7.58.1(react@19.1.0))
+      '@radix-ui/react-dialog':
+        specifier: ^1.1.14
+        version: 1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-dropdown-menu':
+        specifier: ^2.1.15
+        version: 2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-label':
+        specifier: ^2.1.7
+        version: 2.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-slot':
+        specifier: ^1.2.3
+        version: 1.2.3(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-tooltip':
+        specifier: ^1.2.7
+        version: 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      class-variance-authority:
+        specifier: ^0.7.1
+        version: 0.7.1
+      clsx:
+        specifier: ^2.1.1
+        version: 2.1.1
+      dotenv-cli:
+        specifier: ^8.0.0
+        version: 8.0.0
+      lucide-react:
+        specifier: ^0.516.0
+        version: 0.516.0(react@19.1.0)
+      next:
+        specifier: 15.3.3
+        version: 15.3.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      next-themes:
+        specifier: ^0.4.6
+        version: 0.4.6(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      react:
+        specifier: ^19.0.0
+        version: 19.1.0
+      react-dom:
+        specifier: ^19.0.0
+        version: 19.1.0(react@19.1.0)
+      react-hook-form:
+        specifier: ^7.58.1
+        version: 7.58.1(react@19.1.0)
+      sonner:
+        specifier: ^2.0.5
+        version: 2.0.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      tailwind-merge:
+        specifier: ^3.3.1
+        version: 3.3.1
+      tailwindcss-animate:
+        specifier: ^1.0.7
+        version: 1.0.7(tailwindcss@4.1.10)
+      zod:
+        specifier: ^3.25.67
+        version: 3.25.67
+      zustand:
+        specifier: ^5.0.5
+        version: 5.0.5(@types/react@19.1.8)(react@19.1.0)
+    devDependencies:
+      '@eslint/eslintrc':
+        specifier: ^3
+        version: 3.3.1
+      '@tailwindcss/postcss':
+        specifier: ^4
+        version: 4.1.10
+      '@types/node':
+        specifier: ^20
+        version: 20.19.1
+      '@types/react':
+        specifier: ^19
+        version: 19.1.8
+      '@types/react-dom':
+        specifier: ^19
+        version: 19.1.6(@types/react@19.1.8)
+      eslint:
+        specifier: ^9
+        version: 9.29.0(jiti@2.4.2)
+      eslint-config-next:
+        specifier: 15.3.3
+        version: 15.3.3(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      tailwindcss:
+        specifier: ^4
+        version: 4.1.10
+      typescript:
+        specifier: ^5
+        version: 5.8.3
+
+packages:
+
+  '@alloc/quick-lru@5.2.0':
+    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
+    engines: {node: '>=10'}
+
+  '@ampproject/remapping@2.3.0':
+    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
+    engines: {node: '>=6.0.0'}
+
+  '@emnapi/core@1.4.3':
+    resolution: {integrity: sha512-4m62DuCE07lw01soJwPiBGC0nAww0Q+RY70VZ+n49yDIO13yyinhbWCeNnaob0lakDtWQzSdtNWzJeOJt2ma+g==}
+
+  '@emnapi/runtime@1.4.3':
+    resolution: {integrity: sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==}
+
+  '@emnapi/wasi-threads@1.0.2':
+    resolution: {integrity: sha512-5n3nTJblwRi8LlXkJ9eBzu+kZR8Yxcc7ubakyQTFzPMtIhFpUBRbsnc2Dv88IZDIbCDlBiWrknhB4Lsz7mg6BA==}
+
+  '@eslint-community/eslint-utils@4.7.0':
+    resolution: {integrity: sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==}
+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
+    peerDependencies:
+      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
+
+  '@eslint-community/regexpp@4.12.1':
+    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
+    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
+
+  '@eslint/config-array@0.20.1':
+    resolution: {integrity: sha512-OL0RJzC/CBzli0DrrR31qzj6d6i6Mm3HByuhflhl4LOBiWxN+3i6/t/ZQQNii4tjksXi8r2CRW1wMpWA2ULUEw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/config-helpers@0.2.3':
+    resolution: {integrity: sha512-u180qk2Um1le4yf0ruXH3PYFeEZeYC3p/4wCTKrr2U1CmGdzGi3KtY0nuPDH48UJxlKCC5RDzbcbh4X0XlqgHg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/core@0.14.0':
+    resolution: {integrity: sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/core@0.15.0':
+    resolution: {integrity: sha512-b7ePw78tEWWkpgZCDYkbqDOP8dmM6qe+AOC6iuJqlq1R/0ahMAeH3qynpnqKFGkMltrp44ohV4ubGyvLX28tzw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/eslintrc@3.3.1':
+    resolution: {integrity: sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/js@9.29.0':
+    resolution: {integrity: sha512-3PIF4cBw/y+1u2EazflInpV+lYsSG0aByVIQzAgb1m1MhHFSbqTyNqtBKHgWf/9Ykud+DhILS9EGkmekVhbKoQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/object-schema@2.1.6':
+    resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@eslint/plugin-kit@0.3.2':
+    resolution: {integrity: sha512-4SaFZCNfJqvk/kenHpI8xvN42DMaoycy4PzKc5otHxRswww1kAt82OlBuwRVLofCACCTZEcla2Ydxv8scMXaTg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@floating-ui/core@1.7.1':
+    resolution: {integrity: sha512-azI0DrjMMfIug/ExbBaeDVJXcY0a7EPvPjb2xAJPa4HeimBX+Z18HK8QQR3jb6356SnDDdxx+hinMLcJEDdOjw==}
+
+  '@floating-ui/dom@1.7.1':
+    resolution: {integrity: sha512-cwsmW/zyw5ltYTUeeYJ60CnQuPqmGwuGVhG9w0PRaRKkAyi38BT5CKrpIbb+jtahSwUl04cWzSx9ZOIxeS6RsQ==}
+
+  '@floating-ui/react-dom@2.1.3':
+    resolution: {integrity: sha512-huMBfiU9UnQ2oBwIhgzyIiSpVgvlDstU8CX0AF+wS+KzmYMs0J2a3GwuFHV1Lz+jlrQGeC1fF+Nv0QoumyV0bA==}
+    peerDependencies:
+      react: '>=16.8.0'
+      react-dom: '>=16.8.0'
+
+  '@floating-ui/utils@0.2.9':
+    resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}
+
+  '@hookform/resolvers@5.1.1':
+    resolution: {integrity: sha512-J/NVING3LMAEvexJkyTLjruSm7aOFx7QX21pzkiJfMoNG0wl5aFEjLTl7ay7IQb9EWY6AkrBy7tHL2Alijpdcg==}
+    peerDependencies:
+      react-hook-form: ^7.55.0
+
+  '@humanfs/core@0.19.1':
+    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
+    engines: {node: '>=18.18.0'}
+
+  '@humanfs/node@0.16.6':
+    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}
+    engines: {node: '>=18.18.0'}
+
+  '@humanwhocodes/module-importer@1.0.1':
+    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
+    engines: {node: '>=12.22'}
+
+  '@humanwhocodes/retry@0.3.1':
+    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}
+    engines: {node: '>=18.18'}
+
+  '@humanwhocodes/retry@0.4.3':
+    resolution: {integrity: sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==}
+    engines: {node: '>=18.18'}
+
+  '@img/sharp-darwin-arm64@0.34.2':
+    resolution: {integrity: sha512-OfXHZPppddivUJnqyKoi5YVeHRkkNE2zUFT2gbpKxp/JZCFYEYubnMg+gOp6lWfasPrTS+KPosKqdI+ELYVDtg==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@img/sharp-darwin-x64@0.34.2':
+    resolution: {integrity: sha512-dYvWqmjU9VxqXmjEtjmvHnGqF8GrVjM2Epj9rJ6BUIXvk8slvNDJbhGFvIoXzkDhrJC2jUxNLz/GUjjvSzfw+g==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [darwin]
+
+  '@img/sharp-libvips-darwin-arm64@1.1.0':
+    resolution: {integrity: sha512-HZ/JUmPwrJSoM4DIQPv/BfNh9yrOA8tlBbqbLz4JZ5uew2+o22Ik+tHQJcih7QJuSa0zo5coHTfD5J8inqj9DA==}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@img/sharp-libvips-darwin-x64@1.1.0':
+    resolution: {integrity: sha512-Xzc2ToEmHN+hfvsl9wja0RlnXEgpKNmftriQp6XzY/RaSfwD9th+MSh0WQKzUreLKKINb3afirxW7A0fz2YWuQ==}
+    cpu: [x64]
+    os: [darwin]
+
+  '@img/sharp-libvips-linux-arm64@1.1.0':
+    resolution: {integrity: sha512-IVfGJa7gjChDET1dK9SekxFFdflarnUB8PwW8aGwEoF3oAsSDuNUTYS+SKDOyOJxQyDC1aPFMuRYLoDInyV9Ew==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-arm@1.1.0':
+    resolution: {integrity: sha512-s8BAd0lwUIvYCJyRdFqvsj+BJIpDBSxs6ivrOPm/R7piTs5UIwY5OjXrP2bqXC9/moGsyRa37eYWYCOGVXxVrA==}
+    cpu: [arm]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-ppc64@1.1.0':
+    resolution: {integrity: sha512-tiXxFZFbhnkWE2LA8oQj7KYR+bWBkiV2nilRldT7bqoEZ4HiDOcePr9wVDAZPi/Id5fT1oY9iGnDq20cwUz8lQ==}
+    cpu: [ppc64]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-s390x@1.1.0':
+    resolution: {integrity: sha512-xukSwvhguw7COyzvmjydRb3x/09+21HykyapcZchiCUkTThEQEOMtBj9UhkaBRLuBrgLFzQ2wbxdeCCJW/jgJA==}
+    cpu: [s390x]
+    os: [linux]
+
+  '@img/sharp-libvips-linux-x64@1.1.0':
+    resolution: {integrity: sha512-yRj2+reB8iMg9W5sULM3S74jVS7zqSzHG3Ol/twnAAkAhnGQnpjj6e4ayUz7V+FpKypwgs82xbRdYtchTTUB+Q==}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-libvips-linuxmusl-arm64@1.1.0':
+    resolution: {integrity: sha512-jYZdG+whg0MDK+q2COKbYidaqW/WTz0cc1E+tMAusiDygrM4ypmSCjOJPmFTvHHJ8j/6cAGyeDWZOsK06tP33w==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-libvips-linuxmusl-x64@1.1.0':
+    resolution: {integrity: sha512-wK7SBdwrAiycjXdkPnGCPLjYb9lD4l6Ze2gSdAGVZrEL05AOUJESWU2lhlC+Ffn5/G+VKuSm6zzbQSzFX/P65A==}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-linux-arm64@0.34.2':
+    resolution: {integrity: sha512-D8n8wgWmPDakc83LORcfJepdOSN6MvWNzzz2ux0MnIbOqdieRZwVYY32zxVx+IFUT8er5KPcyU3XXsn+GzG/0Q==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-linux-arm@0.34.2':
+    resolution: {integrity: sha512-0DZzkvuEOqQUP9mo2kjjKNok5AmnOr1jB2XYjkaoNRwpAYMDzRmAqUIa1nRi58S2WswqSfPOWLNOr0FDT3H5RQ==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm]
+    os: [linux]
+
+  '@img/sharp-linux-s390x@0.34.2':
+    resolution: {integrity: sha512-EGZ1xwhBI7dNISwxjChqBGELCWMGDvmxZXKjQRuqMrakhO8QoMgqCrdjnAqJq/CScxfRn+Bb7suXBElKQpPDiw==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [s390x]
+    os: [linux]
+
+  '@img/sharp-linux-x64@0.34.2':
+    resolution: {integrity: sha512-sD7J+h5nFLMMmOXYH4DD9UtSNBD05tWSSdWAcEyzqW8Cn5UxXvsHAxmxSesYUsTOBmUnjtxghKDl15EvfqLFbQ==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-linuxmusl-arm64@0.34.2':
+    resolution: {integrity: sha512-NEE2vQ6wcxYav1/A22OOxoSOGiKnNmDzCYFOZ949xFmrWZOVII1Bp3NqVVpvj+3UeHMFyN5eP/V5hzViQ5CZNA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [linux]
+
+  '@img/sharp-linuxmusl-x64@0.34.2':
+    resolution: {integrity: sha512-DOYMrDm5E6/8bm/yQLCWyuDJwUnlevR8xtF8bs+gjZ7cyUNYXiSf/E8Kp0Ss5xasIaXSHzb888V1BE4i1hFhAA==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [linux]
+
+  '@img/sharp-wasm32@0.34.2':
+    resolution: {integrity: sha512-/VI4mdlJ9zkaq53MbIG6rZY+QRN3MLbR6usYlgITEzi4Rpx5S6LFKsycOQjkOGmqTNmkIdLjEvooFKwww6OpdQ==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [wasm32]
+
+  '@img/sharp-win32-arm64@0.34.2':
+    resolution: {integrity: sha512-cfP/r9FdS63VA5k0xiqaNaEoGxBg9k7uE+RQGzuK9fHt7jib4zAVVseR9LsE4gJcNWgT6APKMNnCcnyOtmSEUQ==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [arm64]
+    os: [win32]
+
+  '@img/sharp-win32-ia32@0.34.2':
+    resolution: {integrity: sha512-QLjGGvAbj0X/FXl8n1WbtQ6iVBpWU7JO94u/P2M4a8CFYsvQi4GW2mRy/JqkRx0qpBzaOdKJKw8uc930EX2AHw==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [ia32]
+    os: [win32]
+
+  '@img/sharp-win32-x64@0.34.2':
+    resolution: {integrity: sha512-aUdT6zEYtDKCaxkofmmJDJYGCf0+pJg3eU9/oBuqvEeoB9dKI6ZLc/1iLJCTuJQDO4ptntAlkUmHgGjyuobZbw==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+    cpu: [x64]
+    os: [win32]
+
+  '@isaacs/fs-minipass@4.0.1':
+    resolution: {integrity: sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==}
+    engines: {node: '>=18.0.0'}
+
+  '@jridgewell/gen-mapping@0.3.8':
+    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
+    engines: {node: '>=6.0.0'}
+
+  '@jridgewell/resolve-uri@3.1.2':
+    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
+    engines: {node: '>=6.0.0'}
+
+  '@jridgewell/set-array@1.2.1':
+    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
+    engines: {node: '>=6.0.0'}
+
+  '@jridgewell/sourcemap-codec@1.5.0':
+    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}
+
+  '@jridgewell/trace-mapping@0.3.25':
+    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}
+
+  '@napi-rs/wasm-runtime@0.2.11':
+    resolution: {integrity: sha512-9DPkXtvHydrcOsopiYpUgPHpmj0HWZKMUnL2dZqpvC42lsratuBG06V5ipyno0fUek5VlFsNQ+AcFATSrJXgMA==}
+
+  '@next/env@15.3.3':
+    resolution: {integrity: sha512-OdiMrzCl2Xi0VTjiQQUK0Xh7bJHnOuET2s+3V+Y40WJBAXrJeGA3f+I8MZJ/YQ3mVGi5XGR1L66oFlgqXhQ4Vw==}
+
+  '@next/eslint-plugin-next@15.3.3':
+    resolution: {integrity: sha512-VKZJEiEdpKkfBmcokGjHu0vGDG+8CehGs90tBEy/IDoDDKGngeyIStt2MmE5FYNyU9BhgR7tybNWTAJY/30u+Q==}
+
+  '@next/swc-darwin-arm64@15.3.3':
+    resolution: {integrity: sha512-WRJERLuH+O3oYB4yZNVahSVFmtxRNjNF1I1c34tYMoJb0Pve+7/RaLAJJizyYiFhjYNGHRAE1Ri2Fd23zgDqhg==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@next/swc-darwin-x64@15.3.3':
+    resolution: {integrity: sha512-XHdzH/yBc55lu78k/XwtuFR/ZXUTcflpRXcsu0nKmF45U96jt1tsOZhVrn5YH+paw66zOANpOnFQ9i6/j+UYvw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [darwin]
+
+  '@next/swc-linux-arm64-gnu@15.3.3':
+    resolution: {integrity: sha512-VZ3sYL2LXB8znNGcjhocikEkag/8xiLgnvQts41tq6i+wql63SMS1Q6N8RVXHw5pEUjiof+II3HkDd7GFcgkzw==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@next/swc-linux-arm64-musl@15.3.3':
+    resolution: {integrity: sha512-h6Y1fLU4RWAp1HPNJWDYBQ+e3G7sLckyBXhmH9ajn8l/RSMnhbuPBV/fXmy3muMcVwoJdHL+UtzRzs0nXOf9SA==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@next/swc-linux-x64-gnu@15.3.3':
+    resolution: {integrity: sha512-jJ8HRiF3N8Zw6hGlytCj5BiHyG/K+fnTKVDEKvUCyiQ/0r5tgwO7OgaRiOjjRoIx2vwLR+Rz8hQoPrnmFbJdfw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@next/swc-linux-x64-musl@15.3.3':
+    resolution: {integrity: sha512-HrUcTr4N+RgiiGn3jjeT6Oo208UT/7BuTr7K0mdKRBtTbT4v9zJqCDKO97DUqqoBK1qyzP1RwvrWTvU6EPh/Cw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@next/swc-win32-arm64-msvc@15.3.3':
+    resolution: {integrity: sha512-SxorONgi6K7ZUysMtRF3mIeHC5aA3IQLmKFQzU0OuhuUYwpOBc1ypaLJLP5Bf3M9k53KUUUj4vTPwzGvl/NwlQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [win32]
+
+  '@next/swc-win32-x64-msvc@15.3.3':
+    resolution: {integrity: sha512-4QZG6F8enl9/S2+yIiOiju0iCTFd93d8VC1q9LZS4p/Xuk81W2QDjCFeoogmrWWkAD59z8ZxepBQap2dKS5ruw==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [win32]
+
+  '@nodelib/fs.scandir@2.1.5':
+    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
+    engines: {node: '>= 8'}
+
+  '@nodelib/fs.stat@2.0.5':
+    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
+    engines: {node: '>= 8'}
+
+  '@nodelib/fs.walk@1.2.8':
+    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
+    engines: {node: '>= 8'}
+
+  '@nolyfill/is-core-module@1.0.39':
+    resolution: {integrity: sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==}
+    engines: {node: '>=12.4.0'}
+
+  '@radix-ui/primitive@1.1.2':
+    resolution: {integrity: sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==}
+
+  '@radix-ui/react-arrow@1.1.7':
+    resolution: {integrity: sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-collection@1.1.7':
+    resolution: {integrity: sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-compose-refs@1.1.2':
+    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-context@1.1.2':
+    resolution: {integrity: sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-dialog@1.1.14':
+    resolution: {integrity: sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-direction@1.1.1':
+    resolution: {integrity: sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-dismissable-layer@1.1.10':
+    resolution: {integrity: sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-dropdown-menu@2.1.15':
+    resolution: {integrity: sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-focus-guards@1.1.2':
+    resolution: {integrity: sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-focus-scope@1.1.7':
+    resolution: {integrity: sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-id@1.1.1':
+    resolution: {integrity: sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-label@2.1.7':
+    resolution: {integrity: sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-menu@2.1.15':
+    resolution: {integrity: sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-popper@1.2.7':
+    resolution: {integrity: sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-portal@1.1.9':
+    resolution: {integrity: sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-presence@1.1.4':
+    resolution: {integrity: sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-primitive@2.1.3':
+    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-roving-focus@1.1.10':
+    resolution: {integrity: sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-slot@1.2.3':
+    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-tooltip@1.2.7':
+    resolution: {integrity: sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/react-use-callback-ref@1.1.1':
+    resolution: {integrity: sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-use-controllable-state@1.2.2':
+    resolution: {integrity: sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-use-effect-event@0.0.2':
+    resolution: {integrity: sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-use-escape-keydown@1.1.1':
+    resolution: {integrity: sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-use-layout-effect@1.1.1':
+    resolution: {integrity: sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-use-rect@1.1.1':
+    resolution: {integrity: sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-use-size@1.1.1':
+    resolution: {integrity: sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  '@radix-ui/react-visually-hidden@1.2.3':
+    resolution: {integrity: sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==}
+    peerDependencies:
+      '@types/react': '*'
+      '@types/react-dom': '*'
+      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      '@types/react-dom':
+        optional: true
+
+  '@radix-ui/rect@1.1.1':
+    resolution: {integrity: sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==}
+
+  '@rtsao/scc@1.1.0':
+    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}
+
+  '@rushstack/eslint-patch@1.11.0':
+    resolution: {integrity: sha512-zxnHvoMQVqewTJr/W4pKjF0bMGiKJv1WX7bSrkl46Hg0QjESbzBROWK0Wg4RphzSOS5Jiy7eFimmM3UgMrMZbQ==}
+
+  '@standard-schema/utils@0.3.0':
+    resolution: {integrity: sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==}
+
+  '@swc/counter@0.1.3':
+    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}
+
+  '@swc/helpers@0.5.15':
+    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}
+
+  '@tailwindcss/node@4.1.10':
+    resolution: {integrity: sha512-2ACf1znY5fpRBwRhMgj9ZXvb2XZW8qs+oTfotJ2C5xR0/WNL7UHZ7zXl6s+rUqedL1mNi+0O+WQr5awGowS3PQ==}
+
+  '@tailwindcss/oxide-android-arm64@4.1.10':
+    resolution: {integrity: sha512-VGLazCoRQ7rtsCzThaI1UyDu/XRYVyH4/EWiaSX6tFglE+xZB5cvtC5Omt0OQ+FfiIVP98su16jDVHDEIuH4iQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [android]
+
+  '@tailwindcss/oxide-darwin-arm64@4.1.10':
+    resolution: {integrity: sha512-ZIFqvR1irX2yNjWJzKCqTCcHZbgkSkSkZKbRM3BPzhDL/18idA8uWCoopYA2CSDdSGFlDAxYdU2yBHwAwx8euQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@tailwindcss/oxide-darwin-x64@4.1.10':
+    resolution: {integrity: sha512-eCA4zbIhWUFDXoamNztmS0MjXHSEJYlvATzWnRiTqJkcUteSjO94PoRHJy1Xbwp9bptjeIxxBHh+zBWFhttbrQ==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [darwin]
+
+  '@tailwindcss/oxide-freebsd-x64@4.1.10':
+    resolution: {integrity: sha512-8/392Xu12R0cc93DpiJvNpJ4wYVSiciUlkiOHOSOQNH3adq9Gi/dtySK7dVQjXIOzlpSHjeCL89RUUI8/GTI6g==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [freebsd]
+
+  '@tailwindcss/oxide-linux-arm-gnueabihf@4.1.10':
+    resolution: {integrity: sha512-t9rhmLT6EqeuPT+MXhWhlRYIMSfh5LZ6kBrC4FS6/+M1yXwfCtp24UumgCWOAJVyjQwG+lYva6wWZxrfvB+NhQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-arm64-gnu@4.1.10':
+    resolution: {integrity: sha512-3oWrlNlxLRxXejQ8zImzrVLuZ/9Z2SeKoLhtCu0hpo38hTO2iL86eFOu4sVR8cZc6n3z7eRXXqtHJECa6mFOvA==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-arm64-musl@4.1.10':
+    resolution: {integrity: sha512-saScU0cmWvg/Ez4gUmQWr9pvY9Kssxt+Xenfx1LG7LmqjcrvBnw4r9VjkFcqmbBb7GCBwYNcZi9X3/oMda9sqQ==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-x64-gnu@4.1.10':
+    resolution: {integrity: sha512-/G3ao/ybV9YEEgAXeEg28dyH6gs1QG8tvdN9c2MNZdUXYBaIY/Gx0N6RlJzfLy/7Nkdok4kaxKPHKJUlAaoTdA==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@tailwindcss/oxide-linux-x64-musl@4.1.10':
+    resolution: {integrity: sha512-LNr7X8fTiKGRtQGOerSayc2pWJp/9ptRYAa4G+U+cjw9kJZvkopav1AQc5HHD+U364f71tZv6XamaHKgrIoVzA==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [linux]
+
+  '@tailwindcss/oxide-wasm32-wasi@4.1.10':
+    resolution: {integrity: sha512-d6ekQpopFQJAcIK2i7ZzWOYGZ+A6NzzvQ3ozBvWFdeyqfOZdYHU66g5yr+/HC4ipP1ZgWsqa80+ISNILk+ae/Q==}
+    engines: {node: '>=14.0.0'}
+    cpu: [wasm32]
+    bundledDependencies:
+      - '@napi-rs/wasm-runtime'
+      - '@emnapi/core'
+      - '@emnapi/runtime'
+      - '@tybys/wasm-util'
+      - '@emnapi/wasi-threads'
+      - tslib
+
+  '@tailwindcss/oxide-win32-arm64-msvc@4.1.10':
+    resolution: {integrity: sha512-i1Iwg9gRbwNVOCYmnigWCCgow8nDWSFmeTUU5nbNx3rqbe4p0kRbEqLwLJbYZKmSSp23g4N6rCDmm7OuPBXhDA==}
+    engines: {node: '>= 10'}
+    cpu: [arm64]
+    os: [win32]
+
+  '@tailwindcss/oxide-win32-x64-msvc@4.1.10':
+    resolution: {integrity: sha512-sGiJTjcBSfGq2DVRtaSljq5ZgZS2SDHSIfhOylkBvHVjwOsodBhnb3HdmiKkVuUGKD0I7G63abMOVaskj1KpOA==}
+    engines: {node: '>= 10'}
+    cpu: [x64]
+    os: [win32]
+
+  '@tailwindcss/oxide@4.1.10':
+    resolution: {integrity: sha512-v0C43s7Pjw+B9w21htrQwuFObSkio2aV/qPx/mhrRldbqxbWJK6KizM+q7BF1/1CmuLqZqX3CeYF7s7P9fbA8Q==}
+    engines: {node: '>= 10'}
+
+  '@tailwindcss/postcss@4.1.10':
+    resolution: {integrity: sha512-B+7r7ABZbkXJwpvt2VMnS6ujcDoR2OOcFaqrLIo1xbcdxje4Vf+VgJdBzNNbrAjBj/rLZ66/tlQ1knIGNLKOBQ==}
+
+  '@tybys/wasm-util@0.9.0':
+    resolution: {integrity: sha512-6+7nlbMVX/PVDCwaIQ8nTOPveOcFLSt8GcXdx8hD0bt39uWxYT88uXzqTd4fTvqta7oeUJqudepapKNt2DYJFw==}
+
+  '@types/estree@1.0.8':
+    resolution: {integrity: sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==}
+
+  '@types/json-schema@7.0.15':
+    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
+
+  '@types/json5@0.0.29':
+    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}
+
+  '@types/node@20.19.1':
+    resolution: {integrity: sha512-jJD50LtlD2dodAEO653i3YF04NWak6jN3ky+Ri3Em3mGR39/glWiboM/IePaRbgwSfqM1TpGXfAg8ohn/4dTgA==}
+
+  '@types/react-dom@19.1.6':
+    resolution: {integrity: sha512-4hOiT/dwO8Ko0gV1m/TJZYk3y0KBnY9vzDh7W+DH17b2HFSOGgdj33dhihPeuy3l0q23+4e+hoXHV6hCC4dCXw==}
+    peerDependencies:
+      '@types/react': ^19.0.0
+
+  '@types/react@19.1.8':
+    resolution: {integrity: sha512-AwAfQ2Wa5bCx9WP8nZL2uMZWod7J7/JSplxbTmBQ5ms6QpqNYm672H0Vu9ZVKVngQ+ii4R/byguVEUZQyeg44g==}
+
+  '@typescript-eslint/eslint-plugin@8.34.1':
+    resolution: {integrity: sha512-STXcN6ebF6li4PxwNeFnqF8/2BNDvBupf2OPx2yWNzr6mKNGF7q49VM00Pz5FaomJyqvbXpY6PhO+T9w139YEQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      '@typescript-eslint/parser': ^8.34.1
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/parser@8.34.1':
+    resolution: {integrity: sha512-4O3idHxhyzjClSMJ0a29AcoK0+YwnEqzI6oz3vlRf3xw0zbzt15MzXwItOlnr5nIth6zlY2RENLsOPvhyrKAQA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/project-service@8.34.1':
+    resolution: {integrity: sha512-nuHlOmFZfuRwLJKDGQOVc0xnQrAmuq1Mj/ISou5044y1ajGNp2BNliIqp7F2LPQ5sForz8lempMFCovfeS1XoA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/scope-manager@8.34.1':
+    resolution: {integrity: sha512-beu6o6QY4hJAgL1E8RaXNC071G4Kso2MGmJskCFQhRhg8VOH/FDbC8soP8NHN7e/Hdphwp8G8cE6OBzC8o41ZA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@typescript-eslint/tsconfig-utils@8.34.1':
+    resolution: {integrity: sha512-K4Sjdo4/xF9NEeA2khOb7Y5nY6NSXBnod87uniVYW9kHP+hNlDV8trUSFeynA2uxWam4gIWgWoygPrv9VMWrYg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/type-utils@8.34.1':
+    resolution: {integrity: sha512-Tv7tCCr6e5m8hP4+xFugcrwTOucB8lshffJ6zf1mF1TbU67R+ntCc6DzLNKM+s/uzDyv8gLq7tufaAhIBYeV8g==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/types@8.34.1':
+    resolution: {integrity: sha512-rjLVbmE7HR18kDsjNIZQHxmv9RZwlgzavryL5Lnj2ujIRTeXlKtILHgRNmQ3j4daw7zd+mQgy+uyt6Zo6I0IGA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@typescript-eslint/typescript-estree@8.34.1':
+    resolution: {integrity: sha512-rjCNqqYPuMUF5ODD+hWBNmOitjBWghkGKJg6hiCHzUvXRy6rK22Jd3rwbP2Xi+R7oYVvIKhokHVhH41BxPV5mA==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/utils@8.34.1':
+    resolution: {integrity: sha512-mqOwUdZ3KjtGk7xJJnLbHxTuWVn3GO2WZZuM+Slhkun4+qthLdXx32C8xIXbO1kfCECb3jIs3eoxK3eryk7aoQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    peerDependencies:
+      eslint: ^8.57.0 || ^9.0.0
+      typescript: '>=4.8.4 <5.9.0'
+
+  '@typescript-eslint/visitor-keys@8.34.1':
+    resolution: {integrity: sha512-xoh5rJ+tgsRKoXnkBPFRLZ7rjKM0AfVbC68UZ/ECXoDbfggb9RbEySN359acY1vS3qZ0jVTVWzbtfapwm5ztxw==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  '@unrs/resolver-binding-android-arm-eabi@1.9.0':
+    resolution: {integrity: sha512-h1T2c2Di49ekF2TE8ZCoJkb+jwETKUIPDJ/nO3tJBKlLFPu+fyd93f0rGP/BvArKx2k2HlRM4kqkNarj3dvZlg==}
+    cpu: [arm]
+    os: [android]
+
+  '@unrs/resolver-binding-android-arm64@1.9.0':
+    resolution: {integrity: sha512-sG1NHtgXtX8owEkJ11yn34vt0Xqzi3k9TJ8zppDmyG8GZV4kVWw44FHwKwHeEFl07uKPeC4ZoyuQaGh5ruJYPA==}
+    cpu: [arm64]
+    os: [android]
+
+  '@unrs/resolver-binding-darwin-arm64@1.9.0':
+    resolution: {integrity: sha512-nJ9z47kfFnCxN1z/oYZS7HSNsFh43y2asePzTEZpEvK7kGyuShSl3RRXnm/1QaqFL+iP+BjMwuB+DYUymOkA5A==}
+    cpu: [arm64]
+    os: [darwin]
+
+  '@unrs/resolver-binding-darwin-x64@1.9.0':
+    resolution: {integrity: sha512-TK+UA1TTa0qS53rjWn7cVlEKVGz2B6JYe0C++TdQjvWYIyx83ruwh0wd4LRxYBM5HeuAzXcylA9BH2trARXJTw==}
+    cpu: [x64]
+    os: [darwin]
+
+  '@unrs/resolver-binding-freebsd-x64@1.9.0':
+    resolution: {integrity: sha512-6uZwzMRFcD7CcCd0vz3Hp+9qIL2jseE/bx3ZjaLwn8t714nYGwiE84WpaMCYjU+IQET8Vu/+BNAGtYD7BG/0yA==}
+    cpu: [x64]
+    os: [freebsd]
+
+  '@unrs/resolver-binding-linux-arm-gnueabihf@1.9.0':
+    resolution: {integrity: sha512-bPUBksQfrgcfv2+mm+AZinaKq8LCFvt5PThYqRotqSuuZK1TVKkhbVMS/jvSRfYl7jr3AoZLYbDkItxgqMKRkg==}
+    cpu: [arm]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-arm-musleabihf@1.9.0':
+    resolution: {integrity: sha512-uT6E7UBIrTdCsFQ+y0tQd3g5oudmrS/hds5pbU3h4s2t/1vsGWbbSKhBSCD9mcqaqkBwoqlECpUrRJCmldl8PA==}
+    cpu: [arm]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-arm64-gnu@1.9.0':
+    resolution: {integrity: sha512-vdqBh911wc5awE2bX2zx3eflbyv8U9xbE/jVKAm425eRoOVv/VseGZsqi3A3SykckSpF4wSROkbQPvbQFn8EsA==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-arm64-musl@1.9.0':
+    resolution: {integrity: sha512-/8JFZ/SnuDr1lLEVsxsuVwrsGquTvT51RZGvyDB/dOK3oYK2UqeXzgeyq6Otp8FZXQcEYqJwxb9v+gtdXn03eQ==}
+    cpu: [arm64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-ppc64-gnu@1.9.0':
+    resolution: {integrity: sha512-FkJjybtrl+rajTw4loI3L6YqSOpeZfDls4SstL/5lsP2bka9TiHUjgMBjygeZEis1oC8LfJTS8FSgpKPaQx2tQ==}
+    cpu: [ppc64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-riscv64-gnu@1.9.0':
+    resolution: {integrity: sha512-w/NZfHNeDusbqSZ8r/hp8iL4S39h4+vQMc9/vvzuIKMWKppyUGKm3IST0Qv0aOZ1rzIbl9SrDeIqK86ZpUK37w==}
+    cpu: [riscv64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-riscv64-musl@1.9.0':
+    resolution: {integrity: sha512-bEPBosut8/8KQbUixPry8zg/fOzVOWyvwzOfz0C0Rw6dp+wIBseyiHKjkcSyZKv/98edrbMknBaMNJfA/UEdqw==}
+    cpu: [riscv64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-s390x-gnu@1.9.0':
+    resolution: {integrity: sha512-LDtMT7moE3gK753gG4pc31AAqGUC86j3AplaFusc717EUGF9ZFJ356sdQzzZzkBk1XzMdxFyZ4f/i35NKM/lFA==}
+    cpu: [s390x]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-x64-gnu@1.9.0':
+    resolution: {integrity: sha512-WmFd5KINHIXj8o1mPaT8QRjA9HgSXhN1gl9Da4IZihARihEnOylu4co7i/yeaIpcfsI6sYs33cNZKyHYDh0lrA==}
+    cpu: [x64]
+    os: [linux]
+
+  '@unrs/resolver-binding-linux-x64-musl@1.9.0':
+    resolution: {integrity: sha512-CYuXbANW+WgzVRIl8/QvZmDaZxrqvOldOwlbUjIM4pQ46FJ0W5cinJ/Ghwa/Ng1ZPMJMk1VFdsD/XwmCGIXBWg==}
+    cpu: [x64]
+    os: [linux]
+
+  '@unrs/resolver-binding-wasm32-wasi@1.9.0':
+    resolution: {integrity: sha512-6Rp2WH0OoitMYR57Z6VE8Y6corX8C6QEMWLgOV6qXiJIeZ1F9WGXY/yQ8yDC4iTraotyLOeJ2Asea0urWj2fKQ==}
+    engines: {node: '>=14.0.0'}
+    cpu: [wasm32]
+
+  '@unrs/resolver-binding-win32-arm64-msvc@1.9.0':
+    resolution: {integrity: sha512-rknkrTRuvujprrbPmGeHi8wYWxmNVlBoNW8+4XF2hXUnASOjmuC9FNF1tGbDiRQWn264q9U/oGtixyO3BT8adQ==}
+    cpu: [arm64]
+    os: [win32]
+
+  '@unrs/resolver-binding-win32-ia32-msvc@1.9.0':
+    resolution: {integrity: sha512-Ceymm+iBl+bgAICtgiHyMLz6hjxmLJKqBim8tDzpX61wpZOx2bPK6Gjuor7I2RiUynVjvvkoRIkrPyMwzBzF3A==}
+    cpu: [ia32]
+    os: [win32]
+
+  '@unrs/resolver-binding-win32-x64-msvc@1.9.0':
+    resolution: {integrity: sha512-k59o9ZyeyS0hAlcaKFezYSH2agQeRFEB7KoQLXl3Nb3rgkqT1NY9Vwy+SqODiLmYnEjxWJVRE/yq2jFVqdIxZw==}
+    cpu: [x64]
+    os: [win32]
+
+  acorn-jsx@5.3.2:
+    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
+    peerDependencies:
+      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
+
+  acorn@8.15.0:
+    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}
+    engines: {node: '>=0.4.0'}
+    hasBin: true
+
+  ajv@6.12.6:
+    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
+
+  ansi-styles@4.3.0:
+    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
+    engines: {node: '>=8'}
+
+  argparse@2.0.1:
+    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}
+
+  aria-hidden@1.2.6:
+    resolution: {integrity: sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==}
+    engines: {node: '>=10'}
+
+  aria-query@5.3.2:
+    resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}
+    engines: {node: '>= 0.4'}
+
+  array-buffer-byte-length@1.0.2:
+    resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}
+    engines: {node: '>= 0.4'}
+
+  array-includes@3.1.9:
+    resolution: {integrity: sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.findlast@1.2.5:
+    resolution: {integrity: sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.findlastindex@1.2.6:
+    resolution: {integrity: sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.flat@1.3.3:
+    resolution: {integrity: sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.flatmap@1.3.3:
+    resolution: {integrity: sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==}
+    engines: {node: '>= 0.4'}
+
+  array.prototype.tosorted@1.1.4:
+    resolution: {integrity: sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==}
+    engines: {node: '>= 0.4'}
+
+  arraybuffer.prototype.slice@1.0.4:
+    resolution: {integrity: sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==}
+    engines: {node: '>= 0.4'}
+
+  ast-types-flow@0.0.8:
+    resolution: {integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==}
+
+  async-function@1.0.0:
+    resolution: {integrity: sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==}
+    engines: {node: '>= 0.4'}
+
+  available-typed-arrays@1.0.7:
+    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
+    engines: {node: '>= 0.4'}
+
+  axe-core@4.10.3:
+    resolution: {integrity: sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==}
+    engines: {node: '>=4'}
+
+  axobject-query@4.1.0:
+    resolution: {integrity: sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==}
+    engines: {node: '>= 0.4'}
+
+  balanced-match@1.0.2:
+    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
+
+  brace-expansion@1.1.12:
+    resolution: {integrity: sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==}
+
+  brace-expansion@2.0.2:
+    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}
+
+  braces@3.0.3:
+    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
+    engines: {node: '>=8'}
+
+  busboy@1.6.0:
+    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
+    engines: {node: '>=10.16.0'}
+
+  call-bind-apply-helpers@1.0.2:
+    resolution: {integrity: sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==}
+    engines: {node: '>= 0.4'}
+
+  call-bind@1.0.8:
+    resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
+    engines: {node: '>= 0.4'}
+
+  call-bound@1.0.4:
+    resolution: {integrity: sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==}
+    engines: {node: '>= 0.4'}
+
+  callsites@3.1.0:
+    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
+    engines: {node: '>=6'}
+
+  caniuse-lite@1.0.30001723:
+    resolution: {integrity: sha512-1R/elMjtehrFejxwmexeXAtae5UO9iSyFn6G/I806CYC/BLyyBk1EPhrKBkWhy6wM6Xnm47dSJQec+tLJ39WHw==}
+
+  chalk@4.1.2:
+    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
+    engines: {node: '>=10'}
+
+  chownr@3.0.0:
+    resolution: {integrity: sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==}
+    engines: {node: '>=18'}
+
+  class-variance-authority@0.7.1:
+    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}
+
+  client-only@0.0.1:
+    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}
+
+  clsx@2.1.1:
+    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
+    engines: {node: '>=6'}
+
+  color-convert@2.0.1:
+    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
+    engines: {node: '>=7.0.0'}
+
+  color-name@1.1.4:
+    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
+
+  color-string@1.9.1:
+    resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}
+
+  color@4.2.3:
+    resolution: {integrity: sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==}
+    engines: {node: '>=12.5.0'}
+
+  concat-map@0.0.1:
+    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
+
+  cross-spawn@7.0.6:
+    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
+    engines: {node: '>= 8'}
+
+  csstype@3.1.3:
+    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
+
+  damerau-levenshtein@1.0.8:
+    resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}
+
+  data-view-buffer@1.0.2:
+    resolution: {integrity: sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==}
+    engines: {node: '>= 0.4'}
+
+  data-view-byte-length@1.0.2:
+    resolution: {integrity: sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==}
+    engines: {node: '>= 0.4'}
+
+  data-view-byte-offset@1.0.1:
+    resolution: {integrity: sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==}
+    engines: {node: '>= 0.4'}
+
+  debug@3.2.7:
+    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}
+    peerDependencies:
+      supports-color: '*'
+    peerDependenciesMeta:
+      supports-color:
+        optional: true
+
+  debug@4.4.1:
+    resolution: {integrity: sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==}
+    engines: {node: '>=6.0'}
+    peerDependencies:
+      supports-color: '*'
+    peerDependenciesMeta:
+      supports-color:
+        optional: true
+
+  deep-is@0.1.4:
+    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
+
+  define-data-property@1.1.4:
+    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
+    engines: {node: '>= 0.4'}
+
+  define-properties@1.2.1:
+    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
+    engines: {node: '>= 0.4'}
+
+  detect-libc@2.0.4:
+    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}
+    engines: {node: '>=8'}
+
+  detect-node-es@1.1.0:
+    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}
+
+  doctrine@2.1.0:
+    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}
+    engines: {node: '>=0.10.0'}
+
+  dotenv-cli@8.0.0:
+    resolution: {integrity: sha512-aLqYbK7xKOiTMIRf1lDPbI+Y+Ip/wo5k3eyp6ePysVaSqbyxjyK3dK35BTxG+rmd7djf5q2UPs4noPNH+cj0Qw==}
+    hasBin: true
+
+  dotenv-expand@10.0.0:
+    resolution: {integrity: sha512-GopVGCpVS1UKH75VKHGuQFqS1Gusej0z4FyQkPdwjil2gNIv+LNsqBlboOzpJFZKVT95GkCyWJbBSdFEFUWI2A==}
+    engines: {node: '>=12'}
+
+  dotenv@16.5.0:
+    resolution: {integrity: sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==}
+    engines: {node: '>=12'}
+
+  dunder-proto@1.0.1:
+    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
+    engines: {node: '>= 0.4'}
+
+  emoji-regex@9.2.2:
+    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
+
+  enhanced-resolve@5.18.1:
+    resolution: {integrity: sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==}
+    engines: {node: '>=10.13.0'}
+
+  es-abstract@1.24.0:
+    resolution: {integrity: sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==}
+    engines: {node: '>= 0.4'}
+
+  es-define-property@1.0.1:
+    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
+    engines: {node: '>= 0.4'}
+
+  es-errors@1.3.0:
+    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
+    engines: {node: '>= 0.4'}
+
+  es-iterator-helpers@1.2.1:
+    resolution: {integrity: sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==}
+    engines: {node: '>= 0.4'}
+
+  es-object-atoms@1.1.1:
+    resolution: {integrity: sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==}
+    engines: {node: '>= 0.4'}
+
+  es-set-tostringtag@2.1.0:
+    resolution: {integrity: sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==}
+    engines: {node: '>= 0.4'}
+
+  es-shim-unscopables@1.1.0:
+    resolution: {integrity: sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==}
+    engines: {node: '>= 0.4'}
+
+  es-to-primitive@1.3.0:
+    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}
+    engines: {node: '>= 0.4'}
+
+  escape-string-regexp@4.0.0:
+    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
+    engines: {node: '>=10'}
+
+  eslint-config-next@15.3.3:
+    resolution: {integrity: sha512-QJLv/Ouk2vZnxL4b67njJwTLjTf7uZRltI0LL4GERYR4qMF5z08+gxkfODAeaK7TiC6o+cER91bDaEnwrTWV6Q==}
+    peerDependencies:
+      eslint: ^7.23.0 || ^8.0.0 || ^9.0.0
+      typescript: '>=3.3.1'
+    peerDependenciesMeta:
+      typescript:
+        optional: true
+
+  eslint-import-resolver-node@0.3.9:
+    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}
+
+  eslint-import-resolver-typescript@3.10.1:
+    resolution: {integrity: sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==}
+    engines: {node: ^14.18.0 || >=16.0.0}
+    peerDependencies:
+      eslint: '*'
+      eslint-plugin-import: '*'
+      eslint-plugin-import-x: '*'
+    peerDependenciesMeta:
+      eslint-plugin-import:
+        optional: true
+      eslint-plugin-import-x:
+        optional: true
+
+  eslint-module-utils@2.12.0:
+    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}
+    engines: {node: '>=4'}
+    peerDependencies:
+      '@typescript-eslint/parser': '*'
+      eslint: '*'
+      eslint-import-resolver-node: '*'
+      eslint-import-resolver-typescript: '*'
+      eslint-import-resolver-webpack: '*'
+    peerDependenciesMeta:
+      '@typescript-eslint/parser':
+        optional: true
+      eslint:
+        optional: true
+      eslint-import-resolver-node:
+        optional: true
+      eslint-import-resolver-typescript:
+        optional: true
+      eslint-import-resolver-webpack:
+        optional: true
+
+  eslint-plugin-import@2.31.0:
+    resolution: {integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==}
+    engines: {node: '>=4'}
+    peerDependencies:
+      '@typescript-eslint/parser': '*'
+      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9
+    peerDependenciesMeta:
+      '@typescript-eslint/parser':
+        optional: true
+
+  eslint-plugin-jsx-a11y@6.10.2:
+    resolution: {integrity: sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==}
+    engines: {node: '>=4.0'}
+    peerDependencies:
+      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9
+
+  eslint-plugin-react-hooks@5.2.0:
+    resolution: {integrity: sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0
+
+  eslint-plugin-react@7.37.5:
+    resolution: {integrity: sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==}
+    engines: {node: '>=4'}
+    peerDependencies:
+      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7
+
+  eslint-scope@8.4.0:
+    resolution: {integrity: sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  eslint-visitor-keys@3.4.3:
+    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
+
+  eslint-visitor-keys@4.2.1:
+    resolution: {integrity: sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  eslint@9.29.0:
+    resolution: {integrity: sha512-GsGizj2Y1rCWDu6XoEekL3RLilp0voSePurjZIkxL3wlm5o5EC9VpgaP7lrCvjnkuLvzFBQWB3vWB3K5KQTveQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    hasBin: true
+    peerDependencies:
+      jiti: '*'
+    peerDependenciesMeta:
+      jiti:
+        optional: true
+
+  espree@10.4.0:
+    resolution: {integrity: sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==}
+    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+
+  esquery@1.6.0:
+    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
+    engines: {node: '>=0.10'}
+
+  esrecurse@4.3.0:
+    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
+    engines: {node: '>=4.0'}
+
+  estraverse@5.3.0:
+    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
+    engines: {node: '>=4.0'}
+
+  esutils@2.0.3:
+    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
+    engines: {node: '>=0.10.0'}
+
+  fast-deep-equal@3.1.3:
+    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
+
+  fast-glob@3.3.1:
+    resolution: {integrity: sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==}
+    engines: {node: '>=8.6.0'}
+
+  fast-glob@3.3.3:
+    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
+    engines: {node: '>=8.6.0'}
+
+  fast-json-stable-stringify@2.1.0:
+    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
+
+  fast-levenshtein@2.0.6:
+    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
+
+  fastq@1.19.1:
+    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}
+
+  fdir@6.4.6:
+    resolution: {integrity: sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==}
+    peerDependencies:
+      picomatch: ^3 || ^4
+    peerDependenciesMeta:
+      picomatch:
+        optional: true
+
+  file-entry-cache@8.0.0:
+    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}
+    engines: {node: '>=16.0.0'}
+
+  fill-range@7.1.1:
+    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
+    engines: {node: '>=8'}
+
+  find-up@5.0.0:
+    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
+    engines: {node: '>=10'}
+
+  flat-cache@4.0.1:
+    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}
+    engines: {node: '>=16'}
+
+  flatted@3.3.3:
+    resolution: {integrity: sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==}
+
+  for-each@0.3.5:
+    resolution: {integrity: sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==}
+    engines: {node: '>= 0.4'}
+
+  function-bind@1.1.2:
+    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
+
+  function.prototype.name@1.1.8:
+    resolution: {integrity: sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==}
+    engines: {node: '>= 0.4'}
+
+  functions-have-names@1.2.3:
+    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
+
+  get-intrinsic@1.3.0:
+    resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}
+    engines: {node: '>= 0.4'}
+
+  get-nonce@1.0.1:
+    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}
+    engines: {node: '>=6'}
+
+  get-proto@1.0.1:
+    resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
+    engines: {node: '>= 0.4'}
+
+  get-symbol-description@1.1.0:
+    resolution: {integrity: sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==}
+    engines: {node: '>= 0.4'}
+
+  get-tsconfig@4.10.1:
+    resolution: {integrity: sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==}
+
+  glob-parent@5.1.2:
+    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
+    engines: {node: '>= 6'}
+
+  glob-parent@6.0.2:
+    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
+    engines: {node: '>=10.13.0'}
+
+  globals@14.0.0:
+    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}
+    engines: {node: '>=18'}
+
+  globalthis@1.0.4:
+    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}
+    engines: {node: '>= 0.4'}
+
+  gopd@1.2.0:
+    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
+    engines: {node: '>= 0.4'}
+
+  graceful-fs@4.2.11:
+    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
+
+  graphemer@1.4.0:
+    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}
+
+  has-bigints@1.1.0:
+    resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}
+    engines: {node: '>= 0.4'}
+
+  has-flag@4.0.0:
+    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
+    engines: {node: '>=8'}
+
+  has-property-descriptors@1.0.2:
+    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
+
+  has-proto@1.2.0:
+    resolution: {integrity: sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==}
+    engines: {node: '>= 0.4'}
+
+  has-symbols@1.1.0:
+    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
+    engines: {node: '>= 0.4'}
+
+  has-tostringtag@1.0.2:
+    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
+    engines: {node: '>= 0.4'}
+
+  hasown@2.0.2:
+    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
+    engines: {node: '>= 0.4'}
+
+  ignore@5.3.2:
+    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
+    engines: {node: '>= 4'}
+
+  ignore@7.0.5:
+    resolution: {integrity: sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==}
+    engines: {node: '>= 4'}
+
+  import-fresh@3.3.1:
+    resolution: {integrity: sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==}
+    engines: {node: '>=6'}
+
+  imurmurhash@0.1.4:
+    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
+    engines: {node: '>=0.8.19'}
+
+  internal-slot@1.1.0:
+    resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
+    engines: {node: '>= 0.4'}
+
+  is-array-buffer@3.0.5:
+    resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
+    engines: {node: '>= 0.4'}
+
+  is-arrayish@0.3.2:
+    resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}
+
+  is-async-function@2.1.1:
+    resolution: {integrity: sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==}
+    engines: {node: '>= 0.4'}
+
+  is-bigint@1.1.0:
+    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
+    engines: {node: '>= 0.4'}
+
+  is-boolean-object@1.2.2:
+    resolution: {integrity: sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==}
+    engines: {node: '>= 0.4'}
+
+  is-bun-module@2.0.0:
+    resolution: {integrity: sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==}
+
+  is-callable@1.2.7:
+    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
+    engines: {node: '>= 0.4'}
+
+  is-core-module@2.16.1:
+    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
+    engines: {node: '>= 0.4'}
+
+  is-data-view@1.0.2:
+    resolution: {integrity: sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==}
+    engines: {node: '>= 0.4'}
+
+  is-date-object@1.1.0:
+    resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}
+    engines: {node: '>= 0.4'}
+
+  is-extglob@2.1.1:
+    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
+    engines: {node: '>=0.10.0'}
+
+  is-finalizationregistry@1.1.1:
+    resolution: {integrity: sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==}
+    engines: {node: '>= 0.4'}
+
+  is-generator-function@1.1.0:
+    resolution: {integrity: sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==}
+    engines: {node: '>= 0.4'}
+
+  is-glob@4.0.3:
+    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
+    engines: {node: '>=0.10.0'}
+
+  is-map@2.0.3:
+    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
+    engines: {node: '>= 0.4'}
+
+  is-negative-zero@2.0.3:
+    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}
+    engines: {node: '>= 0.4'}
+
+  is-number-object@1.1.1:
+    resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}
+    engines: {node: '>= 0.4'}
+
+  is-number@7.0.0:
+    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
+    engines: {node: '>=0.12.0'}
+
+  is-regex@1.2.1:
+    resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
+    engines: {node: '>= 0.4'}
+
+  is-set@2.0.3:
+    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
+    engines: {node: '>= 0.4'}
+
+  is-shared-array-buffer@1.0.4:
+    resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}
+    engines: {node: '>= 0.4'}
+
+  is-string@1.1.1:
+    resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}
+    engines: {node: '>= 0.4'}
+
+  is-symbol@1.1.1:
+    resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}
+    engines: {node: '>= 0.4'}
+
+  is-typed-array@1.1.15:
+    resolution: {integrity: sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==}
+    engines: {node: '>= 0.4'}
+
+  is-weakmap@2.0.2:
+    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
+    engines: {node: '>= 0.4'}
+
+  is-weakref@1.1.1:
+    resolution: {integrity: sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==}
+    engines: {node: '>= 0.4'}
+
+  is-weakset@2.0.4:
+    resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}
+    engines: {node: '>= 0.4'}
+
+  isarray@2.0.5:
+    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
+
+  isexe@2.0.0:
+    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
+
+  iterator.prototype@1.1.5:
+    resolution: {integrity: sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==}
+    engines: {node: '>= 0.4'}
+
+  jiti@2.4.2:
+    resolution: {integrity: sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==}
+    hasBin: true
+
+  js-tokens@4.0.0:
+    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}
+
+  js-yaml@4.1.0:
+    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
+    hasBin: true
+
+  json-buffer@3.0.1:
+    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
+
+  json-schema-traverse@0.4.1:
+    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
+
+  json-stable-stringify-without-jsonify@1.0.1:
+    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
+
+  json5@1.0.2:
+    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}
+    hasBin: true
+
+  jsx-ast-utils@3.3.5:
+    resolution: {integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==}
+    engines: {node: '>=4.0'}
+
+  keyv@4.5.4:
+    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
+
+  language-subtag-registry@0.3.23:
+    resolution: {integrity: sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==}
+
+  language-tags@1.0.9:
+    resolution: {integrity: sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==}
+    engines: {node: '>=0.10'}
+
+  levn@0.4.1:
+    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
+    engines: {node: '>= 0.8.0'}
+
+  lightningcss-darwin-arm64@1.30.1:
+    resolution: {integrity: sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [darwin]
+
+  lightningcss-darwin-x64@1.30.1:
+    resolution: {integrity: sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [darwin]
+
+  lightningcss-freebsd-x64@1.30.1:
+    resolution: {integrity: sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [freebsd]
+
+  lightningcss-linux-arm-gnueabihf@1.30.1:
+    resolution: {integrity: sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm]
+    os: [linux]
+
+  lightningcss-linux-arm64-gnu@1.30.1:
+    resolution: {integrity: sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [linux]
+
+  lightningcss-linux-arm64-musl@1.30.1:
+    resolution: {integrity: sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [linux]
+
+  lightningcss-linux-x64-gnu@1.30.1:
+    resolution: {integrity: sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [linux]
+
+  lightningcss-linux-x64-musl@1.30.1:
+    resolution: {integrity: sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [linux]
+
+  lightningcss-win32-arm64-msvc@1.30.1:
+    resolution: {integrity: sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [arm64]
+    os: [win32]
+
+  lightningcss-win32-x64-msvc@1.30.1:
+    resolution: {integrity: sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==}
+    engines: {node: '>= 12.0.0'}
+    cpu: [x64]
+    os: [win32]
+
+  lightningcss@1.30.1:
+    resolution: {integrity: sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==}
+    engines: {node: '>= 12.0.0'}
+
+  locate-path@6.0.0:
+    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
+    engines: {node: '>=10'}
+
+  lodash.merge@4.6.2:
+    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
+
+  loose-envify@1.4.0:
+    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
+    hasBin: true
+
+  lucide-react@0.516.0:
+    resolution: {integrity: sha512-aybBJzLHcw1CIn3rUcRkztB37dsJATtpffLNX+0/w+ws2p21nYIlOwX/B5fqxq8F/BjqVemnJX8chKwRidvROg==}
+    peerDependencies:
+      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0
+
+  magic-string@0.30.17:
+    resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}
+
+  math-intrinsics@1.1.0:
+    resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
+    engines: {node: '>= 0.4'}
+
+  merge2@1.4.1:
+    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
+    engines: {node: '>= 8'}
+
+  micromatch@4.0.8:
+    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
+    engines: {node: '>=8.6'}
+
+  minimatch@3.1.2:
+    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
+
+  minimatch@9.0.5:
+    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
+    engines: {node: '>=16 || 14 >=14.17'}
+
+  minimist@1.2.8:
+    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
+
+  minipass@7.1.2:
+    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
+    engines: {node: '>=16 || 14 >=14.17'}
+
+  minizlib@3.0.2:
+    resolution: {integrity: sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==}
+    engines: {node: '>= 18'}
+
+  mkdirp@3.0.1:
+    resolution: {integrity: sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==}
+    engines: {node: '>=10'}
+    hasBin: true
+
+  ms@2.1.3:
+    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
+
+  nanoid@3.3.11:
+    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}
+    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
+    hasBin: true
+
+  napi-postinstall@0.2.4:
+    resolution: {integrity: sha512-ZEzHJwBhZ8qQSbknHqYcdtQVr8zUgGyM/q6h6qAyhtyVMNrSgDhrC4disf03dYW0e+czXyLnZINnCTEkWy0eJg==}
+    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}
+    hasBin: true
+
+  natural-compare@1.4.0:
+    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
+
+  next-themes@0.4.6:
+    resolution: {integrity: sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==}
+    peerDependencies:
+      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc
+      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc
+
+  next@15.3.3:
+    resolution: {integrity: sha512-JqNj29hHNmCLtNvd090SyRbXJiivQ+58XjCcrC50Crb5g5u2zi7Y2YivbsEfzk6AtVI80akdOQbaMZwWB1Hthw==}
+    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}
+    hasBin: true
+    peerDependencies:
+      '@opentelemetry/api': ^1.1.0
+      '@playwright/test': ^1.41.2
+      babel-plugin-react-compiler: '*'
+      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0
+      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0
+      sass: ^1.3.0
+    peerDependenciesMeta:
+      '@opentelemetry/api':
+        optional: true
+      '@playwright/test':
+        optional: true
+      babel-plugin-react-compiler:
+        optional: true
+      sass:
+        optional: true
+
+  object-assign@4.1.1:
+    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
+    engines: {node: '>=0.10.0'}
+
+  object-inspect@1.13.4:
+    resolution: {integrity: sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==}
+    engines: {node: '>= 0.4'}
+
+  object-keys@1.1.1:
+    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
+    engines: {node: '>= 0.4'}
+
+  object.assign@4.1.7:
+    resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
+    engines: {node: '>= 0.4'}
+
+  object.entries@1.1.9:
+    resolution: {integrity: sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==}
+    engines: {node: '>= 0.4'}
+
+  object.fromentries@2.0.8:
+    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}
+    engines: {node: '>= 0.4'}
+
+  object.groupby@1.0.3:
+    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}
+    engines: {node: '>= 0.4'}
+
+  object.values@1.2.1:
+    resolution: {integrity: sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==}
+    engines: {node: '>= 0.4'}
+
+  optionator@0.9.4:
+    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
+    engines: {node: '>= 0.8.0'}
+
+  own-keys@1.0.1:
+    resolution: {integrity: sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==}
+    engines: {node: '>= 0.4'}
+
+  p-limit@3.1.0:
+    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
+    engines: {node: '>=10'}
+
+  p-locate@5.0.0:
+    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
+    engines: {node: '>=10'}
+
+  parent-module@1.0.1:
+    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
+    engines: {node: '>=6'}
+
+  path-exists@4.0.0:
+    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
+    engines: {node: '>=8'}
+
+  path-key@3.1.1:
+    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
+    engines: {node: '>=8'}
+
+  path-parse@1.0.7:
+    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
+
+  picocolors@1.1.1:
+    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}
+
+  picomatch@2.3.1:
+    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
+    engines: {node: '>=8.6'}
+
+  picomatch@4.0.2:
+    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
+    engines: {node: '>=12'}
+
+  possible-typed-array-names@1.1.0:
+    resolution: {integrity: sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==}
+    engines: {node: '>= 0.4'}
+
+  postcss@8.4.31:
+    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}
+    engines: {node: ^10 || ^12 || >=14}
+
+  postcss@8.5.6:
+    resolution: {integrity: sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==}
+    engines: {node: ^10 || ^12 || >=14}
+
+  prelude-ls@1.2.1:
+    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
+    engines: {node: '>= 0.8.0'}
+
+  prop-types@15.8.1:
+    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
+
+  punycode@2.3.1:
+    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
+    engines: {node: '>=6'}
+
+  queue-microtask@1.2.3:
+    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
+
+  react-dom@19.1.0:
+    resolution: {integrity: sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==}
+    peerDependencies:
+      react: ^19.1.0
+
+  react-hook-form@7.58.1:
+    resolution: {integrity: sha512-Lml/KZYEEFfPhUVgE0RdCVpnC4yhW+PndRhbiTtdvSlQTL8IfVR+iQkBjLIvmmc6+GGoVeM11z37ktKFPAb0FA==}
+    engines: {node: '>=18.0.0'}
+    peerDependencies:
+      react: ^16.8.0 || ^17 || ^18 || ^19
+
+  react-is@16.13.1:
+    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
+
+  react-remove-scroll-bar@2.3.8:
+    resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  react-remove-scroll@2.7.1:
+    resolution: {integrity: sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  react-style-singleton@2.2.3:
+    resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  react@19.1.0:
+    resolution: {integrity: sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==}
+    engines: {node: '>=0.10.0'}
+
+  reflect.getprototypeof@1.0.10:
+    resolution: {integrity: sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==}
+    engines: {node: '>= 0.4'}
+
+  regexp.prototype.flags@1.5.4:
+    resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
+    engines: {node: '>= 0.4'}
+
+  resolve-from@4.0.0:
+    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
+    engines: {node: '>=4'}
+
+  resolve-pkg-maps@1.0.0:
+    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
+
+  resolve@1.22.10:
+    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
+    engines: {node: '>= 0.4'}
+    hasBin: true
+
+  resolve@2.0.0-next.5:
+    resolution: {integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==}
+    hasBin: true
+
+  reusify@1.1.0:
+    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}
+    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
+
+  run-parallel@1.2.0:
+    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
+
+  safe-array-concat@1.1.3:
+    resolution: {integrity: sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==}
+    engines: {node: '>=0.4'}
+
+  safe-push-apply@1.0.0:
+    resolution: {integrity: sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==}
+    engines: {node: '>= 0.4'}
+
+  safe-regex-test@1.1.0:
+    resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
+    engines: {node: '>= 0.4'}
+
+  scheduler@0.26.0:
+    resolution: {integrity: sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==}
+
+  semver@6.3.1:
+    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
+    hasBin: true
+
+  semver@7.7.2:
+    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}
+    engines: {node: '>=10'}
+    hasBin: true
+
+  set-function-length@1.2.2:
+    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
+    engines: {node: '>= 0.4'}
+
+  set-function-name@2.0.2:
+    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
+    engines: {node: '>= 0.4'}
+
+  set-proto@1.0.0:
+    resolution: {integrity: sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==}
+    engines: {node: '>= 0.4'}
+
+  sharp@0.34.2:
+    resolution: {integrity: sha512-lszvBmB9QURERtyKT2bNmsgxXK0ShJrL/fvqlonCo7e6xBF8nT8xU6pW+PMIbLsz0RxQk3rgH9kd8UmvOzlMJg==}
+    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
+
+  shebang-command@2.0.0:
+    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
+    engines: {node: '>=8'}
+
+  shebang-regex@3.0.0:
+    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
+    engines: {node: '>=8'}
+
+  side-channel-list@1.0.0:
+    resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}
+    engines: {node: '>= 0.4'}
+
+  side-channel-map@1.0.1:
+    resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}
+    engines: {node: '>= 0.4'}
+
+  side-channel-weakmap@1.0.2:
+    resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}
+    engines: {node: '>= 0.4'}
+
+  side-channel@1.1.0:
+    resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}
+    engines: {node: '>= 0.4'}
+
+  simple-swizzle@0.2.2:
+    resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}
+
+  sonner@2.0.5:
+    resolution: {integrity: sha512-YwbHQO6cSso3HBXlbCkgrgzDNIhws14r4MO87Ofy+cV2X7ES4pOoAK3+veSmVTvqNx1BWUxlhPmZzP00Crk2aQ==}
+    peerDependencies:
+      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc
+      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc
+
+  source-map-js@1.2.1:
+    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
+    engines: {node: '>=0.10.0'}
+
+  stable-hash@0.0.5:
+    resolution: {integrity: sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==}
+
+  stop-iteration-iterator@1.1.0:
+    resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}
+    engines: {node: '>= 0.4'}
+
+  streamsearch@1.1.0:
+    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
+    engines: {node: '>=10.0.0'}
+
+  string.prototype.includes@2.0.1:
+    resolution: {integrity: sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.matchall@4.0.12:
+    resolution: {integrity: sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.repeat@1.0.0:
+    resolution: {integrity: sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==}
+
+  string.prototype.trim@1.2.10:
+    resolution: {integrity: sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.trimend@1.0.9:
+    resolution: {integrity: sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==}
+    engines: {node: '>= 0.4'}
+
+  string.prototype.trimstart@1.0.8:
+    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}
+    engines: {node: '>= 0.4'}
+
+  strip-bom@3.0.0:
+    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}
+    engines: {node: '>=4'}
+
+  strip-json-comments@3.1.1:
+    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
+    engines: {node: '>=8'}
+
+  styled-jsx@5.1.6:
+    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}
+    engines: {node: '>= 12.0.0'}
+    peerDependencies:
+      '@babel/core': '*'
+      babel-plugin-macros: '*'
+      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'
+    peerDependenciesMeta:
+      '@babel/core':
+        optional: true
+      babel-plugin-macros:
+        optional: true
+
+  supports-color@7.2.0:
+    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
+    engines: {node: '>=8'}
+
+  supports-preserve-symlinks-flag@1.0.0:
+    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
+    engines: {node: '>= 0.4'}
+
+  tailwind-merge@3.3.1:
+    resolution: {integrity: sha512-gBXpgUm/3rp1lMZZrM/w7D8GKqshif0zAymAhbCyIt8KMe+0v9DQ7cdYLR4FHH/cKpdTXb+A/tKKU3eolfsI+g==}
+
+  tailwindcss-animate@1.0.7:
+    resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}
+    peerDependencies:
+      tailwindcss: '>=3.0.0 || insiders'
+
+  tailwindcss@4.1.10:
+    resolution: {integrity: sha512-P3nr6WkvKV/ONsTzj6Gb57sWPMX29EPNPopo7+FcpkQaNsrNpZ1pv8QmrYI2RqEKD7mlGqLnGovlcYnBK0IqUA==}
+
+  tapable@2.2.2:
+    resolution: {integrity: sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==}
+    engines: {node: '>=6'}
+
+  tar@7.4.3:
+    resolution: {integrity: sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==}
+    engines: {node: '>=18'}
+
+  tinyglobby@0.2.14:
+    resolution: {integrity: sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==}
+    engines: {node: '>=12.0.0'}
+
+  to-regex-range@5.0.1:
+    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
+    engines: {node: '>=8.0'}
+
+  ts-api-utils@2.1.0:
+    resolution: {integrity: sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==}
+    engines: {node: '>=18.12'}
+    peerDependencies:
+      typescript: '>=4.8.4'
+
+  tsconfig-paths@3.15.0:
+    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}
+
+  tslib@2.8.1:
+    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}
+
+  type-check@0.4.0:
+    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
+    engines: {node: '>= 0.8.0'}
+
+  typed-array-buffer@1.0.3:
+    resolution: {integrity: sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==}
+    engines: {node: '>= 0.4'}
+
+  typed-array-byte-length@1.0.3:
+    resolution: {integrity: sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==}
+    engines: {node: '>= 0.4'}
+
+  typed-array-byte-offset@1.0.4:
+    resolution: {integrity: sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==}
+    engines: {node: '>= 0.4'}
+
+  typed-array-length@1.0.7:
+    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}
+    engines: {node: '>= 0.4'}
+
+  typescript@5.8.3:
+    resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}
+    engines: {node: '>=14.17'}
+    hasBin: true
+
+  unbox-primitive@1.1.0:
+    resolution: {integrity: sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==}
+    engines: {node: '>= 0.4'}
+
+  undici-types@6.21.0:
+    resolution: {integrity: sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==}
+
+  unrs-resolver@1.9.0:
+    resolution: {integrity: sha512-wqaRu4UnzBD2ABTC1kLfBjAqIDZ5YUTr/MLGa7By47JV1bJDSW7jq/ZSLigB7enLe7ubNaJhtnBXgrc/50cEhg==}
+
+  uri-js@4.4.1:
+    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
+
+  use-callback-ref@1.3.3:
+    resolution: {integrity: sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  use-sidecar@1.1.3:
+    resolution: {integrity: sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      '@types/react': '*'
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+
+  which-boxed-primitive@1.1.1:
+    resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
+    engines: {node: '>= 0.4'}
+
+  which-builtin-type@1.2.1:
+    resolution: {integrity: sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==}
+    engines: {node: '>= 0.4'}
+
+  which-collection@1.0.2:
+    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
+    engines: {node: '>= 0.4'}
+
+  which-typed-array@1.1.19:
+    resolution: {integrity: sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==}
+    engines: {node: '>= 0.4'}
+
+  which@2.0.2:
+    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
+    engines: {node: '>= 8'}
+    hasBin: true
+
+  word-wrap@1.2.5:
+    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
+    engines: {node: '>=0.10.0'}
+
+  yallist@5.0.0:
+    resolution: {integrity: sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==}
+    engines: {node: '>=18'}
+
+  yocto-queue@0.1.0:
+    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
+    engines: {node: '>=10'}
+
+  zod@3.25.67:
+    resolution: {integrity: sha512-idA2YXwpCdqUSKRCACDE6ItZD9TZzy3OZMtpfLoh6oPR47lipysRrJfjzMqFxQ3uJuUPyUeWe1r9vLH33xO/Qw==}
+
+  zustand@5.0.5:
+    resolution: {integrity: sha512-mILtRfKW9xM47hqxGIxCv12gXusoY/xTSHBYApXozR0HmQv299whhBeeAcRy+KrPPybzosvJBCOmVjq6x12fCg==}
+    engines: {node: '>=12.20.0'}
+    peerDependencies:
+      '@types/react': '>=18.0.0'
+      immer: '>=9.0.6'
+      react: '>=18.0.0'
+      use-sync-external-store: '>=1.2.0'
+    peerDependenciesMeta:
+      '@types/react':
+        optional: true
+      immer:
+        optional: true
+      react:
+        optional: true
+      use-sync-external-store:
+        optional: true
+
+snapshots:
+
+  '@alloc/quick-lru@5.2.0': {}
+
+  '@ampproject/remapping@2.3.0':
+    dependencies:
+      '@jridgewell/gen-mapping': 0.3.8
+      '@jridgewell/trace-mapping': 0.3.25
+
+  '@emnapi/core@1.4.3':
+    dependencies:
+      '@emnapi/wasi-threads': 1.0.2
+      tslib: 2.8.1
+    optional: true
+
+  '@emnapi/runtime@1.4.3':
+    dependencies:
+      tslib: 2.8.1
+    optional: true
+
+  '@emnapi/wasi-threads@1.0.2':
+    dependencies:
+      tslib: 2.8.1
+    optional: true
+
+  '@eslint-community/eslint-utils@4.7.0(eslint@9.29.0(jiti@2.4.2))':
+    dependencies:
+      eslint: 9.29.0(jiti@2.4.2)
+      eslint-visitor-keys: 3.4.3
+
+  '@eslint-community/regexpp@4.12.1': {}
+
+  '@eslint/config-array@0.20.1':
+    dependencies:
+      '@eslint/object-schema': 2.1.6
+      debug: 4.4.1
+      minimatch: 3.1.2
+    transitivePeerDependencies:
+      - supports-color
+
+  '@eslint/config-helpers@0.2.3': {}
+
+  '@eslint/core@0.14.0':
+    dependencies:
+      '@types/json-schema': 7.0.15
+
+  '@eslint/core@0.15.0':
+    dependencies:
+      '@types/json-schema': 7.0.15
+
+  '@eslint/eslintrc@3.3.1':
+    dependencies:
+      ajv: 6.12.6
+      debug: 4.4.1
+      espree: 10.4.0
+      globals: 14.0.0
+      ignore: 5.3.2
+      import-fresh: 3.3.1
+      js-yaml: 4.1.0
+      minimatch: 3.1.2
+      strip-json-comments: 3.1.1
+    transitivePeerDependencies:
+      - supports-color
+
+  '@eslint/js@9.29.0': {}
+
+  '@eslint/object-schema@2.1.6': {}
+
+  '@eslint/plugin-kit@0.3.2':
+    dependencies:
+      '@eslint/core': 0.15.0
+      levn: 0.4.1
+
+  '@floating-ui/core@1.7.1':
+    dependencies:
+      '@floating-ui/utils': 0.2.9
+
+  '@floating-ui/dom@1.7.1':
+    dependencies:
+      '@floating-ui/core': 1.7.1
+      '@floating-ui/utils': 0.2.9
+
+  '@floating-ui/react-dom@2.1.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@floating-ui/dom': 1.7.1
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+
+  '@floating-ui/utils@0.2.9': {}
+
+  '@hookform/resolvers@5.1.1(react-hook-form@7.58.1(react@19.1.0))':
+    dependencies:
+      '@standard-schema/utils': 0.3.0
+      react-hook-form: 7.58.1(react@19.1.0)
+
+  '@humanfs/core@0.19.1': {}
+
+  '@humanfs/node@0.16.6':
+    dependencies:
+      '@humanfs/core': 0.19.1
+      '@humanwhocodes/retry': 0.3.1
+
+  '@humanwhocodes/module-importer@1.0.1': {}
+
+  '@humanwhocodes/retry@0.3.1': {}
+
+  '@humanwhocodes/retry@0.4.3': {}
+
+  '@img/sharp-darwin-arm64@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-darwin-arm64': 1.1.0
+    optional: true
+
+  '@img/sharp-darwin-x64@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-darwin-x64': 1.1.0
+    optional: true
+
+  '@img/sharp-libvips-darwin-arm64@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-darwin-x64@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linux-arm64@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linux-arm@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linux-ppc64@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linux-s390x@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linux-x64@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linuxmusl-arm64@1.1.0':
+    optional: true
+
+  '@img/sharp-libvips-linuxmusl-x64@1.1.0':
+    optional: true
+
+  '@img/sharp-linux-arm64@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-arm64': 1.1.0
+    optional: true
+
+  '@img/sharp-linux-arm@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-arm': 1.1.0
+    optional: true
+
+  '@img/sharp-linux-s390x@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-s390x': 1.1.0
+    optional: true
+
+  '@img/sharp-linux-x64@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-linux-x64': 1.1.0
+    optional: true
+
+  '@img/sharp-linuxmusl-arm64@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-linuxmusl-arm64': 1.1.0
+    optional: true
+
+  '@img/sharp-linuxmusl-x64@0.34.2':
+    optionalDependencies:
+      '@img/sharp-libvips-linuxmusl-x64': 1.1.0
+    optional: true
+
+  '@img/sharp-wasm32@0.34.2':
+    dependencies:
+      '@emnapi/runtime': 1.4.3
+    optional: true
+
+  '@img/sharp-win32-arm64@0.34.2':
+    optional: true
+
+  '@img/sharp-win32-ia32@0.34.2':
+    optional: true
+
+  '@img/sharp-win32-x64@0.34.2':
+    optional: true
+
+  '@isaacs/fs-minipass@4.0.1':
+    dependencies:
+      minipass: 7.1.2
+
+  '@jridgewell/gen-mapping@0.3.8':
+    dependencies:
+      '@jridgewell/set-array': 1.2.1
+      '@jridgewell/sourcemap-codec': 1.5.0
+      '@jridgewell/trace-mapping': 0.3.25
+
+  '@jridgewell/resolve-uri@3.1.2': {}
+
+  '@jridgewell/set-array@1.2.1': {}
+
+  '@jridgewell/sourcemap-codec@1.5.0': {}
+
+  '@jridgewell/trace-mapping@0.3.25':
+    dependencies:
+      '@jridgewell/resolve-uri': 3.1.2
+      '@jridgewell/sourcemap-codec': 1.5.0
+
+  '@napi-rs/wasm-runtime@0.2.11':
+    dependencies:
+      '@emnapi/core': 1.4.3
+      '@emnapi/runtime': 1.4.3
+      '@tybys/wasm-util': 0.9.0
+    optional: true
+
+  '@next/env@15.3.3': {}
+
+  '@next/eslint-plugin-next@15.3.3':
+    dependencies:
+      fast-glob: 3.3.1
+
+  '@next/swc-darwin-arm64@15.3.3':
+    optional: true
+
+  '@next/swc-darwin-x64@15.3.3':
+    optional: true
+
+  '@next/swc-linux-arm64-gnu@15.3.3':
+    optional: true
+
+  '@next/swc-linux-arm64-musl@15.3.3':
+    optional: true
+
+  '@next/swc-linux-x64-gnu@15.3.3':
+    optional: true
+
+  '@next/swc-linux-x64-musl@15.3.3':
+    optional: true
+
+  '@next/swc-win32-arm64-msvc@15.3.3':
+    optional: true
+
+  '@next/swc-win32-x64-msvc@15.3.3':
+    optional: true
+
+  '@nodelib/fs.scandir@2.1.5':
+    dependencies:
+      '@nodelib/fs.stat': 2.0.5
+      run-parallel: 1.2.0
+
+  '@nodelib/fs.stat@2.0.5': {}
+
+  '@nodelib/fs.walk@1.2.8':
+    dependencies:
+      '@nodelib/fs.scandir': 2.1.5
+      fastq: 1.19.1
+
+  '@nolyfill/is-core-module@1.0.39': {}
+
+  '@radix-ui/primitive@1.1.2': {}
+
+  '@radix-ui/react-arrow@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-collection@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-compose-refs@1.1.2(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-context@1.1.2(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-dialog@1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/primitive': 1.1.2
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)
+      aria-hidden: 1.2.6
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+      react-remove-scroll: 2.7.1(@types/react@19.1.8)(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-direction@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-dismissable-layer@1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/primitive': 1.1.2
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-escape-keydown': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-dropdown-menu@2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/primitive': 1.1.2
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-menu': 2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-focus-guards@1.1.2(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-focus-scope@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-id@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-label@2.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-menu@2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/primitive': 1.1.2
+      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-popper': 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      aria-hidden: 1.2.6
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+      react-remove-scroll: 2.7.1(@types/react@19.1.8)(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-popper@1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@floating-ui/react-dom': 2.1.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-arrow': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-rect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-size': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/rect': 1.1.1
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-portal@1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-presence@1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-primitive@2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-roving-focus@1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/primitive': 1.1.2
+      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-slot@1.2.3(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-tooltip@1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/primitive': 1.1.2
+      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-popper': 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/react-use-callback-ref@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-use-controllable-state@1.2.2(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-use-effect-event': 0.0.2(@types/react@19.1.8)(react@19.1.0)
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-use-effect-event@0.0.2(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-use-escape-keydown@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-use-layout-effect@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-use-rect@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/rect': 1.1.1
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-use-size@1.1.1(@types/react@19.1.8)(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)
+      react: 19.1.0
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  '@radix-ui/react-visually-hidden@1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+      '@types/react-dom': 19.1.6(@types/react@19.1.8)
+
+  '@radix-ui/rect@1.1.1': {}
+
+  '@rtsao/scc@1.1.0': {}
+
+  '@rushstack/eslint-patch@1.11.0': {}
+
+  '@standard-schema/utils@0.3.0': {}
+
+  '@swc/counter@0.1.3': {}
+
+  '@swc/helpers@0.5.15':
+    dependencies:
+      tslib: 2.8.1
+
+  '@tailwindcss/node@4.1.10':
+    dependencies:
+      '@ampproject/remapping': 2.3.0
+      enhanced-resolve: 5.18.1
+      jiti: 2.4.2
+      lightningcss: 1.30.1
+      magic-string: 0.30.17
+      source-map-js: 1.2.1
+      tailwindcss: 4.1.10
+
+  '@tailwindcss/oxide-android-arm64@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-darwin-arm64@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-darwin-x64@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-freebsd-x64@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-linux-arm-gnueabihf@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-linux-arm64-gnu@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-linux-arm64-musl@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-linux-x64-gnu@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-linux-x64-musl@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-wasm32-wasi@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-win32-arm64-msvc@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide-win32-x64-msvc@4.1.10':
+    optional: true
+
+  '@tailwindcss/oxide@4.1.10':
+    dependencies:
+      detect-libc: 2.0.4
+      tar: 7.4.3
+    optionalDependencies:
+      '@tailwindcss/oxide-android-arm64': 4.1.10
+      '@tailwindcss/oxide-darwin-arm64': 4.1.10
+      '@tailwindcss/oxide-darwin-x64': 4.1.10
+      '@tailwindcss/oxide-freebsd-x64': 4.1.10
+      '@tailwindcss/oxide-linux-arm-gnueabihf': 4.1.10
+      '@tailwindcss/oxide-linux-arm64-gnu': 4.1.10
+      '@tailwindcss/oxide-linux-arm64-musl': 4.1.10
+      '@tailwindcss/oxide-linux-x64-gnu': 4.1.10
+      '@tailwindcss/oxide-linux-x64-musl': 4.1.10
+      '@tailwindcss/oxide-wasm32-wasi': 4.1.10
+      '@tailwindcss/oxide-win32-arm64-msvc': 4.1.10
+      '@tailwindcss/oxide-win32-x64-msvc': 4.1.10
+
+  '@tailwindcss/postcss@4.1.10':
+    dependencies:
+      '@alloc/quick-lru': 5.2.0
+      '@tailwindcss/node': 4.1.10
+      '@tailwindcss/oxide': 4.1.10
+      postcss: 8.5.6
+      tailwindcss: 4.1.10
+
+  '@tybys/wasm-util@0.9.0':
+    dependencies:
+      tslib: 2.8.1
+    optional: true
+
+  '@types/estree@1.0.8': {}
+
+  '@types/json-schema@7.0.15': {}
+
+  '@types/json5@0.0.29': {}
+
+  '@types/node@20.19.1':
+    dependencies:
+      undici-types: 6.21.0
+
+  '@types/react-dom@19.1.6(@types/react@19.1.8)':
+    dependencies:
+      '@types/react': 19.1.8
+
+  '@types/react@19.1.8':
+    dependencies:
+      csstype: 3.1.3
+
+  '@typescript-eslint/eslint-plugin@8.34.1(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':
+    dependencies:
+      '@eslint-community/regexpp': 4.12.1
+      '@typescript-eslint/parser': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      '@typescript-eslint/scope-manager': 8.34.1
+      '@typescript-eslint/type-utils': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      '@typescript-eslint/utils': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      '@typescript-eslint/visitor-keys': 8.34.1
+      eslint: 9.29.0(jiti@2.4.2)
+      graphemer: 1.4.0
+      ignore: 7.0.5
+      natural-compare: 1.4.0
+      ts-api-utils: 2.1.0(typescript@5.8.3)
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':
+    dependencies:
+      '@typescript-eslint/scope-manager': 8.34.1
+      '@typescript-eslint/types': 8.34.1
+      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)
+      '@typescript-eslint/visitor-keys': 8.34.1
+      debug: 4.4.1
+      eslint: 9.29.0(jiti@2.4.2)
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/project-service@8.34.1(typescript@5.8.3)':
+    dependencies:
+      '@typescript-eslint/tsconfig-utils': 8.34.1(typescript@5.8.3)
+      '@typescript-eslint/types': 8.34.1
+      debug: 4.4.1
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/scope-manager@8.34.1':
+    dependencies:
+      '@typescript-eslint/types': 8.34.1
+      '@typescript-eslint/visitor-keys': 8.34.1
+
+  '@typescript-eslint/tsconfig-utils@8.34.1(typescript@5.8.3)':
+    dependencies:
+      typescript: 5.8.3
+
+  '@typescript-eslint/type-utils@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':
+    dependencies:
+      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)
+      '@typescript-eslint/utils': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      debug: 4.4.1
+      eslint: 9.29.0(jiti@2.4.2)
+      ts-api-utils: 2.1.0(typescript@5.8.3)
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/types@8.34.1': {}
+
+  '@typescript-eslint/typescript-estree@8.34.1(typescript@5.8.3)':
+    dependencies:
+      '@typescript-eslint/project-service': 8.34.1(typescript@5.8.3)
+      '@typescript-eslint/tsconfig-utils': 8.34.1(typescript@5.8.3)
+      '@typescript-eslint/types': 8.34.1
+      '@typescript-eslint/visitor-keys': 8.34.1
+      debug: 4.4.1
+      fast-glob: 3.3.3
+      is-glob: 4.0.3
+      minimatch: 9.0.5
+      semver: 7.7.2
+      ts-api-utils: 2.1.0(typescript@5.8.3)
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/utils@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':
+    dependencies:
+      '@eslint-community/eslint-utils': 4.7.0(eslint@9.29.0(jiti@2.4.2))
+      '@typescript-eslint/scope-manager': 8.34.1
+      '@typescript-eslint/types': 8.34.1
+      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)
+      eslint: 9.29.0(jiti@2.4.2)
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - supports-color
+
+  '@typescript-eslint/visitor-keys@8.34.1':
+    dependencies:
+      '@typescript-eslint/types': 8.34.1
+      eslint-visitor-keys: 4.2.1
+
+  '@unrs/resolver-binding-android-arm-eabi@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-android-arm64@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-darwin-arm64@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-darwin-x64@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-freebsd-x64@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm-gnueabihf@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm-musleabihf@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm64-gnu@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-arm64-musl@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-ppc64-gnu@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-riscv64-gnu@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-riscv64-musl@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-s390x-gnu@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-x64-gnu@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-linux-x64-musl@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-wasm32-wasi@1.9.0':
+    dependencies:
+      '@napi-rs/wasm-runtime': 0.2.11
+    optional: true
+
+  '@unrs/resolver-binding-win32-arm64-msvc@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-win32-ia32-msvc@1.9.0':
+    optional: true
+
+  '@unrs/resolver-binding-win32-x64-msvc@1.9.0':
+    optional: true
+
+  acorn-jsx@5.3.2(acorn@8.15.0):
+    dependencies:
+      acorn: 8.15.0
+
+  acorn@8.15.0: {}
+
+  ajv@6.12.6:
+    dependencies:
+      fast-deep-equal: 3.1.3
+      fast-json-stable-stringify: 2.1.0
+      json-schema-traverse: 0.4.1
+      uri-js: 4.4.1
+
+  ansi-styles@4.3.0:
+    dependencies:
+      color-convert: 2.0.1
+
+  argparse@2.0.1: {}
+
+  aria-hidden@1.2.6:
+    dependencies:
+      tslib: 2.8.1
+
+  aria-query@5.3.2: {}
+
+  array-buffer-byte-length@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      is-array-buffer: 3.0.5
+
+  array-includes@3.1.9:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      is-string: 1.1.1
+      math-intrinsics: 1.1.0
+
+  array.prototype.findlast@1.2.5:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.findlastindex@1.2.6:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.flat@1.3.3:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.flatmap@1.3.3:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-shim-unscopables: 1.1.0
+
+  array.prototype.tosorted@1.1.4:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-shim-unscopables: 1.1.0
+
+  arraybuffer.prototype.slice@1.0.4:
+    dependencies:
+      array-buffer-byte-length: 1.0.2
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      is-array-buffer: 3.0.5
+
+  ast-types-flow@0.0.8: {}
+
+  async-function@1.0.0: {}
+
+  available-typed-arrays@1.0.7:
+    dependencies:
+      possible-typed-array-names: 1.1.0
+
+  axe-core@4.10.3: {}
+
+  axobject-query@4.1.0: {}
+
+  balanced-match@1.0.2: {}
+
+  brace-expansion@1.1.12:
+    dependencies:
+      balanced-match: 1.0.2
+      concat-map: 0.0.1
+
+  brace-expansion@2.0.2:
+    dependencies:
+      balanced-match: 1.0.2
+
+  braces@3.0.3:
+    dependencies:
+      fill-range: 7.1.1
+
+  busboy@1.6.0:
+    dependencies:
+      streamsearch: 1.1.0
+
+  call-bind-apply-helpers@1.0.2:
+    dependencies:
+      es-errors: 1.3.0
+      function-bind: 1.1.2
+
+  call-bind@1.0.8:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      es-define-property: 1.0.1
+      get-intrinsic: 1.3.0
+      set-function-length: 1.2.2
+
+  call-bound@1.0.4:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      get-intrinsic: 1.3.0
+
+  callsites@3.1.0: {}
+
+  caniuse-lite@1.0.30001723: {}
+
+  chalk@4.1.2:
+    dependencies:
+      ansi-styles: 4.3.0
+      supports-color: 7.2.0
+
+  chownr@3.0.0: {}
+
+  class-variance-authority@0.7.1:
+    dependencies:
+      clsx: 2.1.1
+
+  client-only@0.0.1: {}
+
+  clsx@2.1.1: {}
+
+  color-convert@2.0.1:
+    dependencies:
+      color-name: 1.1.4
+
+  color-name@1.1.4: {}
+
+  color-string@1.9.1:
+    dependencies:
+      color-name: 1.1.4
+      simple-swizzle: 0.2.2
+    optional: true
+
+  color@4.2.3:
+    dependencies:
+      color-convert: 2.0.1
+      color-string: 1.9.1
+    optional: true
+
+  concat-map@0.0.1: {}
+
+  cross-spawn@7.0.6:
+    dependencies:
+      path-key: 3.1.1
+      shebang-command: 2.0.0
+      which: 2.0.2
+
+  csstype@3.1.3: {}
+
+  damerau-levenshtein@1.0.8: {}
+
+  data-view-buffer@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-data-view: 1.0.2
+
+  data-view-byte-length@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-data-view: 1.0.2
+
+  data-view-byte-offset@1.0.1:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-data-view: 1.0.2
+
+  debug@3.2.7:
+    dependencies:
+      ms: 2.1.3
+
+  debug@4.4.1:
+    dependencies:
+      ms: 2.1.3
+
+  deep-is@0.1.4: {}
+
+  define-data-property@1.1.4:
+    dependencies:
+      es-define-property: 1.0.1
+      es-errors: 1.3.0
+      gopd: 1.2.0
+
+  define-properties@1.2.1:
+    dependencies:
+      define-data-property: 1.1.4
+      has-property-descriptors: 1.0.2
+      object-keys: 1.1.1
+
+  detect-libc@2.0.4: {}
+
+  detect-node-es@1.1.0: {}
+
+  doctrine@2.1.0:
+    dependencies:
+      esutils: 2.0.3
+
+  dotenv-cli@8.0.0:
+    dependencies:
+      cross-spawn: 7.0.6
+      dotenv: 16.5.0
+      dotenv-expand: 10.0.0
+      minimist: 1.2.8
+
+  dotenv-expand@10.0.0: {}
+
+  dotenv@16.5.0: {}
+
+  dunder-proto@1.0.1:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      es-errors: 1.3.0
+      gopd: 1.2.0
+
+  emoji-regex@9.2.2: {}
+
+  enhanced-resolve@5.18.1:
+    dependencies:
+      graceful-fs: 4.2.11
+      tapable: 2.2.2
+
+  es-abstract@1.24.0:
+    dependencies:
+      array-buffer-byte-length: 1.0.2
+      arraybuffer.prototype.slice: 1.0.4
+      available-typed-arrays: 1.0.7
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      data-view-buffer: 1.0.2
+      data-view-byte-length: 1.0.2
+      data-view-byte-offset: 1.0.1
+      es-define-property: 1.0.1
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      es-set-tostringtag: 2.1.0
+      es-to-primitive: 1.3.0
+      function.prototype.name: 1.1.8
+      get-intrinsic: 1.3.0
+      get-proto: 1.0.1
+      get-symbol-description: 1.1.0
+      globalthis: 1.0.4
+      gopd: 1.2.0
+      has-property-descriptors: 1.0.2
+      has-proto: 1.2.0
+      has-symbols: 1.1.0
+      hasown: 2.0.2
+      internal-slot: 1.1.0
+      is-array-buffer: 3.0.5
+      is-callable: 1.2.7
+      is-data-view: 1.0.2
+      is-negative-zero: 2.0.3
+      is-regex: 1.2.1
+      is-set: 2.0.3
+      is-shared-array-buffer: 1.0.4
+      is-string: 1.1.1
+      is-typed-array: 1.1.15
+      is-weakref: 1.1.1
+      math-intrinsics: 1.1.0
+      object-inspect: 1.13.4
+      object-keys: 1.1.1
+      object.assign: 4.1.7
+      own-keys: 1.0.1
+      regexp.prototype.flags: 1.5.4
+      safe-array-concat: 1.1.3
+      safe-push-apply: 1.0.0
+      safe-regex-test: 1.1.0
+      set-proto: 1.0.0
+      stop-iteration-iterator: 1.1.0
+      string.prototype.trim: 1.2.10
+      string.prototype.trimend: 1.0.9
+      string.prototype.trimstart: 1.0.8
+      typed-array-buffer: 1.0.3
+      typed-array-byte-length: 1.0.3
+      typed-array-byte-offset: 1.0.4
+      typed-array-length: 1.0.7
+      unbox-primitive: 1.1.0
+      which-typed-array: 1.1.19
+
+  es-define-property@1.0.1: {}
+
+  es-errors@1.3.0: {}
+
+  es-iterator-helpers@1.2.1:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-set-tostringtag: 2.1.0
+      function-bind: 1.1.2
+      get-intrinsic: 1.3.0
+      globalthis: 1.0.4
+      gopd: 1.2.0
+      has-property-descriptors: 1.0.2
+      has-proto: 1.2.0
+      has-symbols: 1.1.0
+      internal-slot: 1.1.0
+      iterator.prototype: 1.1.5
+      safe-array-concat: 1.1.3
+
+  es-object-atoms@1.1.1:
+    dependencies:
+      es-errors: 1.3.0
+
+  es-set-tostringtag@2.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      has-tostringtag: 1.0.2
+      hasown: 2.0.2
+
+  es-shim-unscopables@1.1.0:
+    dependencies:
+      hasown: 2.0.2
+
+  es-to-primitive@1.3.0:
+    dependencies:
+      is-callable: 1.2.7
+      is-date-object: 1.1.0
+      is-symbol: 1.1.1
+
+  escape-string-regexp@4.0.0: {}
+
+  eslint-config-next@15.3.3(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3):
+    dependencies:
+      '@next/eslint-plugin-next': 15.3.3
+      '@rushstack/eslint-patch': 1.11.0
+      '@typescript-eslint/eslint-plugin': 8.34.1(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      '@typescript-eslint/parser': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      eslint: 9.29.0(jiti@2.4.2)
+      eslint-import-resolver-node: 0.3.9
+      eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.31.0)(eslint@9.29.0(jiti@2.4.2))
+      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2))
+      eslint-plugin-jsx-a11y: 6.10.2(eslint@9.29.0(jiti@2.4.2))
+      eslint-plugin-react: 7.37.5(eslint@9.29.0(jiti@2.4.2))
+      eslint-plugin-react-hooks: 5.2.0(eslint@9.29.0(jiti@2.4.2))
+    optionalDependencies:
+      typescript: 5.8.3
+    transitivePeerDependencies:
+      - eslint-import-resolver-webpack
+      - eslint-plugin-import-x
+      - supports-color
+
+  eslint-import-resolver-node@0.3.9:
+    dependencies:
+      debug: 3.2.7
+      is-core-module: 2.16.1
+      resolve: 1.22.10
+    transitivePeerDependencies:
+      - supports-color
+
+  eslint-import-resolver-typescript@3.10.1(eslint-plugin-import@2.31.0)(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      '@nolyfill/is-core-module': 1.0.39
+      debug: 4.4.1
+      eslint: 9.29.0(jiti@2.4.2)
+      get-tsconfig: 4.10.1
+      is-bun-module: 2.0.0
+      stable-hash: 0.0.5
+      tinyglobby: 0.2.14
+      unrs-resolver: 1.9.0
+    optionalDependencies:
+      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2))
+    transitivePeerDependencies:
+      - supports-color
+
+  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      debug: 3.2.7
+    optionalDependencies:
+      '@typescript-eslint/parser': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      eslint: 9.29.0(jiti@2.4.2)
+      eslint-import-resolver-node: 0.3.9
+      eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.31.0)(eslint@9.29.0(jiti@2.4.2))
+    transitivePeerDependencies:
+      - supports-color
+
+  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      '@rtsao/scc': 1.1.0
+      array-includes: 3.1.9
+      array.prototype.findlastindex: 1.2.6
+      array.prototype.flat: 1.3.3
+      array.prototype.flatmap: 1.3.3
+      debug: 3.2.7
+      doctrine: 2.1.0
+      eslint: 9.29.0(jiti@2.4.2)
+      eslint-import-resolver-node: 0.3.9
+      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2))
+      hasown: 2.0.2
+      is-core-module: 2.16.1
+      is-glob: 4.0.3
+      minimatch: 3.1.2
+      object.fromentries: 2.0.8
+      object.groupby: 1.0.3
+      object.values: 1.2.1
+      semver: 6.3.1
+      string.prototype.trimend: 1.0.9
+      tsconfig-paths: 3.15.0
+    optionalDependencies:
+      '@typescript-eslint/parser': 8.34.1(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+    transitivePeerDependencies:
+      - eslint-import-resolver-typescript
+      - eslint-import-resolver-webpack
+      - supports-color
+
+  eslint-plugin-jsx-a11y@6.10.2(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      aria-query: 5.3.2
+      array-includes: 3.1.9
+      array.prototype.flatmap: 1.3.3
+      ast-types-flow: 0.0.8
+      axe-core: 4.10.3
+      axobject-query: 4.1.0
+      damerau-levenshtein: 1.0.8
+      emoji-regex: 9.2.2
+      eslint: 9.29.0(jiti@2.4.2)
+      hasown: 2.0.2
+      jsx-ast-utils: 3.3.5
+      language-tags: 1.0.9
+      minimatch: 3.1.2
+      object.fromentries: 2.0.8
+      safe-regex-test: 1.1.0
+      string.prototype.includes: 2.0.1
+
+  eslint-plugin-react-hooks@5.2.0(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      eslint: 9.29.0(jiti@2.4.2)
+
+  eslint-plugin-react@7.37.5(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      array-includes: 3.1.9
+      array.prototype.findlast: 1.2.5
+      array.prototype.flatmap: 1.3.3
+      array.prototype.tosorted: 1.1.4
+      doctrine: 2.1.0
+      es-iterator-helpers: 1.2.1
+      eslint: 9.29.0(jiti@2.4.2)
+      estraverse: 5.3.0
+      hasown: 2.0.2
+      jsx-ast-utils: 3.3.5
+      minimatch: 3.1.2
+      object.entries: 1.1.9
+      object.fromentries: 2.0.8
+      object.values: 1.2.1
+      prop-types: 15.8.1
+      resolve: 2.0.0-next.5
+      semver: 6.3.1
+      string.prototype.matchall: 4.0.12
+      string.prototype.repeat: 1.0.0
+
+  eslint-scope@8.4.0:
+    dependencies:
+      esrecurse: 4.3.0
+      estraverse: 5.3.0
+
+  eslint-visitor-keys@3.4.3: {}
+
+  eslint-visitor-keys@4.2.1: {}
+
+  eslint@9.29.0(jiti@2.4.2):
+    dependencies:
+      '@eslint-community/eslint-utils': 4.7.0(eslint@9.29.0(jiti@2.4.2))
+      '@eslint-community/regexpp': 4.12.1
+      '@eslint/config-array': 0.20.1
+      '@eslint/config-helpers': 0.2.3
+      '@eslint/core': 0.14.0
+      '@eslint/eslintrc': 3.3.1
+      '@eslint/js': 9.29.0
+      '@eslint/plugin-kit': 0.3.2
+      '@humanfs/node': 0.16.6
+      '@humanwhocodes/module-importer': 1.0.1
+      '@humanwhocodes/retry': 0.4.3
+      '@types/estree': 1.0.8
+      '@types/json-schema': 7.0.15
+      ajv: 6.12.6
+      chalk: 4.1.2
+      cross-spawn: 7.0.6
+      debug: 4.4.1
+      escape-string-regexp: 4.0.0
+      eslint-scope: 8.4.0
+      eslint-visitor-keys: 4.2.1
+      espree: 10.4.0
+      esquery: 1.6.0
+      esutils: 2.0.3
+      fast-deep-equal: 3.1.3
+      file-entry-cache: 8.0.0
+      find-up: 5.0.0
+      glob-parent: 6.0.2
+      ignore: 5.3.2
+      imurmurhash: 0.1.4
+      is-glob: 4.0.3
+      json-stable-stringify-without-jsonify: 1.0.1
+      lodash.merge: 4.6.2
+      minimatch: 3.1.2
+      natural-compare: 1.4.0
+      optionator: 0.9.4
+    optionalDependencies:
+      jiti: 2.4.2
+    transitivePeerDependencies:
+      - supports-color
+
+  espree@10.4.0:
+    dependencies:
+      acorn: 8.15.0
+      acorn-jsx: 5.3.2(acorn@8.15.0)
+      eslint-visitor-keys: 4.2.1
+
+  esquery@1.6.0:
+    dependencies:
+      estraverse: 5.3.0
+
+  esrecurse@4.3.0:
+    dependencies:
+      estraverse: 5.3.0
+
+  estraverse@5.3.0: {}
+
+  esutils@2.0.3: {}
+
+  fast-deep-equal@3.1.3: {}
+
+  fast-glob@3.3.1:
+    dependencies:
+      '@nodelib/fs.stat': 2.0.5
+      '@nodelib/fs.walk': 1.2.8
+      glob-parent: 5.1.2
+      merge2: 1.4.1
+      micromatch: 4.0.8
+
+  fast-glob@3.3.3:
+    dependencies:
+      '@nodelib/fs.stat': 2.0.5
+      '@nodelib/fs.walk': 1.2.8
+      glob-parent: 5.1.2
+      merge2: 1.4.1
+      micromatch: 4.0.8
+
+  fast-json-stable-stringify@2.1.0: {}
+
+  fast-levenshtein@2.0.6: {}
+
+  fastq@1.19.1:
+    dependencies:
+      reusify: 1.1.0
+
+  fdir@6.4.6(picomatch@4.0.2):
+    optionalDependencies:
+      picomatch: 4.0.2
+
+  file-entry-cache@8.0.0:
+    dependencies:
+      flat-cache: 4.0.1
+
+  fill-range@7.1.1:
+    dependencies:
+      to-regex-range: 5.0.1
+
+  find-up@5.0.0:
+    dependencies:
+      locate-path: 6.0.0
+      path-exists: 4.0.0
+
+  flat-cache@4.0.1:
+    dependencies:
+      flatted: 3.3.3
+      keyv: 4.5.4
+
+  flatted@3.3.3: {}
+
+  for-each@0.3.5:
+    dependencies:
+      is-callable: 1.2.7
+
+  function-bind@1.1.2: {}
+
+  function.prototype.name@1.1.8:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      functions-have-names: 1.2.3
+      hasown: 2.0.2
+      is-callable: 1.2.7
+
+  functions-have-names@1.2.3: {}
+
+  get-intrinsic@1.3.0:
+    dependencies:
+      call-bind-apply-helpers: 1.0.2
+      es-define-property: 1.0.1
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      function-bind: 1.1.2
+      get-proto: 1.0.1
+      gopd: 1.2.0
+      has-symbols: 1.1.0
+      hasown: 2.0.2
+      math-intrinsics: 1.1.0
+
+  get-nonce@1.0.1: {}
+
+  get-proto@1.0.1:
+    dependencies:
+      dunder-proto: 1.0.1
+      es-object-atoms: 1.1.1
+
+  get-symbol-description@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+
+  get-tsconfig@4.10.1:
+    dependencies:
+      resolve-pkg-maps: 1.0.0
+
+  glob-parent@5.1.2:
+    dependencies:
+      is-glob: 4.0.3
+
+  glob-parent@6.0.2:
+    dependencies:
+      is-glob: 4.0.3
+
+  globals@14.0.0: {}
+
+  globalthis@1.0.4:
+    dependencies:
+      define-properties: 1.2.1
+      gopd: 1.2.0
+
+  gopd@1.2.0: {}
+
+  graceful-fs@4.2.11: {}
+
+  graphemer@1.4.0: {}
+
+  has-bigints@1.1.0: {}
+
+  has-flag@4.0.0: {}
+
+  has-property-descriptors@1.0.2:
+    dependencies:
+      es-define-property: 1.0.1
+
+  has-proto@1.2.0:
+    dependencies:
+      dunder-proto: 1.0.1
+
+  has-symbols@1.1.0: {}
+
+  has-tostringtag@1.0.2:
+    dependencies:
+      has-symbols: 1.1.0
+
+  hasown@2.0.2:
+    dependencies:
+      function-bind: 1.1.2
+
+  ignore@5.3.2: {}
+
+  ignore@7.0.5: {}
+
+  import-fresh@3.3.1:
+    dependencies:
+      parent-module: 1.0.1
+      resolve-from: 4.0.0
+
+  imurmurhash@0.1.4: {}
+
+  internal-slot@1.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      hasown: 2.0.2
+      side-channel: 1.1.0
+
+  is-array-buffer@3.0.5:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+
+  is-arrayish@0.3.2:
+    optional: true
+
+  is-async-function@2.1.1:
+    dependencies:
+      async-function: 1.0.0
+      call-bound: 1.0.4
+      get-proto: 1.0.1
+      has-tostringtag: 1.0.2
+      safe-regex-test: 1.1.0
+
+  is-bigint@1.1.0:
+    dependencies:
+      has-bigints: 1.1.0
+
+  is-boolean-object@1.2.2:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-bun-module@2.0.0:
+    dependencies:
+      semver: 7.7.2
+
+  is-callable@1.2.7: {}
+
+  is-core-module@2.16.1:
+    dependencies:
+      hasown: 2.0.2
+
+  is-data-view@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+      is-typed-array: 1.1.15
+
+  is-date-object@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-extglob@2.1.1: {}
+
+  is-finalizationregistry@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+
+  is-generator-function@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      get-proto: 1.0.1
+      has-tostringtag: 1.0.2
+      safe-regex-test: 1.1.0
+
+  is-glob@4.0.3:
+    dependencies:
+      is-extglob: 2.1.1
+
+  is-map@2.0.3: {}
+
+  is-negative-zero@2.0.3: {}
+
+  is-number-object@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-number@7.0.0: {}
+
+  is-regex@1.2.1:
+    dependencies:
+      call-bound: 1.0.4
+      gopd: 1.2.0
+      has-tostringtag: 1.0.2
+      hasown: 2.0.2
+
+  is-set@2.0.3: {}
+
+  is-shared-array-buffer@1.0.4:
+    dependencies:
+      call-bound: 1.0.4
+
+  is-string@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+      has-tostringtag: 1.0.2
+
+  is-symbol@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+      has-symbols: 1.1.0
+      safe-regex-test: 1.1.0
+
+  is-typed-array@1.1.15:
+    dependencies:
+      which-typed-array: 1.1.19
+
+  is-weakmap@2.0.2: {}
+
+  is-weakref@1.1.1:
+    dependencies:
+      call-bound: 1.0.4
+
+  is-weakset@2.0.4:
+    dependencies:
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+
+  isarray@2.0.5: {}
+
+  isexe@2.0.0: {}
+
+  iterator.prototype@1.1.5:
+    dependencies:
+      define-data-property: 1.1.4
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      get-proto: 1.0.1
+      has-symbols: 1.1.0
+      set-function-name: 2.0.2
+
+  jiti@2.4.2: {}
+
+  js-tokens@4.0.0: {}
+
+  js-yaml@4.1.0:
+    dependencies:
+      argparse: 2.0.1
+
+  json-buffer@3.0.1: {}
+
+  json-schema-traverse@0.4.1: {}
+
+  json-stable-stringify-without-jsonify@1.0.1: {}
+
+  json5@1.0.2:
+    dependencies:
+      minimist: 1.2.8
+
+  jsx-ast-utils@3.3.5:
+    dependencies:
+      array-includes: 3.1.9
+      array.prototype.flat: 1.3.3
+      object.assign: 4.1.7
+      object.values: 1.2.1
+
+  keyv@4.5.4:
+    dependencies:
+      json-buffer: 3.0.1
+
+  language-subtag-registry@0.3.23: {}
+
+  language-tags@1.0.9:
+    dependencies:
+      language-subtag-registry: 0.3.23
+
+  levn@0.4.1:
+    dependencies:
+      prelude-ls: 1.2.1
+      type-check: 0.4.0
+
+  lightningcss-darwin-arm64@1.30.1:
+    optional: true
+
+  lightningcss-darwin-x64@1.30.1:
+    optional: true
+
+  lightningcss-freebsd-x64@1.30.1:
+    optional: true
+
+  lightningcss-linux-arm-gnueabihf@1.30.1:
+    optional: true
+
+  lightningcss-linux-arm64-gnu@1.30.1:
+    optional: true
+
+  lightningcss-linux-arm64-musl@1.30.1:
+    optional: true
+
+  lightningcss-linux-x64-gnu@1.30.1:
+    optional: true
+
+  lightningcss-linux-x64-musl@1.30.1:
+    optional: true
+
+  lightningcss-win32-arm64-msvc@1.30.1:
+    optional: true
+
+  lightningcss-win32-x64-msvc@1.30.1:
+    optional: true
+
+  lightningcss@1.30.1:
+    dependencies:
+      detect-libc: 2.0.4
+    optionalDependencies:
+      lightningcss-darwin-arm64: 1.30.1
+      lightningcss-darwin-x64: 1.30.1
+      lightningcss-freebsd-x64: 1.30.1
+      lightningcss-linux-arm-gnueabihf: 1.30.1
+      lightningcss-linux-arm64-gnu: 1.30.1
+      lightningcss-linux-arm64-musl: 1.30.1
+      lightningcss-linux-x64-gnu: 1.30.1
+      lightningcss-linux-x64-musl: 1.30.1
+      lightningcss-win32-arm64-msvc: 1.30.1
+      lightningcss-win32-x64-msvc: 1.30.1
+
+  locate-path@6.0.0:
+    dependencies:
+      p-locate: 5.0.0
+
+  lodash.merge@4.6.2: {}
+
+  loose-envify@1.4.0:
+    dependencies:
+      js-tokens: 4.0.0
+
+  lucide-react@0.516.0(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+
+  magic-string@0.30.17:
+    dependencies:
+      '@jridgewell/sourcemap-codec': 1.5.0
+
+  math-intrinsics@1.1.0: {}
+
+  merge2@1.4.1: {}
+
+  micromatch@4.0.8:
+    dependencies:
+      braces: 3.0.3
+      picomatch: 2.3.1
+
+  minimatch@3.1.2:
+    dependencies:
+      brace-expansion: 1.1.12
+
+  minimatch@9.0.5:
+    dependencies:
+      brace-expansion: 2.0.2
+
+  minimist@1.2.8: {}
+
+  minipass@7.1.2: {}
+
+  minizlib@3.0.2:
+    dependencies:
+      minipass: 7.1.2
+
+  mkdirp@3.0.1: {}
+
+  ms@2.1.3: {}
+
+  nanoid@3.3.11: {}
+
+  napi-postinstall@0.2.4: {}
+
+  natural-compare@1.4.0: {}
+
+  next-themes@0.4.6(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+
+  next@15.3.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      '@next/env': 15.3.3
+      '@swc/counter': 0.1.3
+      '@swc/helpers': 0.5.15
+      busboy: 1.6.0
+      caniuse-lite: 1.0.30001723
+      postcss: 8.4.31
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+      styled-jsx: 5.1.6(react@19.1.0)
+    optionalDependencies:
+      '@next/swc-darwin-arm64': 15.3.3
+      '@next/swc-darwin-x64': 15.3.3
+      '@next/swc-linux-arm64-gnu': 15.3.3
+      '@next/swc-linux-arm64-musl': 15.3.3
+      '@next/swc-linux-x64-gnu': 15.3.3
+      '@next/swc-linux-x64-musl': 15.3.3
+      '@next/swc-win32-arm64-msvc': 15.3.3
+      '@next/swc-win32-x64-msvc': 15.3.3
+      sharp: 0.34.2
+    transitivePeerDependencies:
+      - '@babel/core'
+      - babel-plugin-macros
+
+  object-assign@4.1.1: {}
+
+  object-inspect@1.13.4: {}
+
+  object-keys@1.1.1: {}
+
+  object.assign@4.1.7:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+      has-symbols: 1.1.0
+      object-keys: 1.1.1
+
+  object.entries@1.1.9:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  object.fromentries@2.0.8:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-object-atoms: 1.1.1
+
+  object.groupby@1.0.3:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+
+  object.values@1.2.1:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  optionator@0.9.4:
+    dependencies:
+      deep-is: 0.1.4
+      fast-levenshtein: 2.0.6
+      levn: 0.4.1
+      prelude-ls: 1.2.1
+      type-check: 0.4.0
+      word-wrap: 1.2.5
+
+  own-keys@1.0.1:
+    dependencies:
+      get-intrinsic: 1.3.0
+      object-keys: 1.1.1
+      safe-push-apply: 1.0.0
+
+  p-limit@3.1.0:
+    dependencies:
+      yocto-queue: 0.1.0
+
+  p-locate@5.0.0:
+    dependencies:
+      p-limit: 3.1.0
+
+  parent-module@1.0.1:
+    dependencies:
+      callsites: 3.1.0
+
+  path-exists@4.0.0: {}
+
+  path-key@3.1.1: {}
+
+  path-parse@1.0.7: {}
+
+  picocolors@1.1.1: {}
+
+  picomatch@2.3.1: {}
+
+  picomatch@4.0.2: {}
+
+  possible-typed-array-names@1.1.0: {}
+
+  postcss@8.4.31:
+    dependencies:
+      nanoid: 3.3.11
+      picocolors: 1.1.1
+      source-map-js: 1.2.1
+
+  postcss@8.5.6:
+    dependencies:
+      nanoid: 3.3.11
+      picocolors: 1.1.1
+      source-map-js: 1.2.1
+
+  prelude-ls@1.2.1: {}
+
+  prop-types@15.8.1:
+    dependencies:
+      loose-envify: 1.4.0
+      object-assign: 4.1.1
+      react-is: 16.13.1
+
+  punycode@2.3.1: {}
+
+  queue-microtask@1.2.3: {}
+
+  react-dom@19.1.0(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      scheduler: 0.26.0
+
+  react-hook-form@7.58.1(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+
+  react-is@16.13.1: {}
+
+  react-remove-scroll-bar@2.3.8(@types/react@19.1.8)(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      react-style-singleton: 2.2.3(@types/react@19.1.8)(react@19.1.0)
+      tslib: 2.8.1
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  react-remove-scroll@2.7.1(@types/react@19.1.8)(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      react-remove-scroll-bar: 2.3.8(@types/react@19.1.8)(react@19.1.0)
+      react-style-singleton: 2.2.3(@types/react@19.1.8)(react@19.1.0)
+      tslib: 2.8.1
+      use-callback-ref: 1.3.3(@types/react@19.1.8)(react@19.1.0)
+      use-sidecar: 1.1.3(@types/react@19.1.8)(react@19.1.0)
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  react-style-singleton@2.2.3(@types/react@19.1.8)(react@19.1.0):
+    dependencies:
+      get-nonce: 1.0.1
+      react: 19.1.0
+      tslib: 2.8.1
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  react@19.1.0: {}
+
+  reflect.getprototypeof@1.0.10:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      get-proto: 1.0.1
+      which-builtin-type: 1.2.1
+
+  regexp.prototype.flags@1.5.4:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-errors: 1.3.0
+      get-proto: 1.0.1
+      gopd: 1.2.0
+      set-function-name: 2.0.2
+
+  resolve-from@4.0.0: {}
+
+  resolve-pkg-maps@1.0.0: {}
+
+  resolve@1.22.10:
+    dependencies:
+      is-core-module: 2.16.1
+      path-parse: 1.0.7
+      supports-preserve-symlinks-flag: 1.0.0
+
+  resolve@2.0.0-next.5:
+    dependencies:
+      is-core-module: 2.16.1
+      path-parse: 1.0.7
+      supports-preserve-symlinks-flag: 1.0.0
+
+  reusify@1.1.0: {}
+
+  run-parallel@1.2.0:
+    dependencies:
+      queue-microtask: 1.2.3
+
+  safe-array-concat@1.1.3:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      get-intrinsic: 1.3.0
+      has-symbols: 1.1.0
+      isarray: 2.0.5
+
+  safe-push-apply@1.0.0:
+    dependencies:
+      es-errors: 1.3.0
+      isarray: 2.0.5
+
+  safe-regex-test@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-regex: 1.2.1
+
+  scheduler@0.26.0: {}
+
+  semver@6.3.1: {}
+
+  semver@7.7.2: {}
+
+  set-function-length@1.2.2:
+    dependencies:
+      define-data-property: 1.1.4
+      es-errors: 1.3.0
+      function-bind: 1.1.2
+      get-intrinsic: 1.3.0
+      gopd: 1.2.0
+      has-property-descriptors: 1.0.2
+
+  set-function-name@2.0.2:
+    dependencies:
+      define-data-property: 1.1.4
+      es-errors: 1.3.0
+      functions-have-names: 1.2.3
+      has-property-descriptors: 1.0.2
+
+  set-proto@1.0.0:
+    dependencies:
+      dunder-proto: 1.0.1
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+
+  sharp@0.34.2:
+    dependencies:
+      color: 4.2.3
+      detect-libc: 2.0.4
+      semver: 7.7.2
+    optionalDependencies:
+      '@img/sharp-darwin-arm64': 0.34.2
+      '@img/sharp-darwin-x64': 0.34.2
+      '@img/sharp-libvips-darwin-arm64': 1.1.0
+      '@img/sharp-libvips-darwin-x64': 1.1.0
+      '@img/sharp-libvips-linux-arm': 1.1.0
+      '@img/sharp-libvips-linux-arm64': 1.1.0
+      '@img/sharp-libvips-linux-ppc64': 1.1.0
+      '@img/sharp-libvips-linux-s390x': 1.1.0
+      '@img/sharp-libvips-linux-x64': 1.1.0
+      '@img/sharp-libvips-linuxmusl-arm64': 1.1.0
+      '@img/sharp-libvips-linuxmusl-x64': 1.1.0
+      '@img/sharp-linux-arm': 0.34.2
+      '@img/sharp-linux-arm64': 0.34.2
+      '@img/sharp-linux-s390x': 0.34.2
+      '@img/sharp-linux-x64': 0.34.2
+      '@img/sharp-linuxmusl-arm64': 0.34.2
+      '@img/sharp-linuxmusl-x64': 0.34.2
+      '@img/sharp-wasm32': 0.34.2
+      '@img/sharp-win32-arm64': 0.34.2
+      '@img/sharp-win32-ia32': 0.34.2
+      '@img/sharp-win32-x64': 0.34.2
+    optional: true
+
+  shebang-command@2.0.0:
+    dependencies:
+      shebang-regex: 3.0.0
+
+  shebang-regex@3.0.0: {}
+
+  side-channel-list@1.0.0:
+    dependencies:
+      es-errors: 1.3.0
+      object-inspect: 1.13.4
+
+  side-channel-map@1.0.1:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      object-inspect: 1.13.4
+
+  side-channel-weakmap@1.0.2:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      get-intrinsic: 1.3.0
+      object-inspect: 1.13.4
+      side-channel-map: 1.0.1
+
+  side-channel@1.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      object-inspect: 1.13.4
+      side-channel-list: 1.0.0
+      side-channel-map: 1.0.1
+      side-channel-weakmap: 1.0.2
+
+  simple-swizzle@0.2.2:
+    dependencies:
+      is-arrayish: 0.3.2
+    optional: true
+
+  sonner@2.0.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+
+  source-map-js@1.2.1: {}
+
+  stable-hash@0.0.5: {}
+
+  stop-iteration-iterator@1.1.0:
+    dependencies:
+      es-errors: 1.3.0
+      internal-slot: 1.1.0
+
+  streamsearch@1.1.0: {}
+
+  string.prototype.includes@2.0.1:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+
+  string.prototype.matchall@4.0.12:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-errors: 1.3.0
+      es-object-atoms: 1.1.1
+      get-intrinsic: 1.3.0
+      gopd: 1.2.0
+      has-symbols: 1.1.0
+      internal-slot: 1.1.0
+      regexp.prototype.flags: 1.5.4
+      set-function-name: 2.0.2
+      side-channel: 1.1.0
+
+  string.prototype.repeat@1.0.0:
+    dependencies:
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+
+  string.prototype.trim@1.2.10:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-data-property: 1.1.4
+      define-properties: 1.2.1
+      es-abstract: 1.24.0
+      es-object-atoms: 1.1.1
+      has-property-descriptors: 1.0.2
+
+  string.prototype.trimend@1.0.9:
+    dependencies:
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  string.prototype.trimstart@1.0.8:
+    dependencies:
+      call-bind: 1.0.8
+      define-properties: 1.2.1
+      es-object-atoms: 1.1.1
+
+  strip-bom@3.0.0: {}
+
+  strip-json-comments@3.1.1: {}
+
+  styled-jsx@5.1.6(react@19.1.0):
+    dependencies:
+      client-only: 0.0.1
+      react: 19.1.0
+
+  supports-color@7.2.0:
+    dependencies:
+      has-flag: 4.0.0
+
+  supports-preserve-symlinks-flag@1.0.0: {}
+
+  tailwind-merge@3.3.1: {}
+
+  tailwindcss-animate@1.0.7(tailwindcss@4.1.10):
+    dependencies:
+      tailwindcss: 4.1.10
+
+  tailwindcss@4.1.10: {}
+
+  tapable@2.2.2: {}
+
+  tar@7.4.3:
+    dependencies:
+      '@isaacs/fs-minipass': 4.0.1
+      chownr: 3.0.0
+      minipass: 7.1.2
+      minizlib: 3.0.2
+      mkdirp: 3.0.1
+      yallist: 5.0.0
+
+  tinyglobby@0.2.14:
+    dependencies:
+      fdir: 6.4.6(picomatch@4.0.2)
+      picomatch: 4.0.2
+
+  to-regex-range@5.0.1:
+    dependencies:
+      is-number: 7.0.0
+
+  ts-api-utils@2.1.0(typescript@5.8.3):
+    dependencies:
+      typescript: 5.8.3
+
+  tsconfig-paths@3.15.0:
+    dependencies:
+      '@types/json5': 0.0.29
+      json5: 1.0.2
+      minimist: 1.2.8
+      strip-bom: 3.0.0
+
+  tslib@2.8.1: {}
+
+  type-check@0.4.0:
+    dependencies:
+      prelude-ls: 1.2.1
+
+  typed-array-buffer@1.0.3:
+    dependencies:
+      call-bound: 1.0.4
+      es-errors: 1.3.0
+      is-typed-array: 1.1.15
+
+  typed-array-byte-length@1.0.3:
+    dependencies:
+      call-bind: 1.0.8
+      for-each: 0.3.5
+      gopd: 1.2.0
+      has-proto: 1.2.0
+      is-typed-array: 1.1.15
+
+  typed-array-byte-offset@1.0.4:
+    dependencies:
+      available-typed-arrays: 1.0.7
+      call-bind: 1.0.8
+      for-each: 0.3.5
+      gopd: 1.2.0
+      has-proto: 1.2.0
+      is-typed-array: 1.1.15
+      reflect.getprototypeof: 1.0.10
+
+  typed-array-length@1.0.7:
+    dependencies:
+      call-bind: 1.0.8
+      for-each: 0.3.5
+      gopd: 1.2.0
+      is-typed-array: 1.1.15
+      possible-typed-array-names: 1.1.0
+      reflect.getprototypeof: 1.0.10
+
+  typescript@5.8.3: {}
+
+  unbox-primitive@1.1.0:
+    dependencies:
+      call-bound: 1.0.4
+      has-bigints: 1.1.0
+      has-symbols: 1.1.0
+      which-boxed-primitive: 1.1.1
+
+  undici-types@6.21.0: {}
+
+  unrs-resolver@1.9.0:
+    dependencies:
+      napi-postinstall: 0.2.4
+    optionalDependencies:
+      '@unrs/resolver-binding-android-arm-eabi': 1.9.0
+      '@unrs/resolver-binding-android-arm64': 1.9.0
+      '@unrs/resolver-binding-darwin-arm64': 1.9.0
+      '@unrs/resolver-binding-darwin-x64': 1.9.0
+      '@unrs/resolver-binding-freebsd-x64': 1.9.0
+      '@unrs/resolver-binding-linux-arm-gnueabihf': 1.9.0
+      '@unrs/resolver-binding-linux-arm-musleabihf': 1.9.0
+      '@unrs/resolver-binding-linux-arm64-gnu': 1.9.0
+      '@unrs/resolver-binding-linux-arm64-musl': 1.9.0
+      '@unrs/resolver-binding-linux-ppc64-gnu': 1.9.0
+      '@unrs/resolver-binding-linux-riscv64-gnu': 1.9.0
+      '@unrs/resolver-binding-linux-riscv64-musl': 1.9.0
+      '@unrs/resolver-binding-linux-s390x-gnu': 1.9.0
+      '@unrs/resolver-binding-linux-x64-gnu': 1.9.0
+      '@unrs/resolver-binding-linux-x64-musl': 1.9.0
+      '@unrs/resolver-binding-wasm32-wasi': 1.9.0
+      '@unrs/resolver-binding-win32-arm64-msvc': 1.9.0
+      '@unrs/resolver-binding-win32-ia32-msvc': 1.9.0
+      '@unrs/resolver-binding-win32-x64-msvc': 1.9.0
+
+  uri-js@4.4.1:
+    dependencies:
+      punycode: 2.3.1
+
+  use-callback-ref@1.3.3(@types/react@19.1.8)(react@19.1.0):
+    dependencies:
+      react: 19.1.0
+      tslib: 2.8.1
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  use-sidecar@1.1.3(@types/react@19.1.8)(react@19.1.0):
+    dependencies:
+      detect-node-es: 1.1.0
+      react: 19.1.0
+      tslib: 2.8.1
+    optionalDependencies:
+      '@types/react': 19.1.8
+
+  which-boxed-primitive@1.1.1:
+    dependencies:
+      is-bigint: 1.1.0
+      is-boolean-object: 1.2.2
+      is-number-object: 1.1.1
+      is-string: 1.1.1
+      is-symbol: 1.1.1
+
+  which-builtin-type@1.2.1:
+    dependencies:
+      call-bound: 1.0.4
+      function.prototype.name: 1.1.8
+      has-tostringtag: 1.0.2
+      is-async-function: 2.1.1
+      is-date-object: 1.1.0
+      is-finalizationregistry: 1.1.1
+      is-generator-function: 1.1.0
+      is-regex: 1.2.1
+      is-weakref: 1.1.1
+      isarray: 2.0.5
+      which-boxed-primitive: 1.1.1
+      which-collection: 1.0.2
+      which-typed-array: 1.1.19
+
+  which-collection@1.0.2:
+    dependencies:
+      is-map: 2.0.3
+      is-set: 2.0.3
+      is-weakmap: 2.0.2
+      is-weakset: 2.0.4
+
+  which-typed-array@1.1.19:
+    dependencies:
+      available-typed-arrays: 1.0.7
+      call-bind: 1.0.8
+      call-bound: 1.0.4
+      for-each: 0.3.5
+      get-proto: 1.0.1
+      gopd: 1.2.0
+      has-tostringtag: 1.0.2
+
+  which@2.0.2:
+    dependencies:
+      isexe: 2.0.0
+
+  word-wrap@1.2.5: {}
+
+  yallist@5.0.0: {}
+
+  yocto-queue@0.1.0: {}
+
+  zod@3.25.67: {}
+
+  zustand@5.0.5(@types/react@19.1.8)(react@19.1.0):
+    optionalDependencies:
+      '@types/react': 19.1.8
+      react: 19.1.0
Index: frontend/pos/src/components/ui/form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/form.tsx b/frontend/pos/src/components/ui/form.tsx
new file mode 100644
--- /dev/null	(date 1750214549297)
+++ b/frontend/pos/src/components/ui/form.tsx	(date 1750214549297)
@@ -0,0 +1,167 @@
+"use client"
+
+import * as React from "react"
+import * as LabelPrimitive from "@radix-ui/react-label"
+import { Slot } from "@radix-ui/react-slot"
+import {
+  Controller,
+  FormProvider,
+  useFormContext,
+  useFormState,
+  type ControllerProps,
+  type FieldPath,
+  type FieldValues,
+} from "react-hook-form"
+
+import { cn } from "@/lib/utils"
+import { Label } from "@/components/ui/label"
+
+const Form = FormProvider
+
+type FormFieldContextValue<
+  TFieldValues extends FieldValues = FieldValues,
+  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
+> = {
+  name: TName
+}
+
+const FormFieldContext = React.createContext<FormFieldContextValue>(
+  {} as FormFieldContextValue
+)
+
+const FormField = <
+  TFieldValues extends FieldValues = FieldValues,
+  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
+>({
+  ...props
+}: ControllerProps<TFieldValues, TName>) => {
+  return (
+    <FormFieldContext.Provider value={{ name: props.name }}>
+      <Controller {...props} />
+    </FormFieldContext.Provider>
+  )
+}
+
+const useFormField = () => {
+  const fieldContext = React.useContext(FormFieldContext)
+  const itemContext = React.useContext(FormItemContext)
+  const { getFieldState } = useFormContext()
+  const formState = useFormState({ name: fieldContext.name })
+  const fieldState = getFieldState(fieldContext.name, formState)
+
+  if (!fieldContext) {
+    throw new Error("useFormField should be used within <FormField>")
+  }
+
+  const { id } = itemContext
+
+  return {
+    id,
+    name: fieldContext.name,
+    formItemId: `${id}-form-item`,
+    formDescriptionId: `${id}-form-item-description`,
+    formMessageId: `${id}-form-item-message`,
+    ...fieldState,
+  }
+}
+
+type FormItemContextValue = {
+  id: string
+}
+
+const FormItemContext = React.createContext<FormItemContextValue>(
+  {} as FormItemContextValue
+)
+
+function FormItem({ className, ...props }: React.ComponentProps<"div">) {
+  const id = React.useId()
+
+  return (
+    <FormItemContext.Provider value={{ id }}>
+      <div
+        data-slot="form-item"
+        className={cn("grid gap-2", className)}
+        {...props}
+      />
+    </FormItemContext.Provider>
+  )
+}
+
+function FormLabel({
+  className,
+  ...props
+}: React.ComponentProps<typeof LabelPrimitive.Root>) {
+  const { error, formItemId } = useFormField()
+
+  return (
+    <Label
+      data-slot="form-label"
+      data-error={!!error}
+      className={cn("data-[error=true]:text-destructive", className)}
+      htmlFor={formItemId}
+      {...props}
+    />
+  )
+}
+
+function FormControl({ ...props }: React.ComponentProps<typeof Slot>) {
+  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()
+
+  return (
+    <Slot
+      data-slot="form-control"
+      id={formItemId}
+      aria-describedby={
+        !error
+          ? `${formDescriptionId}`
+          : `${formDescriptionId} ${formMessageId}`
+      }
+      aria-invalid={!!error}
+      {...props}
+    />
+  )
+}
+
+function FormDescription({ className, ...props }: React.ComponentProps<"p">) {
+  const { formDescriptionId } = useFormField()
+
+  return (
+    <p
+      data-slot="form-description"
+      id={formDescriptionId}
+      className={cn("text-muted-foreground text-sm", className)}
+      {...props}
+    />
+  )
+}
+
+function FormMessage({ className, ...props }: React.ComponentProps<"p">) {
+  const { error, formMessageId } = useFormField()
+  const body = error ? String(error?.message ?? "") : props.children
+
+  if (!body) {
+    return null
+  }
+
+  return (
+    <p
+      data-slot="form-message"
+      id={formMessageId}
+      className={cn("text-destructive text-sm", className)}
+      {...props}
+    >
+      {body}
+    </p>
+  )
+}
+
+export {
+  useFormField,
+  Form,
+  FormItem,
+  FormLabel,
+  FormControl,
+  FormDescription,
+  FormMessage,
+  FormField,
+}
Index: frontend/manager/src/components/layout/sidebar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { useUIStore } from \"@/stores/ui\";\nimport { \n  LayoutDashboard, \n  Users, \n  Package, \n  ShoppingCart, \n  BarChart3,\n  ChevronDown,\n  User,\n  UserCheck,\n  UserX,\n  Tag,\n  Ruler,\n  CheckCircle,\n  Clock,\n  XCircle\n} from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\n\ninterface NavItem {\n  title: string;\n  href?: string;\n  icon: React.ComponentType<{ className?: string }>;\n  children?: NavItem[];\n}\n\nconst navItems: NavItem[] = [\n  {\n    title: \"Dashboard\",\n    href: \"/dashboard\",\n    icon: LayoutDashboard,\n  },\n  {\n    title: \"Người Dùng\",\n    icon: Users,\n    children: [\n      {\n        title: \"Quản lý\",\n        href: \"/users/managers\",\n        icon: User,\n      },\n      {\n        title: \"Nhân viên\",\n        href: \"/users/employees\", \n        icon: UserCheck,\n      },\n      {\n        title: \"Khách hàng\",\n        href: \"/users/customers\",\n        icon: UserX,\n      },\n    ],\n  },\n  {\n    title: \"Sản Phẩm\",\n    icon: Package,\n    children: [\n      {\n        title: \"Sản phẩm\",\n        href: \"/products\",\n        icon: Package,\n      },\n      {\n        title: \"Danh mục\",\n        href: \"/categories\",\n        icon: Tag,\n      },\n      {\n        title: \"Kích thước sản phẩm\",\n        href: \"/product-sizes\",\n        icon: Ruler,\n      },\n    ],\n  },\n  {\n    title: \"Đơn Hàng\",\n    icon: ShoppingCart,\n    children: [\n      {\n        title: \"Đã Hoàn Thành\",\n        href: \"/orders/completed\",\n        icon: CheckCircle,\n      },\n      {\n        title: \"Đang Xử Lý\",\n        href: \"/orders/processing\",\n        icon: Clock,\n      },\n      {\n        title: \"Đã Hủy\",\n        href: \"/orders/cancelled\",\n        icon: XCircle,\n      },\n    ],\n  },\n  {\n    title: \"Báo Cáo\",\n    href: \"/reports\",\n    icon: BarChart3,\n  },\n];\n\ninterface SidebarProps {\n  className?: string;\n}\n\nexport function Sidebar({ className }: SidebarProps) {\n  const pathname = usePathname();\n  const { sidebarCollapsed } = useUIStore();\n  const [openItems, setOpenItems] = React.useState<string[]>([]);\n\n  const toggleItem = (title: string) => {\n    setOpenItems(prev => \n      prev.includes(title) \n        ? prev.filter(item => item !== title)\n        : [...prev, title]\n    );\n  };\n\n  const renderNavItem = (item: NavItem, level: number = 0) => {\n    const hasChildren = item.children && item.children.length > 0;\n    const isOpen = openItems.includes(item.title);\n    const isActive = item.href ? pathname === item.href : false;\n\n    if (hasChildren) {\n      return (\n        <Collapsible key={item.title} open={isOpen} onOpenChange={() => toggleItem(item.title)}>\n          <CollapsibleTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              className={cn(\n                \"w-full justify-start gap-2 px-3 py-2 text-left font-normal\",\n                level > 0 && \"ml-4 pl-8\"\n              )}\n            >\n              <item.icon className=\"h-4 w-4\" />\n              <span className=\"flex-1\">{item.title}</span>\n              <ChevronDown className={cn(\"h-4 w-4 transition-transform\", isOpen && \"rotate-180\")} />\n            </Button>\n          </CollapsibleTrigger>\n          <CollapsibleContent className=\"space-y-1\">\n            {item.children?.map(child => renderNavItem(child, level + 1))}\n          </CollapsibleContent>\n        </Collapsible>\n      );\n    }\n\n    return (\n      <Button\n        key={item.title}\n        asChild\n        variant={isActive ? \"secondary\" : \"ghost\"}\n        className={cn(\n          \"w-full justify-start gap-2 px-3 py-2 font-normal\",\n          level > 0 && \"ml-4 pl-8\"\n        )}\n      >\n        <Link href={item.href!}>\n          <item.icon className=\"h-4 w-4\" />\n          <span>{item.title}</span>\n        </Link>\n      </Button>\n    );\n  };\n\n  return (\n    <div className={cn(\n      \"border-r bg-card transition-all duration-300\",\n      sidebarCollapsed ? \"w-16\" : \"w-64\",\n      className\n    )}>\n      <div className=\"p-6\">\n        <h2 className={cn(\n          \"text-lg font-semibold transition-opacity duration-300\",\n          sidebarCollapsed ? \"opacity-0\" : \"opacity-100\"\n        )}>\n          {!sidebarCollapsed && \"Quản Lý Cửa Hàng\"}\n        </h2>\n      </div>\n      <ScrollArea className=\"h-[calc(100vh-80px)]\">\n        <div className=\"space-y-1 p-2\">\n          {navItems.map(item => renderNavItem(item))}\n        </div>\n      </ScrollArea>\n    </div>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/layout/sidebar.tsx b/frontend/manager/src/components/layout/sidebar.tsx
--- a/frontend/manager/src/components/layout/sidebar.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/components/layout/sidebar.tsx	(date 1750227629229)
@@ -18,13 +18,17 @@
   Ruler,
   CheckCircle,
   Clock,
-  XCircle
+  XCircle,
+  Gift,
+  Percent,
+  Ticket,
+  Store,
+  Settings
 } from "lucide-react";
 
 import { cn } from "@/lib/utils";
 import { Button } from "@/components/ui/button";
 import { ScrollArea } from "@/components/ui/scroll-area";
-import { Separator } from "@/components/ui/separator";
 import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible";
 
 interface NavItem {
@@ -66,37 +70,37 @@
     icon: Package,
     children: [
       {
-        title: "Sản phẩm",
-        href: "/products",
-        icon: Package,
-      },
-      {
         title: "Danh mục",
-        href: "/categories",
+        href: "/products/categories",
         icon: Tag,
       },
       {
         title: "Kích thước sản phẩm",
-        href: "/product-sizes",
+        href: "/products/product-sizes",
         icon: Ruler,
       },
     ],
   },
   {
+    title: "Khuyến Mãi", 
+    href: "/promotions",
+    icon: Gift,
+  },
+  {
     title: "Đơn Hàng",
     icon: ShoppingCart,
     children: [
       {
+        title: "Đang Xử Lý",
+        href: "/orders/processing",
+        icon: Clock,
+      },
+      {
         title: "Đã Hoàn Thành",
         href: "/orders/completed",
         icon: CheckCircle,
       },
       {
-        title: "Đang Xử Lý",
-        href: "/orders/processing",
-        icon: Clock,
-      },
-      {
         title: "Đã Hủy",
         href: "/orders/cancelled",
         icon: XCircle,
@@ -108,6 +112,22 @@
     href: "/reports",
     icon: BarChart3,
   },
+  {
+    title: "Cài Đặt",
+    icon: Settings,
+    children: [
+      {
+        title: "Thông Tin Cá Nhân",
+        href: "/profile",
+        icon: User,
+      },
+      {
+        title: "Thông Tin Cửa Hàng",
+        href: "/store-info",
+        icon: Store,
+      },
+    ],
+  },
 ];
 
 interface SidebarProps {
Index: frontend/pos/components.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/components.json b/frontend/pos/components.json
new file mode 100644
--- /dev/null	(date 1750217721841)
+++ b/frontend/pos/components.json	(date 1750217721841)
@@ -0,0 +1,18 @@
+{
+  "$schema": "https://ui.shadcn.com/schema.json",
+  "style": "default",
+  "rsc": true,
+  "tsx": true,
+  "tailwind": {
+    "config": "tailwind.config.ts",
+    "css": "src/app/globals.css",
+    "baseColor": "slate",
+    "cssVariables": true,
+    "prefix": ""
+  },
+  "aliases": {
+    "components": "@/components",
+    "utils": "@/lib/utils",
+    "ui": "@/components/ui"
+  }
+} 
\ No newline at end of file
Index: frontend/pos/src/components/ui/input.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/input.tsx b/frontend/pos/src/components/ui/input.tsx
new file mode 100644
--- /dev/null	(date 1750214549301)
+++ b/frontend/pos/src/components/ui/input.tsx	(date 1750214549301)
@@ -0,0 +1,21 @@
+import * as React from "react"
+
+import { cn } from "@/lib/utils"
+
+function Input({ className, type, ...props }: React.ComponentProps<"input">) {
+  return (
+    <input
+      type={type}
+      data-slot="input"
+      className={cn(
+        "file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
+        "focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]",
+        "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export { Input }
Index: frontend/pos/src/components/ui/tooltip.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/tooltip.tsx b/frontend/pos/src/components/ui/tooltip.tsx
new file mode 100644
--- /dev/null	(date 1750225986413)
+++ b/frontend/pos/src/components/ui/tooltip.tsx	(date 1750225986413)
@@ -0,0 +1,61 @@
+"use client"
+
+import * as React from "react"
+import * as TooltipPrimitive from "@radix-ui/react-tooltip"
+
+import { cn } from "@/lib/utils"
+
+function TooltipProvider({
+  delayDuration = 0,
+  ...props
+}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {
+  return (
+    <TooltipPrimitive.Provider
+      data-slot="tooltip-provider"
+      delayDuration={delayDuration}
+      {...props}
+    />
+  )
+}
+
+function Tooltip({
+  ...props
+}: React.ComponentProps<typeof TooltipPrimitive.Root>) {
+  return (
+    <TooltipProvider>
+      <TooltipPrimitive.Root data-slot="tooltip" {...props} />
+    </TooltipProvider>
+  )
+}
+
+function TooltipTrigger({
+  ...props
+}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {
+  return <TooltipPrimitive.Trigger data-slot="tooltip-trigger" {...props} />
+}
+
+function TooltipContent({
+  className,
+  sideOffset = 0,
+  children,
+  ...props
+}: React.ComponentProps<typeof TooltipPrimitive.Content>) {
+  return (
+    <TooltipPrimitive.Portal>
+      <TooltipPrimitive.Content
+        data-slot="tooltip-content"
+        sideOffset={sideOffset}
+        className={cn(
+          "bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance",
+          className
+        )}
+        {...props}
+      >
+        {children}
+        <TooltipPrimitive.Arrow className="bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]" />
+      </TooltipPrimitive.Content>
+    </TooltipPrimitive.Portal>
+  )
+}
+
+export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }
Index: frontend/pos/src/components/ui/skeleton.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/skeleton.tsx b/frontend/pos/src/components/ui/skeleton.tsx
new file mode 100644
--- /dev/null	(date 1750225986413)
+++ b/frontend/pos/src/components/ui/skeleton.tsx	(date 1750225986413)
@@ -0,0 +1,13 @@
+import { cn } from "@/lib/utils"
+
+function Skeleton({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="skeleton"
+      className={cn("bg-accent animate-pulse rounded-md", className)}
+      {...props}
+    />
+  )
+}
+
+export { Skeleton }
Index: frontend/pos/src/components/ui/sonner.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/sonner.tsx b/frontend/pos/src/components/ui/sonner.tsx
new file mode 100644
--- /dev/null	(date 1750214675631)
+++ b/frontend/pos/src/components/ui/sonner.tsx	(date 1750214675631)
@@ -0,0 +1,25 @@
+"use client"
+
+import { useTheme } from "next-themes"
+import { Toaster as Sonner, ToasterProps } from "sonner"
+
+const Toaster = ({ ...props }: ToasterProps) => {
+  const { theme = "system" } = useTheme()
+
+  return (
+    <Sonner
+      theme={theme as ToasterProps["theme"]}
+      className="toaster group"
+      style={
+        {
+          "--normal-bg": "var(--popover)",
+          "--normal-text": "var(--popover-foreground)",
+          "--normal-border": "var(--border)",
+        } as React.CSSProperties
+      }
+      {...props}
+    />
+  )
+}
+
+export { Toaster }
Index: frontend/pos/.cursor/rules/naming-conventions.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/naming-conventions.mdc b/frontend/pos/.cursor/rules/naming-conventions.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/naming-conventions.mdc	(date 1750212011795)
@@ -0,0 +1,6 @@
+---
+description: Defines naming conventions for directories and components within the project.
+globs: **/*
+---
+- Use lowercase with dashes for directories (e.g., components/auth-wizard).
+- Favor named exports for components.
\ No newline at end of file
Index: frontend/pos/src/components/ui/badge.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/badge.tsx b/frontend/pos/src/components/ui/badge.tsx
new file mode 100644
--- /dev/null	(date 1750225986413)
+++ b/frontend/pos/src/components/ui/badge.tsx	(date 1750225986413)
@@ -0,0 +1,46 @@
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+
+import { cn } from "@/lib/utils"
+
+const badgeVariants = cva(
+  "inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden",
+  {
+    variants: {
+      variant: {
+        default:
+          "border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90",
+        secondary:
+          "border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90",
+        destructive:
+          "border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
+        outline:
+          "text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+    },
+  }
+)
+
+function Badge({
+  className,
+  variant,
+  asChild = false,
+  ...props
+}: React.ComponentProps<"span"> &
+  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {
+  const Comp = asChild ? Slot : "span"
+
+  return (
+    <Comp
+      data-slot="badge"
+      className={cn(badgeVariants({ variant }), className)}
+      {...props}
+    />
+  )
+}
+
+export { Badge, badgeVariants }
Index: frontend/pos/.cursor/rules/general-typescript-coding-style.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/general-typescript-coding-style.mdc b/frontend/pos/.cursor/rules/general-typescript-coding-style.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/general-typescript-coding-style.mdc	(date 1750212011795)
@@ -0,0 +1,9 @@
+---
+description: Applies general TypeScript coding style guidelines, including functional programming, descriptive variable names, and file structure.
+globs: **/*.ts
+---
+- Write concise, technical TypeScript code with accurate examples.
+- Use functional and declarative programming patterns; avoid classes.
+- Prefer iteration and modularization over code duplication.
+- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
+- Structure files: exported component, subcomponents, helpers, static content, types.
\ No newline at end of file
Index: frontend/pos/src/components/providers/auth-provider.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/providers/auth-provider.tsx b/frontend/pos/src/components/providers/auth-provider.tsx
new file mode 100644
--- /dev/null	(date 1750224888126)
+++ b/frontend/pos/src/components/providers/auth-provider.tsx	(date 1750224888126)
@@ -0,0 +1,22 @@
+"use client";
+
+import { useEffect } from "react";
+import { useAuthStore } from "@/stores/auth";
+
+interface AuthProviderProps {
+  children: React.ReactNode;
+}
+
+export function AuthProvider({ children }: AuthProviderProps) {
+  const { initializeAuth } = useAuthStore();
+
+  useEffect(() => {
+    // Initialize auth when component mounts
+    const cleanup = initializeAuth();
+    
+    // Return cleanup function if provided
+    return cleanup;
+  }, [initializeAuth]);
+
+  return <>{children}</>;
+} 
\ No newline at end of file
Index: frontend/pos/.cursor/rules/ui-and-styling.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/ui-and-styling.mdc b/frontend/pos/.cursor/rules/ui-and-styling.mdc
new file mode 100644
--- /dev/null	(date 1750212011796)
+++ b/frontend/pos/.cursor/rules/ui-and-styling.mdc	(date 1750212011796)
@@ -0,0 +1,12 @@
+---
+description: Defines UI and styling guidelines, recommending the use of Shadcn UI, Radix, and Tailwind Aria, as well as responsive design practices.
+globs: **/*.{js,**/*.ts,**/*.jsx,**/*.tsx
+alwaysApply: false
+---
+- Use Shadcn UI, Radix, and Tailwind Aria for components and styling.
+- Implement responsive design with Tailwind CSS; use a desktop-first approach.
+- Prefer navigation page for edit, update data, dialog for create new data.
+- Not nullable fields should be mark as required.
+- Form should be placeholder example by vietnamese for fields.
+- Have a breadcrumb for navigation page.
+- Shadcn sonner for toast notification.
\ No newline at end of file
Index: frontend/pos/src/components/ui/dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/dialog.tsx b/frontend/pos/src/components/ui/dialog.tsx
new file mode 100644
--- /dev/null	(date 1750225986413)
+++ b/frontend/pos/src/components/ui/dialog.tsx	(date 1750225986413)
@@ -0,0 +1,143 @@
+"use client"
+
+import * as React from "react"
+import * as DialogPrimitive from "@radix-ui/react-dialog"
+import { XIcon } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+function Dialog({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Root>) {
+  return <DialogPrimitive.Root data-slot="dialog" {...props} />
+}
+
+function DialogTrigger({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {
+  return <DialogPrimitive.Trigger data-slot="dialog-trigger" {...props} />
+}
+
+function DialogPortal({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Portal>) {
+  return <DialogPrimitive.Portal data-slot="dialog-portal" {...props} />
+}
+
+function DialogClose({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Close>) {
+  return <DialogPrimitive.Close data-slot="dialog-close" {...props} />
+}
+
+function DialogOverlay({
+  className,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {
+  return (
+    <DialogPrimitive.Overlay
+      data-slot="dialog-overlay"
+      className={cn(
+        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DialogContent({
+  className,
+  children,
+  showCloseButton = true,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Content> & {
+  showCloseButton?: boolean
+}) {
+  return (
+    <DialogPortal data-slot="dialog-portal">
+      <DialogOverlay />
+      <DialogPrimitive.Content
+        data-slot="dialog-content"
+        className={cn(
+          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
+          className
+        )}
+        {...props}
+      >
+        {children}
+        {showCloseButton && (
+          <DialogPrimitive.Close
+            data-slot="dialog-close"
+            className="ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4"
+          >
+            <XIcon />
+            <span className="sr-only">Close</span>
+          </DialogPrimitive.Close>
+        )}
+      </DialogPrimitive.Content>
+    </DialogPortal>
+  )
+}
+
+function DialogHeader({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="dialog-header"
+      className={cn("flex flex-col gap-2 text-center sm:text-left", className)}
+      {...props}
+    />
+  )
+}
+
+function DialogFooter({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="dialog-footer"
+      className={cn(
+        "flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DialogTitle({
+  className,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Title>) {
+  return (
+    <DialogPrimitive.Title
+      data-slot="dialog-title"
+      className={cn("text-lg leading-none font-semibold", className)}
+      {...props}
+    />
+  )
+}
+
+function DialogDescription({
+  className,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Description>) {
+  return (
+    <DialogPrimitive.Description
+      data-slot="dialog-description"
+      className={cn("text-muted-foreground text-sm", className)}
+      {...props}
+    />
+  )
+}
+
+export {
+  Dialog,
+  DialogClose,
+  DialogContent,
+  DialogDescription,
+  DialogFooter,
+  DialogHeader,
+  DialogOverlay,
+  DialogPortal,
+  DialogTitle,
+  DialogTrigger,
+}
Index: frontend/pos/.cursor/rules/error-handling-and-validation.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/error-handling-and-validation.mdc b/frontend/pos/.cursor/rules/error-handling-and-validation.mdc
new file mode 100644
--- /dev/null	(date 1750212011794)
+++ b/frontend/pos/.cursor/rules/error-handling-and-validation.mdc	(date 1750212011794)
@@ -0,0 +1,10 @@
+---
+description: Focuses on error handling and validation practices, including early error handling, proper logging, and Zod usage.
+globs: **/*
+---
+- Prioritize error handling: handle errors and edge cases early.
+- Use early returns and guard clauses.
+- Implement proper error logging and user-friendly messages.
+- Use Zod for form validation.
+- Model expected errors as return values in Server Actions.
+- Use error boundaries for unexpected errors.
\ No newline at end of file
Index: frontend/pos/pos.code-workspace
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/pos.code-workspace b/frontend/pos/pos.code-workspace
new file mode 100644
--- /dev/null	(date 1750213757895)
+++ b/frontend/pos/pos.code-workspace	(date 1750213757895)
@@ -0,0 +1,14 @@
+{
+	"folders": [
+		{
+			"path": "."
+		},
+		{
+			"path": "../../backend"
+		},
+		{
+			"path": "../../frontend/manager"
+		}
+	],
+	"settings": {}
+}
\ No newline at end of file
Index: frontend/pos/src/components/ui/dropdown-menu.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/dropdown-menu.tsx b/frontend/pos/src/components/ui/dropdown-menu.tsx
new file mode 100644
--- /dev/null	(date 1750225986413)
+++ b/frontend/pos/src/components/ui/dropdown-menu.tsx	(date 1750225986413)
@@ -0,0 +1,257 @@
+"use client"
+
+import * as React from "react"
+import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
+import { CheckIcon, ChevronRightIcon, CircleIcon } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+function DropdownMenu({
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {
+  return <DropdownMenuPrimitive.Root data-slot="dropdown-menu" {...props} />
+}
+
+function DropdownMenuPortal({
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {
+  return (
+    <DropdownMenuPrimitive.Portal data-slot="dropdown-menu-portal" {...props} />
+  )
+}
+
+function DropdownMenuTrigger({
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {
+  return (
+    <DropdownMenuPrimitive.Trigger
+      data-slot="dropdown-menu-trigger"
+      {...props}
+    />
+  )
+}
+
+function DropdownMenuContent({
+  className,
+  sideOffset = 4,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {
+  return (
+    <DropdownMenuPrimitive.Portal>
+      <DropdownMenuPrimitive.Content
+        data-slot="dropdown-menu-content"
+        sideOffset={sideOffset}
+        className={cn(
+          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md",
+          className
+        )}
+        {...props}
+      />
+    </DropdownMenuPrimitive.Portal>
+  )
+}
+
+function DropdownMenuGroup({
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {
+  return (
+    <DropdownMenuPrimitive.Group data-slot="dropdown-menu-group" {...props} />
+  )
+}
+
+function DropdownMenuItem({
+  className,
+  inset,
+  variant = "default",
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {
+  inset?: boolean
+  variant?: "default" | "destructive"
+}) {
+  return (
+    <DropdownMenuPrimitive.Item
+      data-slot="dropdown-menu-item"
+      data-inset={inset}
+      data-variant={variant}
+      className={cn(
+        "focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DropdownMenuCheckboxItem({
+  className,
+  children,
+  checked,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {
+  return (
+    <DropdownMenuPrimitive.CheckboxItem
+      data-slot="dropdown-menu-checkbox-item"
+      className={cn(
+        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
+        className
+      )}
+      checked={checked}
+      {...props}
+    >
+      <span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center">
+        <DropdownMenuPrimitive.ItemIndicator>
+          <CheckIcon className="size-4" />
+        </DropdownMenuPrimitive.ItemIndicator>
+      </span>
+      {children}
+    </DropdownMenuPrimitive.CheckboxItem>
+  )
+}
+
+function DropdownMenuRadioGroup({
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {
+  return (
+    <DropdownMenuPrimitive.RadioGroup
+      data-slot="dropdown-menu-radio-group"
+      {...props}
+    />
+  )
+}
+
+function DropdownMenuRadioItem({
+  className,
+  children,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {
+  return (
+    <DropdownMenuPrimitive.RadioItem
+      data-slot="dropdown-menu-radio-item"
+      className={cn(
+        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
+        className
+      )}
+      {...props}
+    >
+      <span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center">
+        <DropdownMenuPrimitive.ItemIndicator>
+          <CircleIcon className="size-2 fill-current" />
+        </DropdownMenuPrimitive.ItemIndicator>
+      </span>
+      {children}
+    </DropdownMenuPrimitive.RadioItem>
+  )
+}
+
+function DropdownMenuLabel({
+  className,
+  inset,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {
+  inset?: boolean
+}) {
+  return (
+    <DropdownMenuPrimitive.Label
+      data-slot="dropdown-menu-label"
+      data-inset={inset}
+      className={cn(
+        "px-2 py-1.5 text-sm font-medium data-[inset]:pl-8",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DropdownMenuSeparator({
+  className,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {
+  return (
+    <DropdownMenuPrimitive.Separator
+      data-slot="dropdown-menu-separator"
+      className={cn("bg-border -mx-1 my-1 h-px", className)}
+      {...props}
+    />
+  )
+}
+
+function DropdownMenuShortcut({
+  className,
+  ...props
+}: React.ComponentProps<"span">) {
+  return (
+    <span
+      data-slot="dropdown-menu-shortcut"
+      className={cn(
+        "text-muted-foreground ml-auto text-xs tracking-widest",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DropdownMenuSub({
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {
+  return <DropdownMenuPrimitive.Sub data-slot="dropdown-menu-sub" {...props} />
+}
+
+function DropdownMenuSubTrigger({
+  className,
+  inset,
+  children,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {
+  inset?: boolean
+}) {
+  return (
+    <DropdownMenuPrimitive.SubTrigger
+      data-slot="dropdown-menu-sub-trigger"
+      data-inset={inset}
+      className={cn(
+        "focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8",
+        className
+      )}
+      {...props}
+    >
+      {children}
+      <ChevronRightIcon className="ml-auto size-4" />
+    </DropdownMenuPrimitive.SubTrigger>
+  )
+}
+
+function DropdownMenuSubContent({
+  className,
+  ...props
+}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {
+  return (
+    <DropdownMenuPrimitive.SubContent
+      data-slot="dropdown-menu-sub-content"
+      className={cn(
+        "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export {
+  DropdownMenu,
+  DropdownMenuPortal,
+  DropdownMenuTrigger,
+  DropdownMenuContent,
+  DropdownMenuGroup,
+  DropdownMenuLabel,
+  DropdownMenuItem,
+  DropdownMenuCheckboxItem,
+  DropdownMenuRadioGroup,
+  DropdownMenuRadioItem,
+  DropdownMenuSeparator,
+  DropdownMenuShortcut,
+  DropdownMenuSub,
+  DropdownMenuSubTrigger,
+  DropdownMenuSubContent,
+}
Index: frontend/manager/src/types/api.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Types dựa trên API controllers\n\n// Backend response structure\nexport interface BackendManagerResponse {\n  manager_id: number;\n  account_id: number;\n  last_name: string;\n  first_name: string;\n  gender: 'MALE' | 'FEMALE' | null;\n  phone: string;\n  email: string;\n  created_at: string;\n  updated_at: string;\n  account?: {\n    account_id: number;\n    role_id: number;\n    username: string;\n    is_active: boolean;\n    is_locked: boolean;\n    last_login: string | null;\n    created_at: string;\n    updated_at: string;\n    role: any;\n  };\n}\n\n// Frontend Manager interface (transformed)\nexport interface Manager {\n  id: number;\n  accountId: number;\n  name: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  gender: 'MALE' | 'FEMALE' | null;\n  password?: string;\n  avatar?: string;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n  permissions?: string[];\n  username?: string;\n  lastLogin?: Date;\n  role?: any;\n}\n\n// Utility function để transform backend response\nexport function transformManagerResponse(backendManager: BackendManagerResponse): Manager {\n  return {\n    id: backendManager.manager_id,\n    accountId: backendManager.account_id,\n    name: `${backendManager.first_name} ${backendManager.last_name}`,\n    firstName: backendManager.first_name,\n    lastName: backendManager.last_name,\n    email: backendManager.email,\n    phone: backendManager.phone,\n    gender: backendManager.gender,\n    isActive: backendManager.account?.is_active ?? true,\n    createdAt: new Date(backendManager.created_at),\n    updatedAt: new Date(backendManager.updated_at),\n    permissions: ['MANAGE_USERS', 'MANAGE_ORDERS', 'MANAGE_PRODUCTS'], // Mock permissions\n    username: backendManager.account?.username,\n    lastLogin: backendManager.account?.last_login ? new Date(backendManager.account.last_login) : undefined,\n    role: backendManager.account?.role,\n  };\n}\n\n// Backend response structure cho Employee\nexport interface BackendEmployeeResponse {\n  employee_id: number;\n  account_id: number;\n  last_name: string;\n  first_name: string;\n  email: string;\n  phone: string;\n  position: string;\n  created_at: string;\n  updated_at: string;\n  account?: {\n    account_id: number;\n    role_id: number;\n    username: string;\n    is_active: boolean;\n    is_locked: boolean;\n    last_login: string | null;\n    created_at: string;\n    updated_at: string;\n    role: any;\n  };\n}\n\n// Frontend Employee interface (transformed)\nexport interface Employee {\n  id: number;\n  accountId: number;\n  name: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  position: string;\n  createdAt: Date;\n  updatedAt: Date;\n  username?: string;\n  lastLogin?: Date;\n  role?: any;\n}\n\n// Utility function để transform backend employee response\nexport function transformEmployeeResponse(backendEmployee: BackendEmployeeResponse): Employee {\n  return {\n    id: backendEmployee.employee_id,\n    accountId: backendEmployee.account_id,\n    name: `${backendEmployee.first_name} ${backendEmployee.last_name}`,\n    firstName: backendEmployee.first_name,\n    lastName: backendEmployee.last_name,\n    email: backendEmployee.email,\n    phone: backendEmployee.phone,\n    position: backendEmployee.position,\n    createdAt: new Date(backendEmployee.created_at),\n    updatedAt: new Date(backendEmployee.updated_at),\n    username: backendEmployee.account?.username,\n    lastLogin: backendEmployee.account?.last_login ? new Date(backendEmployee.account.last_login) : undefined,\n    role: backendEmployee.account?.role,\n  };\n}\n\n// Backend response structure cho Customer\nexport interface BackendCustomerResponse {\n  customer_id: number;\n  membership_type_id: number;\n  last_name?: string;\n  first_name?: string;\n  phone: string;\n  current_points?: number;\n  gender?: 'MALE' | 'FEMALE' | 'OTHER';\n  created_at: string;\n  updated_at: string;\n  account?: {\n    account_id: number;\n    role_id: number;\n    username: string;\n    is_active: boolean;\n    is_locked: boolean;\n    last_login: string | null;\n    created_at: string;\n    updated_at: string;\n    role: any;\n  };\n  membership_type?: {\n    membership_type_id: number;\n    type: string;\n    discount_value: number;\n    required_point: number;\n    description?: string;\n    valid_until?: string;\n    is_active: boolean;\n    created_at: string;\n    updated_at: string;\n  };\n}\n\n// Frontend Customer interface (transformed)\nexport interface Customer {\n  id: number;\n  membershipTypeId: number;\n  name: string;\n  firstName?: string;\n  lastName?: string;\n  phone: string;\n  currentPoints?: number;\n  gender?: 'MALE' | 'FEMALE' | 'OTHER';\n  createdAt: Date;\n  updatedAt: Date;\n  username?: string;\n  lastLogin?: Date;\n  role?: any;\n  membershipType?: MembershipType;\n}\n\n// Utility function để transform backend customer response\nexport function transformCustomerResponse(backendCustomer: BackendCustomerResponse): Customer {\n  return {\n    id: backendCustomer.customer_id,\n    membershipTypeId: backendCustomer.membership_type_id,\n    name: backendCustomer.first_name && backendCustomer.last_name \n      ? `${backendCustomer.first_name} ${backendCustomer.last_name}` \n      : backendCustomer.phone,\n    firstName: backendCustomer.first_name,\n    lastName: backendCustomer.last_name,\n    phone: backendCustomer.phone,\n    currentPoints: backendCustomer.current_points,\n    gender: backendCustomer.gender,\n    createdAt: new Date(backendCustomer.created_at),\n    updatedAt: new Date(backendCustomer.updated_at),\n    username: backendCustomer.account?.username,\n    lastLogin: backendCustomer.account?.last_login ? new Date(backendCustomer.account.last_login) : undefined,\n    role: backendCustomer.account?.role,\n    membershipType: backendCustomer.membership_type ? transformMembershipTypeResponse(backendCustomer.membership_type) : undefined,\n  };\n}\n\n// Backend response structure cho MembershipType\nexport interface BackendMembershipTypeResponse {\n  membership_type_id: number;\n  type: string;\n  discount_value: number;\n  required_point: number;\n  description?: string;\n  valid_until?: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n  customers?: BackendCustomerResponse[];\n}\n\n// Frontend MembershipType interface (transformed)\nexport interface MembershipType {\n  id: number;\n  type: string;\n  discountValue: number;\n  requiredPoint: number;\n  description?: string;\n  validUntil?: Date;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n  customers?: Customer[];\n}\n\n// Utility function để transform backend membership type response\nexport function transformMembershipTypeResponse(backendMembershipType: BackendMembershipTypeResponse): MembershipType {\n  return {\n    id: backendMembershipType.membership_type_id,\n    type: backendMembershipType.type,\n    discountValue: backendMembershipType.discount_value,\n    requiredPoint: backendMembershipType.required_point,\n    description: backendMembershipType.description,\n    validUntil: backendMembershipType.valid_until ? new Date(backendMembershipType.valid_until) : undefined,\n    isActive: backendMembershipType.is_active,\n    createdAt: new Date(backendMembershipType.created_at),\n    updatedAt: new Date(backendMembershipType.updated_at),\n    customers: backendMembershipType.customers?.map(transformCustomerResponse),\n  };\n}\n\n// Order interface cho đơn hàng\nexport interface Order {\n  id: number;\n  customerName?: string;\n  customerId?: number;\n  employeeId?: number;\n  totalAmount: number;\n  finalAmount: number;\n  status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'CANCELLED';\n  paymentMethod?: string;\n  paymentStatus?: string;\n  notes?: string;\n  createdAt: Date;\n  updatedAt: Date;\n  items?: OrderItem[];\n}\n\n// Order item interface\nexport interface OrderItem {\n  id: number;\n  orderId: number;\n  productId: number;\n  productName: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n  notes?: string;\n}\n\n// DTOs for API requests (match backend structure)\nexport interface CreateManagerDto {\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  gender?: 'MALE' | 'FEMALE';\n  username: string;\n  password: string;\n}\n\nexport interface UpdateManagerDto {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  phone?: string;\n  gender?: 'MALE' | 'FEMALE';\n  username?: string;\n  password?: string;\n}\n\nexport interface BulkDeleteManagerDto {\n  ids: number[];\n}\n\n// DTOs for API requests (match backend structure) - cập nhật Employee DTOs\nexport interface CreateEmployeeDto {\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  position: string;\n  username: string;\n}\n\nexport interface UpdateEmployeeDto {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  phone?: string;\n  position?: string;\n  username?: string;\n}\n\nexport interface BulkDeleteEmployeeDto {\n  ids: number[];\n}\n\n// DTOs for API requests (match backend structure) - Customer DTOs\nexport interface CreateCustomerDto {\n  membership_type_id: number;\n  last_name?: string;\n  first_name?: string;\n  phone: string;\n  current_points?: number;\n  gender?: 'MALE' | 'FEMALE' | 'OTHER';\n  username?: string;\n}\n\nexport interface UpdateCustomerDto {\n  membership_type_id?: number;\n  last_name?: string;\n  first_name?: string;\n  phone?: string;\n  current_points?: number;\n  gender?: 'MALE' | 'FEMALE' | 'OTHER';\n  username?: string;\n}\n\nexport interface BulkDeleteCustomerDto {\n  ids: number[];\n}\n\n// DTOs for API requests (match backend structure) - MembershipType DTOs\nexport interface CreateMembershipTypeDto {\n  type: string;\n  discount_value: number;\n  required_point: number;\n  description?: string;\n  valid_until?: string;\n  is_active?: boolean;\n}\n\nexport interface UpdateMembershipTypeDto {\n  type?: string;\n  discount_value?: number;\n  required_point?: number;\n  description?: string;\n  valid_until?: string;\n  is_active?: boolean;\n}\n\n// API Response types\nexport interface ApiResponse<T> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\n// Frontend pagination response interface\nexport interface PaginatedResponse<T> {\n  data: T[];\n  total: number;\n  page: number;\n  limit: number;\n  totalPages: number;\n}\n\n// Backend pagination response structure (for internal service use)\nexport interface BackendPaginatedResponse<T> {\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrev: boolean;\n  };\n}\n\n// Backend bulk delete response structure (for internal service use)\nexport interface BulkDeleteResponse {\n  deleted: number[];\n  failed: { id: number; reason: string }[];\n  summary: { total: number; success: number; failed: number };\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/types/api.ts b/frontend/manager/src/types/api.ts
--- a/frontend/manager/src/types/api.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/types/api.ts	(date 1750227326241)
@@ -20,7 +20,7 @@
     last_login: string | null;
     created_at: string;
     updated_at: string;
-    role: any;
+    role: Record<string, unknown>;
   };
 }
 
@@ -86,7 +86,7 @@
     last_login: string | null;
     created_at: string;
     updated_at: string;
-    role: any;
+    role: Record<string, unknown>;
   };
 }
 
@@ -146,7 +146,7 @@
     last_login: string | null;
     created_at: string;
     updated_at: string;
-    role: any;
+    role: Record<string, unknown>;
   };
   membership_type?: {
     membership_type_id: number;
@@ -245,34 +245,595 @@
   };
 }
 
-// Order interface cho đơn hàng
+// =============================================================================
+// ORDER & PAYMENT TYPES
+// =============================================================================
+
+// Backend response structure cho Order 
+export interface BackendOrderResponse {
+  order_id: number;
+  employee_id?: number;
+  customer_id?: number;
+  order_time?: string;
+  total_amount: number;
+  final_amount: number;
+  status: 'PROCESSING' | 'CANCELLED' | 'COMPLETED';
+  customize_note?: string;
+  created_at: string;
+  updated_at: string;
+  customer?: BackendCustomerResponse;
+  employee?: BackendEmployeeResponse;
+  order_product?: BackendOrderProductResponse[];
+  order_discount?: BackendOrderDiscountResponse[];
+  payment?: BackendPaymentResponse[];
+}
+
+// Backend response structure cho OrderProduct
+export interface BackendOrderProductResponse {
+  order_product_id: number;
+  order_id: number;
+  product_price_id: number;
+  quantity: number;
+  option?: string;
+  created_at: string;
+  updated_at: string;
+  product_price?: {
+    product_price_id: number;
+    product_id: number;
+    size_id: number;
+    price: number;
+    is_active: boolean;
+    created_at: string;
+    updated_at: string;
+    product?: BackendProductResponse;
+    product_size?: BackendProductSizeResponse;
+  };
+}
+
+// Backend response structure cho OrderDiscount
+export interface BackendOrderDiscountResponse {
+  order_discount_id: number;
+  order_id: number;
+  discount_id: number;
+  discount_amount: number;
+  created_at: string;
+  updated_at: string;
+  discount?: BackendDiscountResponse;
+}
+
+// Backend response structure cho Payment
+export interface BackendPaymentResponse {
+  payment_id: number;
+  order_id: number;
+  payment_method_id: number;
+  status: 'PROCESSING' | 'PAID' | 'CANCELLED';
+  amount_paid?: number;
+  change_amount?: number;
+  payment_time?: string;
+  created_at: string;
+  updated_at: string;
+  payment_method?: {
+    payment_method_id: number;
+    name: string;
+    description?: string;
+    created_at: string;
+    updated_at: string;
+  };
+}
+
+// Frontend Order interface (transformed)
 export interface Order {
   id: number;
-  customerName?: string;
+  employeeId?: number;
   customerId?: number;
-  employeeId?: number;
+  orderTime?: Date;
   totalAmount: number;
   finalAmount: number;
-  status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'CANCELLED';
+  status: 'PROCESSING' | 'CANCELLED' | 'COMPLETED';
+  customizeNote?: string;
+  createdAt: Date;
+  updatedAt: Date;
+  customer?: Customer;
+  employee?: Employee;
+  products?: OrderProduct[];
+  discounts?: OrderDiscount[];
+  payments?: Payment[];
+  // Computed properties
+  customerName?: string;
+  employeeName?: string;
+  paymentStatus?: 'PROCESSING' | 'PAID' | 'CANCELLED';
   paymentMethod?: string;
-  paymentStatus?: string;
-  notes?: string;
+}
+
+// Frontend OrderProduct interface (transformed)
+export interface OrderProduct {
+  id: number;
+  orderId: number;
+  productPriceId: number;
+  quantity: number;
+  option?: string;
   createdAt: Date;
   updatedAt: Date;
-  items?: OrderItem[];
+  productPrice?: ProductPrice;
+  // Computed properties
+  productName?: string;
+  sizeName?: string;
+  unitPrice?: number;
+  totalPrice?: number;
 }
 
-// Order item interface
-export interface OrderItem {
+// Frontend OrderDiscount interface (transformed)
+export interface OrderDiscount {
   id: number;
   orderId: number;
+  discountId: number;
+  discountAmount: number;
+  createdAt: Date;
+  updatedAt: Date;
+  discount?: Discount;
+  // Computed properties
+  discountName?: string;
+}
+
+// Frontend Payment interface (transformed)
+export interface Payment {
+  id: number;
+  orderId: number;
+  paymentMethodId: number;
+  status: 'PROCESSING' | 'PAID' | 'CANCELLED';
+  amountPaid?: number;
+  changeAmount?: number;
+  paymentTime?: Date;
+  createdAt: Date;
+  updatedAt: Date;
+  paymentMethod?: {
+    id: number;
+    name: string;
+    description?: string;
+    createdAt: Date;
+    updatedAt: Date;
+  };
+}
+
+// Transform functions
+export function transformOrderResponse(backendOrder: BackendOrderResponse): Order {
+  const customer = backendOrder.customer ? transformCustomerResponse(backendOrder.customer) : undefined;
+  const employee = backendOrder.employee ? transformEmployeeResponse(backendOrder.employee) : undefined;
+  
+  return {
+    id: backendOrder.order_id,
+    employeeId: backendOrder.employee_id,
+    customerId: backendOrder.customer_id,
+    orderTime: backendOrder.order_time ? new Date(backendOrder.order_time) : undefined,
+    totalAmount: backendOrder.total_amount,
+    finalAmount: backendOrder.final_amount,
+    status: backendOrder.status,
+    customizeNote: backendOrder.customize_note,
+    createdAt: new Date(backendOrder.created_at),
+    updatedAt: new Date(backendOrder.updated_at),
+    customer,
+    employee,
+    products: backendOrder.order_product?.map(transformOrderProductResponse),
+    discounts: backendOrder.order_discount?.map(transformOrderDiscountResponse),
+    payments: backendOrder.payment?.map(transformPaymentResponse),
+    // Computed properties
+    customerName: customer ? customer.name : undefined,
+    employeeName: employee ? employee.name : undefined,
+    paymentStatus: backendOrder.payment?.[0]?.status,
+    paymentMethod: backendOrder.payment?.[0]?.payment_method?.name,
+  };
+}
+
+export function transformOrderProductResponse(backendOrderProduct: BackendOrderProductResponse): OrderProduct {
+  return {
+    id: backendOrderProduct.order_product_id,
+    orderId: backendOrderProduct.order_id,
+    productPriceId: backendOrderProduct.product_price_id,
+    quantity: backendOrderProduct.quantity,
+    option: backendOrderProduct.option,
+    createdAt: new Date(backendOrderProduct.created_at),
+    updatedAt: new Date(backendOrderProduct.updated_at),
+    productPrice: backendOrderProduct.product_price ? transformProductPriceResponse(backendOrderProduct.product_price) : undefined,
+    // Computed properties
+    productName: backendOrderProduct.product_price?.product?.name,
+    sizeName: backendOrderProduct.product_price?.product_size?.name,
+    unitPrice: backendOrderProduct.product_price?.price,
+    totalPrice: backendOrderProduct.product_price ? backendOrderProduct.product_price.price * backendOrderProduct.quantity : 0,
+  };
+}
+
+export function transformOrderDiscountResponse(backendOrderDiscount: BackendOrderDiscountResponse): OrderDiscount {
+  return {
+    id: backendOrderDiscount.order_discount_id,
+    orderId: backendOrderDiscount.order_id,
+    discountId: backendOrderDiscount.discount_id,
+    discountAmount: backendOrderDiscount.discount_amount,
+    createdAt: new Date(backendOrderDiscount.created_at),
+    updatedAt: new Date(backendOrderDiscount.updated_at),
+    discount: backendOrderDiscount.discount ? transformDiscountResponse(backendOrderDiscount.discount) : undefined,
+    // Computed properties
+    discountName: backendOrderDiscount.discount?.name,
+  };
+}
+
+export function transformPaymentResponse(backendPayment: BackendPaymentResponse): Payment {
+  return {
+    id: backendPayment.payment_id,
+    orderId: backendPayment.order_id,
+    paymentMethodId: backendPayment.payment_method_id,
+    status: backendPayment.status,
+    amountPaid: backendPayment.amount_paid,
+    changeAmount: backendPayment.change_amount,
+    paymentTime: backendPayment.payment_time ? new Date(backendPayment.payment_time) : undefined,
+    createdAt: new Date(backendPayment.created_at),
+    updatedAt: new Date(backendPayment.updated_at),
+    paymentMethod: backendPayment.payment_method ? {
+      id: backendPayment.payment_method.payment_method_id,
+      name: backendPayment.payment_method.name,
+      description: backendPayment.payment_method.description,
+      createdAt: new Date(backendPayment.payment_method.created_at),
+      updatedAt: new Date(backendPayment.payment_method.updated_at),
+    } : undefined,
+  };
+}
+
+// Order DTOs
+export interface CreateOrderDto {
+  employee_id: number;
+  customer_id?: number;
+  customize_note?: string;
+  products: {
+    product_price_id: number;
+    quantity: number;
+    option?: string;
+  }[];
+  discounts?: {
+    discount_id: number;
+  }[];
+}
+
+export interface UpdateOrderDto {
+  employee_id?: number;
+  customer_id?: number;
+  customize_note?: string;
+  status?: 'PROCESSING' | 'CANCELLED' | 'COMPLETED';
+  products?: {
+    product_price_id: number;
+    quantity: number;
+    option?: string;
+  }[];
+  discounts?: {
+    discount_id: number;
+  }[];
+}
+
+// Payment DTOs
+export interface CreatePaymentDto {
+  order_id: number;
+  payment_method_id: number;
+  amount_paid: number;
+  payment_time?: string;
+}
+
+export interface UpdatePaymentDto {
+  amount_paid?: number;
+  payment_time?: string;
+}
+
+// =============================================================================
+
+// Backend response structure cho Discount
+export interface BackendDiscountResponse {
+  discount_id: number;
+  name: string;
+  description?: string;
+  coupon_code: string;
+  discount_value: number;
+  min_required_order_value: number;
+  max_discount_amount: number;
+  min_required_product?: number;
+  valid_from?: string;
+  valid_until: string;
+  current_uses?: number;
+  max_uses?: number;
+  max_uses_per_customer?: number;
+  is_active: boolean;
+  created_at: string;
+  updated_at: string;
+}
+
+// Frontend Discount interface (transformed)
+export interface Discount {
+  id: number;
+  name: string;
+  description?: string;
+  couponCode: string;
+  discountValue: number;
+  minRequiredOrderValue: number;
+  maxDiscountAmount: number;
+  minRequiredProduct?: number;
+  validFrom?: Date;
+  validUntil: Date;
+  currentUses?: number;
+  maxUses?: number;
+  maxUsesPerCustomer?: number;
+  isActive: boolean;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+// Utility function để transform backend discount response
+export function transformDiscountResponse(backendDiscount: BackendDiscountResponse): Discount {
+  return {
+    id: backendDiscount.discount_id,
+    name: backendDiscount.name,
+    description: backendDiscount.description,
+    couponCode: backendDiscount.coupon_code,
+    discountValue: backendDiscount.discount_value,
+    minRequiredOrderValue: backendDiscount.min_required_order_value,
+    maxDiscountAmount: backendDiscount.max_discount_amount,
+    minRequiredProduct: backendDiscount.min_required_product,
+    validFrom: backendDiscount.valid_from ? new Date(backendDiscount.valid_from) : undefined,
+    validUntil: new Date(backendDiscount.valid_until),
+    currentUses: backendDiscount.current_uses,
+    maxUses: backendDiscount.max_uses,
+    maxUsesPerCustomer: backendDiscount.max_uses_per_customer,
+    isActive: backendDiscount.is_active,
+    createdAt: new Date(backendDiscount.created_at),
+    updatedAt: new Date(backendDiscount.updated_at),
+  };
+}
+
+// DTOs cho Discount
+export interface CreateDiscountDto {
+  name: string;
+  description?: string;
+  coupon_code: string;
+  discount_value: number;
+  min_required_order_value: number;
+  max_discount_amount: number;
+  min_required_product?: number;
+  valid_from?: string;
+  valid_until: string;
+  max_uses?: number;
+  max_uses_per_customer?: number;
+  is_active?: boolean;
+}
+
+export interface UpdateDiscountDto {
+  name?: string;
+  description?: string;
+  coupon_code?: string;
+  discount_value?: number;
+  min_required_order_value?: number;
+  max_discount_amount?: number;
+  min_required_product?: number;
+  valid_from?: string;
+  valid_until?: string;
+  max_uses?: number;
+  max_uses_per_customer?: number;
+  is_active?: boolean;
+}
+
+// =============================================================================
+// PRODUCT TYPES (Categories, Products, ProductSizes)
+// =============================================================================
+
+// Backend response structure cho Category
+export interface BackendCategoryResponse {
+  category_id: number;
+  name: string;
+  description?: string;
+  created_at: string;
+  updated_at: string;
+  product?: BackendProductResponse[];
+}
+
+// Frontend Category interface (transformed)
+export interface Category {
+  id: number;
+  name: string;
+  description?: string;
+  createdAt: Date;
+  updatedAt: Date;
+  products?: Product[];
+}
+
+// Utility function để transform backend category response
+export function transformCategoryResponse(backendCategory: BackendCategoryResponse): Category {
+  return {
+    id: backendCategory.category_id,
+    name: backendCategory.name,
+    description: backendCategory.description,
+    createdAt: new Date(backendCategory.created_at),
+    updatedAt: new Date(backendCategory.updated_at),
+    products: backendCategory.product ? backendCategory.product.map(transformProductResponse) : undefined,
+  };
+}
+
+// Backend response structure cho ProductSize
+export interface BackendProductSizeResponse {
+  size_id: number;
+  name: string;
+  unit: string;
+  quantity: number;
+  description?: string;
+  created_at: string;
+  updated_at: string;
+  product_price?: BackendProductPriceResponse[];
+}
+
+// Frontend ProductSize interface (transformed)
+export interface ProductSize {
+  id: number;
+  name: string;
+  unit: string;
+  quantity: number;
+  description?: string;
+  createdAt: Date;
+  updatedAt: Date;
+  productPrices?: ProductPrice[];
+}
+
+// Utility function để transform backend product size response
+export function transformProductSize(backendProductSize: BackendProductSizeResponse): ProductSize {
+  return {
+    id: backendProductSize.size_id,
+    name: backendProductSize.name,
+    unit: backendProductSize.unit,
+    quantity: backendProductSize.quantity,
+    description: backendProductSize.description,
+    createdAt: new Date(backendProductSize.created_at),
+    updatedAt: new Date(backendProductSize.updated_at),
+    productPrices: backendProductSize.product_price ? backendProductSize.product_price.map(transformProductPriceResponse) : undefined,
+  };
+}
+
+// Backend response structure cho ProductPrice
+export interface BackendProductPriceResponse {
+  product_price_id: number;
+  product_id: number;
+  size_id: number;
+  price: number;
+  is_active: boolean;
+  created_at: string;
+  updated_at: string;
+  product?: BackendProductResponse;
+  product_size?: BackendProductSizeResponse;
+}
+
+// Frontend ProductPrice interface (transformed)
+export interface ProductPrice {
+  id: number;
   productId: number;
-  productName: string;
+  sizeId: number;
+  price: number;
+  isActive: boolean;
+  createdAt: Date;
+  updatedAt: Date;
+  product?: Product;
+  productSize?: ProductSize;
+}
+
+// Utility function để transform backend product price response
+export function transformProductPriceResponse(backendProductPrice: BackendProductPriceResponse): ProductPrice {
+  return {
+    id: backendProductPrice.product_price_id,
+    productId: backendProductPrice.product_id,
+    sizeId: backendProductPrice.size_id,
+    price: backendProductPrice.price,
+    isActive: backendProductPrice.is_active,
+    createdAt: new Date(backendProductPrice.created_at),
+    updatedAt: new Date(backendProductPrice.updated_at),
+    product: backendProductPrice.product ? transformProductResponse(backendProductPrice.product) : undefined,
+    productSize: backendProductPrice.product_size ? transformProductSize(backendProductPrice.product_size) : undefined,
+  };
+}
+
+// Backend response structure cho Product
+export interface BackendProductResponse {
+  product_id: number;
+  category_id?: number;
+  name: string;
+  description?: string;
+  is_signature?: boolean;
+  image_path?: string;
+  created_at: string;
+  updated_at: string;
+  category?: BackendCategoryResponse;
+  product_price?: BackendProductPriceResponse[];
+}
+
+// Frontend Product interface (transformed)
+export interface Product {
+  id: number;
+  categoryId?: number;
+  name: string;
+  description?: string;
+  isSignature?: boolean;
+  imagePath?: string;
+  createdAt: Date;
+  updatedAt: Date;
+  category?: Category;
+  productPrices?: ProductPrice[];
+  // Computed properties
+  minPrice?: number;
+  maxPrice?: number;
+  availableSizes?: ProductSize[];
+}
+
+// Utility function để transform backend product response
+export function transformProductResponse(backendProduct: BackendProductResponse): Product {
+  const productPrices = backendProduct.product_price ? backendProduct.product_price.map(transformProductPriceResponse) : [];
+  const activePrices = productPrices.filter(price => price.isActive);
+  
+  return {
+    id: backendProduct.product_id,
+    categoryId: backendProduct.category_id,
+    name: backendProduct.name,
+    description: backendProduct.description,
+    isSignature: backendProduct.is_signature,
+    imagePath: backendProduct.image_path,
+    createdAt: new Date(backendProduct.created_at),
+    updatedAt: new Date(backendProduct.updated_at),
+    category: backendProduct.category ? transformCategoryResponse(backendProduct.category) : undefined,
+    productPrices: productPrices,
+    minPrice: activePrices.length > 0 ? Math.min(...activePrices.map(p => p.price)) : undefined,
+    maxPrice: activePrices.length > 0 ? Math.max(...activePrices.map(p => p.price)) : undefined,
+    availableSizes: activePrices.map(price => price.productSize).filter(Boolean) as ProductSize[],
+  };
+}
+
+// DTOs for API requests
+export interface CreateCategoryDto {
+  name: string;
+  description?: string;
+}
+
+export interface UpdateCategoryDto {
+  name?: string;
+  description?: string;
+}
+
+export interface CreateProductSizeDto {
+  name: string;
+  unit: string;
   quantity: number;
-  unitPrice: number;
-  totalPrice: number;
-  notes?: string;
+  description?: string;
+}
+
+export interface UpdateProductSizeDto {
+  name?: string;
+  unit?: string;
+  quantity?: number;
+  description?: string;
+}
+
+export interface CreateProductPriceDto {
+  size_id?: number;
+  size_data?: CreateProductSizeDto;
+  price: number;
+  is_active?: boolean;
+}
+
+export interface CreateProductDto {
+  name: string;
+  description?: string;
+  is_signature?: boolean;
+  image_path?: string;
+  category_id?: number;
+  prices: CreateProductPriceDto[];
 }
+
+export interface UpdateProductDto {
+  name?: string;
+  description?: string;
+  is_signature?: boolean;
+  image_path?: string;
+  category_id?: number;
+}
+
+// =============================================================================
 
 // DTOs for API requests (match backend structure)
 export interface CreateManagerDto {
@@ -401,4 +962,261 @@
   deleted: number[];
   failed: { id: number; reason: string }[];
   summary: { total: number; success: number; failed: number };
+}
+
+// Reports Related Types
+export interface SalesReportQuery {
+  month?: number;
+  year?: number;
+  employee_id?: number;
+}
+
+export interface EmployeeSalesData {
+  employee_id: number;
+  employee_name: string;
+  total_orders: number;
+  total_revenue: number;
+  total_products_sold: number;
+}
+
+export interface MonthlySalesData {
+  month: number;
+  year: number;
+  total_orders: number;
+  total_revenue: number;
+  total_products_sold: number;
+}
+
+export interface DailySalesData {
+  day: number;
+  month: number;
+  year: number;
+  total_orders: number;
+  total_revenue: number;
+  total_products_sold: number;
+}
+
+export interface ProductSalesData {
+  product_id: number;
+  product_name: string;
+  quantity_sold: number;
+  revenue: number;
+}
+
+export interface SalesReportSummary {
+  total_orders: number;
+  total_revenue: number;
+  total_products_sold: number;
+  period: string;
+}
+
+export interface SalesReportResponse {
+  summary: SalesReportSummary;
+  employee_sales?: EmployeeSalesData[];
+  monthly_sales?: MonthlySalesData[];
+  daily_sales?: DailySalesData[];
+  product_sales?: ProductSalesData[];
+}
+
+// Transform functions for Reports
+export const transformSalesReportResponse = (data: any): SalesReportResponse => {
+  // Handle null or undefined data
+  if (!data) {
+    return {
+      summary: {
+        total_orders: 0,
+        total_revenue: 0,
+        total_products_sold: 0,
+        period: 'Không có dữ liệu',
+      },
+    };
+  }
+
+  return {
+    summary: {
+      total_orders: data.summary?.total_orders || 0,
+      total_revenue: data.summary?.total_revenue || 0,
+      total_products_sold: data.summary?.total_products_sold || 0,
+      period: data.summary?.period || '',
+    },
+    employee_sales: data.employee_sales?.map((item: any) => ({
+      employee_id: item.employee_id || 0,
+      employee_name: item.employee_name || 'Không xác định',
+      total_orders: item.total_orders || 0,
+      total_revenue: item.total_revenue || 0,
+      total_products_sold: item.total_products_sold || 0,
+    })) || undefined,
+    monthly_sales: data.monthly_sales?.map((item: any) => ({
+      month: item.month || 0,
+      year: item.year || 0,
+      total_orders: item.total_orders || 0,
+      total_revenue: item.total_revenue || 0,
+      total_products_sold: item.total_products_sold || 0,
+    })) || undefined,
+    daily_sales: data.daily_sales?.map((item: any) => ({
+      day: item.day || 0,
+      month: item.month || 0,
+      year: item.year || 0,
+      total_orders: item.total_orders || 0,
+      total_revenue: item.total_revenue || 0,
+      total_products_sold: item.total_products_sold || 0,
+    })) || undefined,
+    product_sales: data.product_sales?.map((item: any) => ({
+      product_id: item.product_id || 0,
+      product_name: item.product_name || 'Không xác định',
+      quantity_sold: item.quantity_sold || 0,
+      revenue: item.revenue || 0,
+    })) || undefined,
+  };
+};
+
+// Profile và Store types
+export interface BackendProfileResponse {
+  account_id: number;
+  username: string;
+  role_id: number;
+  role_name: string;
+  is_active: boolean;
+  is_locked: boolean;
+  last_login?: string;
+  created_at: string;
+  profile?: {
+    manager_id?: number;
+    employee_id?: number;
+    customer_id?: number;
+    last_name: string;
+    first_name: string;
+    email?: string;
+    phone: string;
+    gender?: 'MALE' | 'FEMALE' | 'OTHER';
+    position?: string; // Chỉ có cho employee
+    current_points?: number; // Chỉ có cho customer
+    membership_type_id?: number; // Chỉ có cho customer
+  };
+}
+
+export interface Profile {
+  accountId: number;
+  username: string;
+  roleId: number;
+  roleName: string;
+  isActive: boolean;
+  isLocked: boolean;
+  lastLogin?: Date;
+  createdAt: Date;
+  profile?: {
+    id?: number;
+    lastName: string;
+    firstName: string;
+    name: string;
+    email?: string;
+    phone: string;
+    gender?: 'MALE' | 'FEMALE' | 'OTHER';
+    position?: string;
+    currentPoints?: number;
+    membershipTypeId?: number;
+  };
+}
+
+export function transformProfileResponse(backendProfile: BackendProfileResponse): Profile {
+  return {
+    accountId: backendProfile.account_id,
+    username: backendProfile.username,
+    roleId: backendProfile.role_id,
+    roleName: backendProfile.role_name,
+    isActive: backendProfile.is_active,
+    isLocked: backendProfile.is_locked,
+    lastLogin: backendProfile.last_login ? new Date(backendProfile.last_login) : undefined,
+    createdAt: new Date(backendProfile.created_at),
+    profile: backendProfile.profile ? {
+      id: backendProfile.profile.manager_id || backendProfile.profile.employee_id || backendProfile.profile.customer_id,
+      lastName: backendProfile.profile.last_name,
+      firstName: backendProfile.profile.first_name,
+      name: `${backendProfile.profile.first_name} ${backendProfile.profile.last_name}`,
+      email: backendProfile.profile.email,
+      phone: backendProfile.profile.phone,
+      gender: backendProfile.profile.gender,
+      position: backendProfile.profile.position,
+      currentPoints: backendProfile.profile.current_points,
+      membershipTypeId: backendProfile.profile.membership_type_id,
+    } : undefined,
+  };
+}
+
+export interface UpdateProfileDto {
+  username?: string;
+  password?: string;
+  last_name?: string;
+  first_name?: string;
+  gender?: 'MALE' | 'FEMALE' | 'OTHER';
+  phone?: string;
+  email?: string;
+  position?: string; // Chỉ dành cho employee
+}
+
+// Store types
+export interface BackendStoreResponse {
+  store_id: number;
+  name: string;
+  address: string;
+  phone: string;
+  opening_time: string;
+  closing_time: string;
+  email: string;
+  opening_date: string;
+  tax_code: string;
+  created_at: string;
+  updated_at: string;
+}
+
+export interface Store {
+  id: number;
+  name: string;
+  address: string;
+  phone: string;
+  openingTime: string;
+  closingTime: string;
+  email: string;
+  openingDate: Date;
+  taxCode: string;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+export function transformStoreResponse(backendStore: BackendStoreResponse): Store {
+  return {
+    id: backendStore.store_id,
+    name: backendStore.name,
+    address: backendStore.address,
+    phone: backendStore.phone,
+    openingTime: backendStore.opening_time,
+    closingTime: backendStore.closing_time,
+    email: backendStore.email,
+    openingDate: new Date(backendStore.opening_date),
+    taxCode: backendStore.tax_code,
+    createdAt: new Date(backendStore.created_at),
+    updatedAt: new Date(backendStore.updated_at),
+  };
+}
+
+export interface CreateStoreDto {
+  name: string;
+  address: string;
+  phone: string;
+  opening_time: string; // Format: "HH:mm:ss"
+  closing_time: string; // Format: "HH:mm:ss"
+  email: string;
+  opening_date: string; // Format: "YYYY-MM-DD"
+  tax_code: string;
+}
+
+export interface UpdateStoreDto {
+  name?: string;
+  address?: string;
+  phone?: string;
+  opening_time?: string;
+  closing_time?: string;
+  email?: string;
+  opening_date?: string;
+  tax_code?: string;
 } 
\ No newline at end of file
Index: frontend/pos/src/components/ui/button.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/button.tsx b/frontend/pos/src/components/ui/button.tsx
new file mode 100644
--- /dev/null	(date 1750214549271)
+++ b/frontend/pos/src/components/ui/button.tsx	(date 1750214549271)
@@ -0,0 +1,59 @@
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+
+import { cn } from "@/lib/utils"
+
+const buttonVariants = cva(
+  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
+  {
+    variants: {
+      variant: {
+        default:
+          "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
+        destructive:
+          "bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
+        outline:
+          "border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
+        secondary:
+          "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
+        ghost:
+          "hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",
+        link: "text-primary underline-offset-4 hover:underline",
+      },
+      size: {
+        default: "h-9 px-4 py-2 has-[>svg]:px-3",
+        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
+        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
+        icon: "size-9",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
+  }
+)
+
+function Button({
+  className,
+  variant,
+  size,
+  asChild = false,
+  ...props
+}: React.ComponentProps<"button"> &
+  VariantProps<typeof buttonVariants> & {
+    asChild?: boolean
+  }) {
+  const Comp = asChild ? Slot : "button"
+
+  return (
+    <Comp
+      data-slot="button"
+      className={cn(buttonVariants({ variant, size, className }))}
+      {...props}
+    />
+  )
+}
+
+export { Button, buttonVariants }
Index: frontend/pos/.cursor/rules/typescript-specific-rules.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/typescript-specific-rules.mdc b/frontend/pos/.cursor/rules/typescript-specific-rules.mdc
new file mode 100644
--- /dev/null	(date 1750212011796)
+++ b/frontend/pos/.cursor/rules/typescript-specific-rules.mdc	(date 1750212011796)
@@ -0,0 +1,8 @@
+---
+description: Enforces specific TypeScript usage guidelines, such as preferring interfaces over types and avoiding enums.
+globs: **/*.ts
+---
+- Use TypeScript for all code; prefer interfaces over types.
+- Avoid enums; use maps instead.
+- Use functional components with TypeScript interfaces.
+- Use Zod for form validation.
\ No newline at end of file
Index: frontend/pos/src/components/ui/card.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/components/ui/card.tsx b/frontend/pos/src/components/ui/card.tsx
new file mode 100644
--- /dev/null	(date 1750214549280)
+++ b/frontend/pos/src/components/ui/card.tsx	(date 1750214549280)
@@ -0,0 +1,92 @@
+import * as React from "react"
+
+import { cn } from "@/lib/utils"
+
+function Card({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card"
+      className={cn(
+        "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function CardHeader({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card-header"
+      className={cn(
+        "@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function CardTitle({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card-title"
+      className={cn("leading-none font-semibold", className)}
+      {...props}
+    />
+  )
+}
+
+function CardDescription({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card-description"
+      className={cn("text-muted-foreground text-sm", className)}
+      {...props}
+    />
+  )
+}
+
+function CardAction({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card-action"
+      className={cn(
+        "col-start-2 row-span-2 row-start-1 self-start justify-self-end",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function CardContent({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card-content"
+      className={cn("px-6", className)}
+      {...props}
+    />
+  )
+}
+
+function CardFooter({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="card-footer"
+      className={cn("flex items-center px-6 [.border-t]:pt-6", className)}
+      {...props}
+    />
+  )
+}
+
+export {
+  Card,
+  CardHeader,
+  CardFooter,
+  CardTitle,
+  CardAction,
+  CardDescription,
+  CardContent,
+}
Index: frontend/pos/.cursor/rules/key-conventions.mdc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursor/rules/key-conventions.mdc b/frontend/pos/.cursor/rules/key-conventions.mdc
new file mode 100644
--- /dev/null	(date 1750212011795)
+++ b/frontend/pos/.cursor/rules/key-conventions.mdc	(date 1750212011795)
@@ -0,0 +1,7 @@
+---
+description: Specifies key conventions for URL search parameter state management and Web Vitals optimization.
+globs: **/*
+---
+- Use proper URL search parameter state management.
+- Optimize Web Vitals (LCP, CLS, FID).
+- Limit 'use client'.
\ No newline at end of file
Index: frontend/pos/src/types/auth.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/types/auth.ts b/frontend/pos/src/types/auth.ts
new file mode 100644
--- /dev/null	(date 1750224500334)
+++ b/frontend/pos/src/types/auth.ts	(date 1750224500334)
@@ -0,0 +1,52 @@
+export interface User {
+  id: number;
+  username: string;
+  role: {
+    role_id: number;
+    name: string;
+    description?: string;
+  };
+  manager?: {
+    manager_id: number;
+    first_name: string;
+    last_name: string;
+    email: string;
+    phone: string;
+    gender?: 'MALE' | 'FEMALE' | 'OTHER';
+  };
+  employee?: {
+    employee_id: number;
+    first_name: string;
+    last_name: string;
+    email: string;
+    phone: string;
+    gender?: 'MALE' | 'FEMALE' | 'OTHER';
+  };
+  customer?: {
+    customer_id: number;
+    first_name: string;
+    last_name: string;
+    email: string;
+    phone: string;
+    gender?: 'MALE' | 'FEMALE' | 'OTHER';
+  }[];
+  is_active?: boolean;
+  is_locked: boolean;
+  last_login?: Date;
+  created_at?: Date;
+  updated_at?: Date;
+}
+
+export interface LoginCredentials {
+  username: string;
+  password: string;
+}
+
+export interface LoginResponse {
+  access_token: string;
+  user: User;
+}
+
+export interface RefreshTokenResponse {
+  access_token: string;
+} 
\ No newline at end of file
Index: frontend/manager/src/app/products/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/page.tsx b/frontend/manager/src/app/products/page.tsx
new file mode 100644
--- /dev/null	(date 1750140319013)
+++ b/frontend/manager/src/app/products/page.tsx	(date 1750140319013)
@@ -0,0 +1,171 @@
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { Button } from "@/components/ui/button";
+import { 
+  Package, 
+  Tag, 
+  Ruler,
+  ArrowRight,
+  Plus
+} from "lucide-react";
+import Link from "next/link";
+
+const productCategories = [
+  {
+    title: "Danh Mục",
+    description: "Quản lý danh mục sản phẩm và phân loại",
+    icon: Tag,
+    href: "/products/categories",
+    count: 8,
+    color: "text-blue-600"
+  },
+  {
+    title: "Kích Thước", 
+    description: "Quản lý kích thước sản phẩm cho từng loại",
+    icon: Ruler,
+    href: "/products/product-sizes",
+    count: 12,
+    color: "text-green-600"
+  },
+  {
+    title: "Sản Phẩm",
+    description: "Quản lý thông tin sản phẩm và giá cả",
+    icon: Package,
+    href: "/products/items", 
+    count: 64,
+    color: "text-purple-600"
+  }
+];
+
+export default function ProductsPage() {
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Sản Phẩm</h1>
+          <p className="text-muted-foreground">
+            Quản lý tất cả sản phẩm, danh mục và kích thước trong hệ thống
+          </p>
+        </div>
+        <div className="flex gap-2">
+          <Button variant="outline" asChild>
+            <Link href="/products/categories">
+              <Plus className="mr-2 h-4 w-4" />
+              Thêm Danh Mục
+            </Link>
+          </Button>
+          <Button asChild>
+            <Link href="/products/items">
+              <Plus className="mr-2 h-4 w-4" />
+              Thêm Sản Phẩm
+            </Link>
+          </Button>
+        </div>
+      </div>
+
+      {/* Statistics Overview */}
+      <div className="grid gap-4 md:grid-cols-3">
+        {productCategories.map((category) => {
+          const Icon = category.icon;
+          return (
+            <Card key={category.title}>
+              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+                <CardTitle className="text-sm font-medium">
+                  {category.title}
+                </CardTitle>
+                <Icon className={`h-4 w-4 ${category.color}`} />
+              </CardHeader>
+              <CardContent>
+                <div className="text-2xl font-bold">{category.count}</div>
+                <p className="text-xs text-muted-foreground">
+                  Tổng số {category.title.toLowerCase()}
+                </p>
+              </CardContent>
+            </Card>
+          );
+        })}
+      </div>
+
+      {/* Product Categories */}
+      <div className="grid gap-6 md:grid-cols-1 lg:grid-cols-3">
+        {productCategories.map((category) => {
+          const Icon = category.icon;
+          return (
+            <Card key={category.title} className="group hover:shadow-md transition-shadow">
+              <CardHeader>
+                <div className="flex items-center gap-3">
+                  <div className={`p-2 rounded-lg bg-muted ${category.color}`}>
+                    <Icon className="h-6 w-6" />
+                  </div>
+                  <div>
+                    <CardTitle className="text-lg">{category.title}</CardTitle>
+                    <CardDescription className="text-sm">
+                      {category.count} {category.title.toLowerCase()}
+                    </CardDescription>
+                  </div>
+                </div>
+              </CardHeader>
+              <CardContent>
+                <p className="text-sm text-muted-foreground mb-4">
+                  {category.description}
+                </p>
+                <Button asChild variant="outline" className="w-full group-hover:bg-primary group-hover:text-primary-foreground transition-colors">
+                  <Link href={category.href}>
+                    Quản lý {category.title}
+                    <ArrowRight className="ml-2 h-4 w-4" />
+                  </Link>
+                </Button>
+              </CardContent>
+            </Card>
+          );
+        })}
+      </div>
+
+      {/* Recent Activities */}
+      <Card>
+        <CardHeader>
+          <CardTitle>Hoạt Động Gần Đây</CardTitle>
+          <CardDescription>
+            Các hoạt động liên quan đến sản phẩm trong 7 ngày qua
+          </CardDescription>
+        </CardHeader>
+        <CardContent>
+          <div className="space-y-4">
+            <div className="flex items-center gap-4 p-3 bg-muted/50 rounded-lg">
+              <div className="p-2 bg-green-100 rounded-full">
+                <Package className="h-4 w-4 text-green-600" />
+              </div>
+              <div className="flex-1">
+                <p className="text-sm font-medium">Sản phẩm mới được thêm</p>
+                <p className="text-xs text-muted-foreground">Bánh kem chocolate - Danh mục bánh kem</p>
+              </div>
+              <span className="text-xs text-muted-foreground">2 giờ trước</span>
+            </div>
+            
+            <div className="flex items-center gap-4 p-3 bg-muted/50 rounded-lg">
+              <div className="p-2 bg-blue-100 rounded-full">
+                <Tag className="h-4 w-4 text-blue-600" />
+              </div>
+              <div className="flex-1">
+                <p className="text-sm font-medium">Danh mục mới được tạo</p>
+                <p className="text-xs text-muted-foreground">Bánh Cupcake - Dành cho bánh cỡ nhỏ</p>
+              </div>
+              <span className="text-xs text-muted-foreground">5 giờ trước</span>
+            </div>
+            
+            <div className="flex items-center gap-4 p-3 bg-muted/50 rounded-lg">
+              <div className="p-2 bg-purple-100 rounded-full">
+                <Ruler className="h-4 w-4 text-purple-600" />
+              </div>
+              <div className="flex-1">
+                <p className="text-sm font-medium">Kích thước mới được thêm</p>
+                <p className="text-xs text-muted-foreground">XXL - 12 inch cho bánh lớn</p>
+              </div>
+              <span className="text-xs text-muted-foreground">1 ngày trước</span>
+            </div>
+          </div>
+        </CardContent>
+      </Card>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/src/stores/ui.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/stores/ui.ts b/frontend/pos/src/stores/ui.ts
new file mode 100644
--- /dev/null	(date 1750226000349)
+++ b/frontend/pos/src/stores/ui.ts	(date 1750226000349)
@@ -0,0 +1,108 @@
+import { create } from 'zustand';
+import { persist } from 'zustand/middleware';
+
+export type Theme = 'light' | 'dark' | 'system';
+
+export interface Notification {
+  id: string;
+  type: 'success' | 'error' | 'warning' | 'info';
+  title: string;
+  message?: string;
+  duration?: number;
+  timestamp: Date;
+}
+
+interface UIState {
+  // Theme
+  theme: Theme;
+  
+  // Notifications
+  notifications: Notification[];
+  
+  // Loading states
+  globalLoading: boolean;
+  
+  // Actions
+  setTheme: (theme: Theme) => void;
+  
+  addNotification: (notification: Omit<Notification, 'id' | 'timestamp'>) => void;
+  removeNotification: (id: string) => void;
+  clearNotifications: () => void;
+  
+  setGlobalLoading: (loading: boolean) => void;
+}
+
+export const useUIStore = create<UIState>()(
+  persist(
+    (set, get) => ({
+      // Initial state
+      theme: 'system',
+      notifications: [],
+      globalLoading: false,
+
+      // Theme actions
+      setTheme: (theme: Theme) => {
+        set({ theme });
+        
+        // Apply theme to document
+        const root = document.documentElement;
+        if (theme === 'dark') {
+          root.classList.add('dark');
+        } else if (theme === 'light') {
+          root.classList.remove('dark');
+        } else {
+          // System theme
+          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
+          if (prefersDark) {
+            root.classList.add('dark');
+          } else {
+            root.classList.remove('dark');
+          }
+        }
+      },
+
+      // Notification actions
+      addNotification: (notification) => {
+        const id = Math.random().toString(36).substr(2, 9);
+        const newNotification: Notification = {
+          ...notification,
+          id,
+          timestamp: new Date(),
+        };
+        
+        set((state) => ({
+          notifications: [...state.notifications, newNotification],
+        }));
+
+        // Auto remove after duration
+        if (notification.duration !== 0) {
+          const duration = notification.duration || 5000;
+          setTimeout(() => {
+            get().removeNotification(id);
+          }, duration);
+        }
+      },
+
+      removeNotification: (id: string) => {
+        set((state) => ({
+          notifications: state.notifications.filter((n) => n.id !== id),
+        }));
+      },
+
+      clearNotifications: () => {
+        set({ notifications: [] });
+      },
+
+      // Global loading
+      setGlobalLoading: (loading: boolean) => {
+        set({ globalLoading: loading });
+      },
+    }),
+    {
+      name: 'ui-storage',
+      partialize: (state) => ({
+        theme: state.theme,
+      }),
+    }
+  )
+); 
\ No newline at end of file
Index: frontend/pos/src/stores/pos.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/stores/pos.ts b/frontend/pos/src/stores/pos.ts
new file mode 100644
--- /dev/null	(date 1750227172827)
+++ b/frontend/pos/src/stores/pos.ts	(date 1750227172827)
@@ -0,0 +1,155 @@
+import { create } from 'zustand';
+import { persist } from 'zustand/middleware';
+import { Category, Product, CartItem, POSCustomer } from '@/types';
+
+interface POSState {
+  // Categories
+  categories: Category[];
+  selectedCategoryId: number | null;
+  
+  // Products
+  products: Product[];
+  allProducts: Product[];
+  
+  // Cart
+  cart: CartItem[];
+  
+  // Customer
+  selectedCustomer: POSCustomer | null;
+  
+  // Search
+  searchQuery: string;
+  
+  // Loading states
+  isLoadingCategories: boolean;
+  isLoadingProducts: boolean;
+  
+  // Actions
+  setCategories: (categories: Category[]) => void;
+  setSelectedCategoryId: (categoryId: number | null) => void;
+  setProducts: (products: Product[]) => void;
+  setAllProducts: (products: Product[]) => void;
+  setSearchQuery: (query: string) => void;
+  setSelectedCustomer: (customer: POSCustomer | null) => void;
+  setIsLoadingCategories: (loading: boolean) => void;
+  setIsLoadingProducts: (loading: boolean) => void;
+  
+  // Cart actions
+  addToCart: (item: Omit<CartItem, 'quantity' | 'total'>) => void;
+  removeFromCart: (productPriceId: number) => void;
+  updateCartItemQuantity: (productPriceId: number, quantity: number) => void;
+  clearCart: () => void;
+  
+  // Computed values
+  getCartTotal: () => number;
+  getCartItemCount: () => number;
+  getFilteredProducts: () => Product[];
+}
+
+export const usePOSStore = create<POSState>()(
+  persist(
+    (set, get) => ({
+      // Initial state
+      categories: [],
+      selectedCategoryId: null,
+      products: [],
+      allProducts: [],
+      cart: [],
+      selectedCustomer: null,
+      searchQuery: '',
+      isLoadingCategories: false,
+      isLoadingProducts: false,
+      
+      // Actions
+      setCategories: (categories) => set({ categories }),
+      setSelectedCategoryId: (categoryId) => set({ selectedCategoryId: categoryId }),
+      setProducts: (products) => set({ products }),
+      setAllProducts: (products) => set({ allProducts: products }),
+      setSearchQuery: (query) => set({ searchQuery: query }),
+      setSelectedCustomer: (customer) => set({ selectedCustomer: customer }),
+      setIsLoadingCategories: (loading) => set({ isLoadingCategories: loading }),
+      setIsLoadingProducts: (loading) => set({ isLoadingProducts: loading }),
+      
+      // Cart actions
+      addToCart: (item) => {
+        const { cart } = get();
+        const existingItem = cart.find(cartItem => cartItem.product_price_id === item.product_price_id);
+        
+        if (existingItem) {
+          // Update quantity if item already exists
+          const updatedCart = cart.map(cartItem =>
+            cartItem.product_price_id === item.product_price_id
+              ? { ...cartItem, quantity: cartItem.quantity + 1, total: (cartItem.quantity + 1) * cartItem.price }
+              : cartItem
+          );
+          set({ cart: updatedCart });
+        } else {
+          // Add new item
+          const newItem: CartItem = {
+            ...item,
+            quantity: 1,
+            total: item.price
+          };
+          set({ cart: [...cart, newItem] });
+        }
+      },
+      
+      removeFromCart: (productPriceId) => {
+        const { cart } = get();
+        set({ cart: cart.filter(item => item.product_price_id !== productPriceId) });
+      },
+      
+      updateCartItemQuantity: (productPriceId, quantity) => {
+        const { cart } = get();
+        if (quantity <= 0) {
+          // Remove item if quantity is 0 or less
+          set({ cart: cart.filter(item => item.product_price_id !== productPriceId) });
+        } else {
+          // Update quantity and total
+          const updatedCart = cart.map(item =>
+            item.product_price_id === productPriceId
+              ? { ...item, quantity, total: quantity * item.price }
+              : item
+          );
+          set({ cart: updatedCart });
+        }
+      },
+      
+      clearCart: () => set({ cart: [] }),
+      
+      // Computed values
+      getCartTotal: () => {
+        const { cart } = get();
+        return cart.reduce((total, item) => total + item.total, 0);
+      },
+      
+      getCartItemCount: () => {
+        const { cart } = get();
+        return cart.reduce((count, item) => count + item.quantity, 0);
+      },
+      
+      getFilteredProducts: () => {
+        const { products, allProducts, selectedCategoryId, searchQuery } = get();
+        
+        let filteredProducts = selectedCategoryId ? products : allProducts;
+        
+        if (searchQuery.trim()) {
+          filteredProducts = filteredProducts.filter(product =>
+            product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
+            product.description?.toLowerCase().includes(searchQuery.toLowerCase())
+          );
+        }
+        
+        return filteredProducts;
+      }
+    }),
+    {
+      name: 'pos-store',
+      partialize: (state) => ({
+        cart: state.cart,
+        selectedCustomer: state.selectedCustomer,
+        selectedCategoryId: state.selectedCategoryId
+      })
+    }
+  )
+); 
\ No newline at end of file
Index: frontend/pos/src/types/api.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/types/api.ts b/frontend/pos/src/types/api.ts
new file mode 100644
--- /dev/null	(date 1750227142928)
+++ b/frontend/pos/src/types/api.ts	(date 1750227142928)
@@ -0,0 +1,116 @@
+// Pagination types
+export interface PaginationDto {
+  page?: number;
+  limit?: number;
+}
+
+export interface PaginatedResult<T> {
+  data: T[];
+  pagination: {
+    page: number;
+    limit: number;
+    total: number;
+    totalPages: number;
+    hasNext: boolean;
+    hasPrev: boolean;
+  };
+}
+
+// Category types
+export interface Category {
+  category_id: number;
+  name: string;
+  description?: string;
+  created_at?: string;
+  updated_at?: string;
+}
+
+// Product types
+export interface Product {
+  product_id: number;
+  category_id: number;
+  name: string;
+  description?: string;
+  is_signature?: boolean;
+  image_path?: string;
+  created_at?: string;
+  updated_at?: string;
+  category?: Category;
+  product_price?: ProductPrice[];
+}
+
+// Product Size types
+export interface ProductSize {
+  size_id: number;
+  name: string;
+  unit: string;
+  quantity: number;
+  description?: string;
+  created_at?: string;
+  updated_at?: string;
+}
+
+// Product Price types
+export interface ProductPrice {
+  product_price_id: number;
+  product_id: number;
+  size_id: number;
+  price: number;
+  is_active: boolean;
+  created_at?: string;
+  updated_at?: string;
+  product?: Product;
+  product_size?: ProductSize;
+}
+
+// Transform functions for API responses
+export function transformCategory(category: any): Category {
+  return {
+    category_id: category.category_id,
+    name: category.name,
+    description: category.description,
+    created_at: category.created_at,
+    updated_at: category.updated_at,
+  };
+}
+
+export function transformProduct(product: any): Product {
+  return {
+    product_id: product.product_id,
+    category_id: product.category_id,
+    name: product.name,
+    description: product.description,
+    is_signature: product.is_signature,
+    image_path: product.image_path,
+    created_at: product.created_at,
+    updated_at: product.updated_at,
+    category: product.category ? transformCategory(product.category) : undefined,
+    product_price: product.product_price ? product.product_price.map(transformProductPrice) : undefined,
+  };
+}
+
+export function transformProductPrice(productPrice: any): ProductPrice {
+  return {
+    product_price_id: productPrice.product_price_id,
+    product_id: productPrice.product_id,
+    size_id: productPrice.size_id,
+    price: productPrice.price,
+    is_active: productPrice.is_active,
+    created_at: productPrice.created_at,
+    updated_at: productPrice.updated_at,
+    product: productPrice.product ? transformProduct(productPrice.product) : undefined,
+    product_size: productPrice.product_size ? transformProductSize(productPrice.product_size) : undefined,
+  };
+}
+
+export function transformProductSize(productSize: any): ProductSize {
+  return {
+    size_id: productSize.size_id,
+    name: productSize.name,
+    unit: productSize.unit,
+    quantity: productSize.quantity,
+    description: productSize.description,
+    created_at: productSize.created_at,
+    updated_at: productSize.updated_at,
+  };
+} 
\ No newline at end of file
Index: frontend/pos/src/lib/services/category-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/lib/services/category-service.ts b/frontend/pos/src/lib/services/category-service.ts
new file mode 100644
--- /dev/null	(date 1750228014377)
+++ b/frontend/pos/src/lib/services/category-service.ts	(date 1750228014377)
@@ -0,0 +1,77 @@
+import { apiClient } from '../api-client';
+import { 
+  Category, 
+  PaginatedResult, 
+  PaginationDto,
+  transformCategory 
+} from '@/types/api';
+
+export class CategoryService {
+  private static readonly BASE_URL = '/categories';
+
+  static async getAll(pagination?: PaginationDto): Promise<PaginatedResult<Category>> {
+    try {
+      const params: Record<string, any> = {};
+      if (pagination?.page) params.page = pagination.page;
+      if (pagination?.limit) params.limit = pagination.limit;
+      
+      console.log('🔍 CategoryService.getAll - Request params:', params);
+      const response = await apiClient.get(this.BASE_URL, params) as any;
+      console.log('✅ CategoryService.getAll - Response:', response);
+      
+      // Check response structure
+      if (!response || !response.data) {
+        console.error('❌ Invalid response structure:', response);
+        throw new Error('Cấu trúc phản hồi không hợp lệ');
+      }
+
+      return {
+        data: (response.data || []).map(transformCategory),
+        pagination: response.pagination || {
+          page: 1,
+          limit: 10,
+          total: response.data?.length || 0,
+          totalPages: 1,
+          hasNext: false,
+          hasPrev: false
+        }
+      };
+    } catch (error: any) {
+      console.error('❌ Lỗi khi lấy danh sách danh mục:', {
+        message: error.message,
+        status: error.status,
+        response: error.response,
+        stack: error.stack
+      });
+      throw new Error(error.message || 'Không thể lấy danh sách danh mục');
+    }
+  }
+
+  static async getById(id: number): Promise<Category> {
+    try {
+      console.log(`🔍 CategoryService.getById(${id})`);
+      const response = await apiClient.get(`${this.BASE_URL}/${id}`) as any;
+      console.log(`✅ CategoryService.getById(${id}) - Response:`, response);
+      
+      // Check response structure
+      if (!response) {
+        console.error('❌ Invalid response structure:', response);
+        throw new Error('Cấu trúc phản hồi không hợp lệ');
+      }
+
+      // Response có thể là object trực tiếp hoặc trong response.data
+      const data = response.data || response;
+      return transformCategory(data);
+    } catch (error: any) {
+      console.error(`❌ Lỗi khi lấy danh mục ${id}:`, {
+        message: error.message,
+        status: error.status,
+        response: error.response,
+        stack: error.stack
+      });
+      throw new Error(error.message || 'Không thể lấy thông tin danh mục');
+    }
+  }
+}
+
+export const categoryService = CategoryService; 
\ No newline at end of file
Index: frontend/manager/src/stores/categories.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/categories.ts b/frontend/manager/src/stores/categories.ts
new file mode 100644
--- /dev/null	(date 1750127263704)
+++ b/frontend/manager/src/stores/categories.ts	(date 1750127263704)
@@ -0,0 +1,207 @@
+import { create } from "zustand";
+import { Category, BulkDeleteResponse } from "@/types/api";
+import { categoryService } from "@/lib/services/category-service";
+import { CreateCategoryFormData, UpdateCategoryFormData, BulkDeleteCategoryFormData } from "@/lib/validations/category";
+
+interface CategoriesState {
+  // Data state
+  categories: Category[];
+  currentCategory: Category | null;
+  
+  // UI state
+  isLoading: boolean;
+  isCreating: boolean;
+  isUpdating: boolean;
+  isDeleting: boolean;
+  error: string | null;
+  
+  // Pagination state
+  currentPage: number;
+  totalPages: number;
+  totalItems: number;
+  limit: number;
+  
+  // Actions
+  fetchCategories: (params?: { page?: number; limit?: number; search?: string }) => Promise<void>;
+  fetchCategoryById: (id: number) => Promise<void>;
+  createCategory: (data: CreateCategoryFormData) => Promise<Category>;
+  updateCategory: (id: number, data: UpdateCategoryFormData) => Promise<Category>;
+  deleteCategory: (id: number) => Promise<void>;
+  bulkDeleteCategories: (data: BulkDeleteCategoryFormData) => Promise<BulkDeleteResponse>;
+  
+  // Utility actions
+  clearError: () => void;
+  clearCurrentCategory: () => void;
+  setCurrentPage: (page: number) => void;
+}
+
+export const useCategoriesStore = create<CategoriesState>((set, get) => ({
+  // Initial data state
+  categories: [],
+  currentCategory: null,
+  
+  // Initial UI state
+  isLoading: false,
+  isCreating: false,
+  isUpdating: false,
+  isDeleting: false,
+  error: null,
+  
+  // Initial pagination state
+  currentPage: 1,
+  totalPages: 0,
+  totalItems: 0,
+  limit: 10,
+  
+  // Actions
+  fetchCategories: async (params = {}) => {
+    try {
+      set({ isLoading: true, error: null });
+      
+      const response = await categoryService.getAll({
+        page: params.page || get().currentPage,
+        limit: params.limit || get().limit,
+        search: params.search,
+      });
+      
+      set({
+        categories: response.data,
+        currentPage: response.page,
+        totalPages: response.totalPages,
+        totalItems: response.total,
+        limit: response.limit,
+        isLoading: false,
+      });
+    } catch (error: unknown) {
+      console.error("Lỗi tải danh sách danh mục:", error);
+      set({ 
+        error: "Không thể tải danh sách danh mục", 
+        isLoading: false 
+      });
+    }
+  },
+
+  fetchCategoryById: async (id: number) => {
+    try {
+      set({ isLoading: true, error: null });
+      
+      const category = await categoryService.getById(id);
+      
+      set({
+        currentCategory: category,
+        isLoading: false,
+      });
+    } catch (error: unknown) {
+      console.error("Lỗi tải danh mục:", error);
+      set({ 
+        error: "Không thể tải thông tin danh mục", 
+        isLoading: false 
+      });
+    }
+  },
+
+  createCategory: async (data: CreateCategoryFormData) => {
+    try {
+      set({ isCreating: true, error: null });
+      
+      const newCategory = await categoryService.create(data);
+      
+      // Add to categories list
+      set(state => ({
+        categories: [newCategory, ...state.categories],
+        totalItems: state.totalItems + 1,
+        isCreating: false,
+      }));
+      
+      return newCategory;
+    } catch (error: unknown) {
+      console.error("Lỗi tạo danh mục:", error);
+      set({ 
+        error: "Không thể tạo danh mục mới", 
+        isCreating: false 
+      });
+      throw error;
+    }
+  },
+
+  updateCategory: async (id: number, data: UpdateCategoryFormData) => {
+    try {
+      set({ isUpdating: true, error: null });
+      
+      const updatedCategory = await categoryService.update(id, data);
+      
+      // Update in categories list
+      set(state => ({
+        categories: state.categories.map(category => 
+          category.id === id ? updatedCategory : category
+        ),
+        currentCategory: state.currentCategory?.id === id ? updatedCategory : state.currentCategory,
+        isUpdating: false,
+      }));
+      
+      return updatedCategory;
+    } catch (error: unknown) {
+      console.error("Lỗi cập nhật danh mục:", error);
+      set({ 
+        error: "Không thể cập nhật danh mục", 
+        isUpdating: false 
+      });
+      throw error;
+    }
+  },
+
+  deleteCategory: async (id: number) => {
+    try {
+      set({ isDeleting: true, error: null });
+      
+      await categoryService.delete(id);
+      
+      // Remove from categories list
+      set(state => ({
+        categories: state.categories.filter(category => category.id !== id),
+        currentCategory: state.currentCategory?.id === id ? null : state.currentCategory,
+        totalItems: state.totalItems - 1,
+        isDeleting: false,
+      }));
+    } catch (error: unknown) {
+      console.error("Lỗi xóa danh mục:", error);
+      set({ 
+        error: "Không thể xóa danh mục", 
+        isDeleting: false 
+      });
+      throw error;
+    }
+  },
+
+  bulkDeleteCategories: async (data: BulkDeleteCategoryFormData) => {
+    try {
+      set({ isDeleting: true, error: null });
+      
+      const result = await categoryService.bulkDelete(data);
+      
+      // Remove deleted categories from list
+      const deletedIds = result.deleted;
+      set(state => ({
+        categories: state.categories.filter(category => !deletedIds.includes(category.id)),
+        totalItems: state.totalItems - deletedIds.length,
+        isDeleting: false,
+      }));
+      
+      return result;
+    } catch (error: unknown) {
+      console.error("Lỗi xóa nhiều danh mục:", error);
+      set({ 
+        error: "Không thể xóa các danh mục đã chọn", 
+        isDeleting: false 
+      });
+      throw error;
+    }
+  },
+
+  // Utility actions
+  clearError: () => set({ error: null }),
+  
+  clearCurrentCategory: () => set({ currentCategory: null }),
+  
+  setCurrentPage: (page: number) => set({ currentPage: page }),
+})); 
\ No newline at end of file
Index: frontend/pos/src/lib/services/product-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/lib/services/product-service.ts b/frontend/pos/src/lib/services/product-service.ts
new file mode 100644
--- /dev/null	(date 1750228014377)
+++ b/frontend/pos/src/lib/services/product-service.ts	(date 1750228014377)
@@ -0,0 +1,143 @@
+import { apiClient } from '../api-client';
+import { 
+  Product, 
+  ProductPrice,
+  PaginatedResult, 
+  PaginationDto,
+  transformProduct,
+  transformProductPrice
+} from '@/types/api';
+
+export class ProductService {
+  private static readonly BASE_URL = '/products';
+
+  static async getAll(pagination?: PaginationDto): Promise<PaginatedResult<Product>> {
+    try {
+      const params: Record<string, any> = {};
+      if (pagination?.page) params.page = pagination.page;
+      if (pagination?.limit) params.limit = pagination.limit;
+      
+      console.log('🔍 ProductService.getAll - Request params:', params);
+      const response = await apiClient.get(this.BASE_URL, params) as any;
+      console.log('✅ ProductService.getAll - Response:', response);
+      
+      // Check response structure
+      if (!response || !response.data) {
+        console.error('❌ Invalid response structure:', response);
+        throw new Error('Cấu trúc phản hồi không hợp lệ');
+      }
+
+      return {
+        data: (response.data || []).map(transformProduct),
+        pagination: response.pagination || {
+          page: 1,
+          limit: 10,
+          total: response.data?.length || 0,
+          totalPages: 1,
+          hasNext: false,
+          hasPrev: false
+        }
+      };
+    } catch (error: any) {
+      console.error('❌ Lỗi khi lấy danh sách sản phẩm:', {
+        message: error.message,
+        status: error.status,
+        response: error.response,
+        stack: error.stack
+      });
+      throw new Error(error.message || 'Không thể lấy danh sách sản phẩm');
+    }
+  }
+
+  static async getById(id: number): Promise<Product> {
+    try {
+      console.log(`🔍 ProductService.getById(${id})`);
+      const response = await apiClient.get(`${this.BASE_URL}/${id}`) as any;
+      console.log(`✅ ProductService.getById(${id}) - Response:`, response);
+      
+      // Check response structure
+      if (!response) {
+        console.error('❌ Invalid response structure:', response);
+        throw new Error('Cấu trúc phản hồi không hợp lệ');
+      }
+
+      // Response có thể là object trực tiếp hoặc trong response.data
+      const data = response.data || response;
+      return transformProduct(data);
+    } catch (error: any) {
+      console.error(`❌ Lỗi khi lấy sản phẩm ${id}:`, {
+        message: error.message,
+        status: error.status,
+        response: error.response,
+        stack: error.stack
+      });
+      throw new Error(error.message || 'Không thể lấy thông tin sản phẩm');
+    }
+  }
+
+  static async getByCategory(categoryId: number, pagination?: PaginationDto): Promise<PaginatedResult<Product>> {
+    try {
+      const params: Record<string, any> = {};
+      if (pagination?.page) params.page = pagination.page;
+      if (pagination?.limit) params.limit = pagination.limit;
+      
+      console.log(`🔍 ProductService.getByCategory(${categoryId}) - Request params:`, params);
+      const response = await apiClient.get(`${this.BASE_URL}/category/${categoryId}`, params) as any;
+      console.log(`✅ ProductService.getByCategory(${categoryId}) - Response:`, response);
+      
+      // Check response structure
+      if (!response || !response.data) {
+        console.error('❌ Invalid response structure:', response);
+        throw new Error('Cấu trúc phản hồi không hợp lệ');
+      }
+
+      return {
+        data: (response.data || []).map(transformProduct),
+        pagination: response.pagination || {
+          page: 1,
+          limit: 10,
+          total: response.data?.length || 0,
+          totalPages: 1,
+          hasNext: false,
+          hasPrev: false
+        }
+      };
+    } catch (error: any) {
+      console.error(`❌ Lỗi khi lấy sản phẩm theo danh mục ${categoryId}:`, {
+        message: error.message,
+        status: error.status,
+        response: error.response,
+        stack: error.stack
+      });
+      throw new Error(error.message || 'Không thể lấy sản phẩm theo danh mục');
+    }
+  }
+
+  static async getProductPrices(productId: number): Promise<ProductPrice[]> {
+    try {
+      console.log(`🔍 ProductService.getProductPrices(${productId})`);
+      const response = await apiClient.get(`${this.BASE_URL}/${productId}/prices`) as any;
+      console.log(`✅ ProductService.getProductPrices(${productId}) - Response:`, response);
+      
+      // Check response structure
+      if (!response) {
+        console.error('❌ Invalid response structure:', response);
+        return [];
+      }
+
+      // Response có thể là array trực tiếp hoặc trong response.data
+      const data = Array.isArray(response) ? response : (response.data || []);
+      return data.map(transformProductPrice);
+    } catch (error: any) {
+      console.error(`❌ Lỗi khi lấy giá sản phẩm ${productId}:`, {
+        message: error.message,
+        status: error.status,
+        response: error.response,
+        stack: error.stack
+      });
+      throw new Error(error.message || 'Không thể lấy giá sản phẩm');
+    }
+  }
+}
+
+export const productService = ProductService; 
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ef5dec76-6049-4938-8b0f-72cdaa7b5451\" name=\"Changes\" comment=\"Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend.\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/backend/src/customer/dto/create-customer.dto.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/customer/dto/create-customer.dto.ts\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/manager/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/manager/.gitignore\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/manager/src/app/users/customers/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/manager/src/app/users/customers/page.tsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/manager/src/components/forms/create-customer-dialog.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/manager/src/components/forms/create-customer-dialog.tsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/manager/src/lib/services/customer-service.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/manager/src/lib/services/customer-service.ts\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/manager/src/lib/validations/customer.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/manager/src/lib/validations/customer.ts\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/manager/src/lib/validations/membership-type.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/manager/src/lib/validations/membership-type.ts\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ChangesViewManager\">\n    <option name=\"groupingKeys\">\n      <option value=\"directory\" />\n      <option value=\"repository\" />\n    </option>\n  </component>\n  <component name=\"FormatOnSaveOptions\">\n    <option name=\"myRunOnSave\" value=\"false\" />\n    <option name=\"myAllFileTypesSelected\" value=\"true\" />\n    <option name=\"mySelectedFileTypes\">\n      <set />\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 6\n}</component>\n  <component name=\"ProjectId\" id=\"2wt1COByUGSNMdIe9l8SVIdFF4j\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n    <option name=\"showMembers\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Docker.compose-dev.yml.cake_pos_db: Compose Deployment.executor&quot;: &quot;Run&quot;,\n    &quot;Docker.compose-dev.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,\n    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;feature/phunguy65&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/PNguyen/Workspace/MyProject/cake_pos&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_interpreter_path&quot;: &quot;/home/PNguyen/development/nvm/current/bin/node&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;ts.external.directory.path&quot;: &quot;/home/PNguyen/development/ides/webstorm/plugins/javascript-plugin/jsLanguageServicesImpl/external&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;DatabaseDriversLRU&quot;: [\n      &quot;mysql&quot;\n    ],\n    &quot;com.intellij.ide.scratch.LRUPopupBuilder$1/&quot;: [\n      &quot;MySQL&quot;\n    ]\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/backend/prisma\" />\n      <recent name=\"$PROJECT_DIR$/frontend\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Docker.compose-dev.yml: Compose Deployment\">\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\">\n      <deployment type=\"docker-compose.yml\">\n        <settings />\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"compose-dev.yml: Compose Deployment\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\" server-name=\"Docker\">\n      <deployment type=\"docker-compose.yml\">\n        <settings>\n          <option name=\"envFilePath\" value=\"$PROJECT_DIR$/.env.dev\" />\n          <option name=\"removeVolumesOnComposeDown\" value=\"true\" />\n          <option name=\"sourceFilePath\" value=\"compose-dev.yml\" />\n        </settings>\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"compose-dev.yml.cake_pos_db: Compose Deployment\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\" server-name=\"Docker\">\n      <deployment type=\"docker-compose.yml\">\n        <settings>\n          <option name=\"services\">\n            <list>\n              <option value=\"cake_pos_db\" />\n            </list>\n          </option>\n          <option name=\"sourceFilePath\" value=\"compose-dev.yml\" />\n        </settings>\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Docker.compose-dev.yml.cake_pos_db: Compose Deployment\" />\n      <item itemvalue=\"Docker.compose-dev.yml: Compose Deployment\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Docker.compose-dev.yml: Compose Deployment\" />\n        <item itemvalue=\"Docker.compose-dev.yml.cake_pos_db: Compose Deployment\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-b26f3e71634d-JavaScript-WS-251.26094.131\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ef5dec76-6049-4938-8b0f-72cdaa7b5451\" name=\"Changes\" comment=\"\" />\n      <created>1746845927127</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1746845927127</updated>\n      <workItem from=\"1746845928166\" duration=\"806000\" />\n      <workItem from=\"1746849108267\" duration=\"66000\" />\n      <workItem from=\"1746858422066\" duration=\"1498000\" />\n      <workItem from=\"1747026028609\" duration=\"884000\" />\n      <workItem from=\"1747114660243\" duration=\"398000\" />\n      <workItem from=\"1747115076802\" duration=\"199000\" />\n      <workItem from=\"1747441664590\" duration=\"109000\" />\n      <workItem from=\"1747447432267\" duration=\"3785000\" />\n      <workItem from=\"1747459847256\" duration=\"5063000\" />\n      <workItem from=\"1747476528978\" duration=\"11948000\" />\n      <workItem from=\"1747537900274\" duration=\"6000\" />\n      <workItem from=\"1749738446092\" duration=\"17000\" />\n      <workItem from=\"1749964105174\" duration=\"11629000\" />\n      <workItem from=\"1750034948886\" duration=\"8174000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Remove all project files and configurations&#10;&#10;This commit deletes all source code, dependencies, configurations, and project assets. It effectively cleans up the repository, leaving no traces of the previous Next.js project or related files.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1747115006075</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1747115006075</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1747115174554</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1747115174554</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"OPEN_GENERIC_TABS\">\n      <map>\n        <entry key=\"81698f31-40de-45ff-a4c3-973c7e283337\" value=\"TOOL_WINDOW\" />\n      </map>\n    </option>\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"81698f31-40de-45ff-a4c3-973c7e283337\">\n          <value>\n            <State />\n          </value>\n        </entry>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\n                <map>\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Initial commit from Create Next App\" />\n    <MESSAGE value=\"Remove all project files and configurations&#10;&#10;This commit deletes all source code, dependencies, configurations, and project assets. It effectively cleans up the repository, leaving no traces of the previous Next.js project or related files.\" />\n    <MESSAGE value=\"Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend.\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/.idea/workspace.xml	(date 1750237999563)
@@ -4,15 +4,144 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ef5dec76-6049-4938-8b0f-72cdaa7b5451" name="Changes" comment="Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend.">
+    <list default="true" id="ef5dec76-6049-4938-8b0f-72cdaa7b5451" name="Changes" comment="Cập nhật và cải thiện cấu trúc mã nguồn, bao gồm việc loại bỏ các dòng trống thừa và cải thiện định dạng trong các file DTO và module">
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/orders/[id]/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/orders/cancelled/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/orders/completed/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/orders/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/orders/processing/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/[id]/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/categories/[id]/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/categories/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/product-sizes/[id]/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/products/product-sizes/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/profile/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/profile/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/promotions/[id]/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/promotions/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/promotions/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/reports/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/reports/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/store-info/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/app/store-info/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/charts/employee-performance-chart.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/charts/product-sales-chart.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/charts/revenue-chart.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/charts/summary-stats.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-category-dialog.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-discount-form.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-product-dialog.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-product-size-dialog.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/edit-product-size-dialog.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/ui/clearable-input.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/components/ui/clearable-textarea.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/category-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/discount-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/product-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/product-size-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/profile-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/reports-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/store-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/category.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/discount.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/product-size.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/product.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/profile.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/store.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/categories.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/discounts.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/orders.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/product-sizes.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/products.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/profile.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/reports.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/manager/src/stores/store.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/.cursorrule" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/error-handling-and-validation.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/general-typescript-coding-style.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/key-conventions.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/naming-conventions.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/next-js.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/performance-optimization.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/react-remix.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/react-server-components-rsc.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/syntax-and-formatting.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/typescript-specific-rules.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursor/rules/ui-and-styling.mdc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.cursorignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/.env.development" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/components.json" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/pnpm-lock.yaml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/pos.code-workspace" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/app/login/layout.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/app/login/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/app/pos/page.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/forms/login-form.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/providers/auth-provider.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/badge.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/button.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/card.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/dialog.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/dropdown-menu.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/form.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/input.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/label.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/separator.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/skeleton.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/sonner.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/components/ui/tooltip.tsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/lib/api-client.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/lib/services/auth-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/lib/services/category-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/lib/services/product-service.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/lib/utils.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/lib/validations/auth.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/stores/auth.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/stores/pos.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/stores/ui.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/types/api.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/types/auth.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/src/types/index.ts" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/frontend/pos/tailwind.config.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/backend/src/customer/dto/create-customer.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/customer/dto/create-customer.dto.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/manager/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/.gitignore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/eslint.config.mjs" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/eslint.config.mjs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/package.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/pnpm-lock.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/pnpm-lock.yaml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/globals.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/login/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/login/page.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/customers/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/customers/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/employees/[id]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/employees/[id]/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/employees/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/employees/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/managers/[id]/edit/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/managers/[id]/edit/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/managers/[id]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/managers/[id]/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/managers/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/managers/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/membership-types/[id]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/membership-types/[id]/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/app/users/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/app/users/page.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-customer-dialog.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-customer-dialog.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-employee-dialog.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-employee-dialog.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-manager-form.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/create-manager-form.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/components/forms/login-form.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/components/forms/login-form.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/components/layout/header.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/components/layout/header.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/components/layout/sidebar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/components/layout/sidebar.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/api-client.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/api-client.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/services/customer-service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/customer-service.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/validations/customer.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/customer.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/validations/membership-type.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/validations/membership-type.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/services/employee-service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/employee-service.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/services/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/index.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/services/manager-service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/manager-service.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/services/membership-type-service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/membership-type-service.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/lib/services/order-service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/lib/services/order-service.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/manager/src/types/api.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/manager/src/types/api.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/.gitignore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/package.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/src/app/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/src/app/globals.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/src/app/layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/src/app/layout.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/src/app/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/src/app/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pos/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pos/tsconfig.json" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -148,6 +277,9 @@
       <workItem from="1749738446092" duration="17000" />
       <workItem from="1749964105174" duration="11629000" />
       <workItem from="1750034948886" duration="8174000" />
+      <workItem from="1750124111328" duration="7637000" />
+      <workItem from="1750208293647" duration="3392000" />
+      <workItem from="1750226730722" duration="3458000" />
     </task>
     <task id="LOCAL-00001" summary="Remove all project files and configurations&#10;&#10;This commit deletes all source code, dependencies, configurations, and project assets. It effectively cleans up the repository, leaving no traces of the previous Next.js project or related files.">
       <option name="closed" value="true" />
@@ -165,7 +297,15 @@
       <option name="project" value="LOCAL" />
       <updated>1747115174554</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Cập nhật và cải thiện cấu trúc mã nguồn, bao gồm việc loại bỏ các dòng trống thừa và cải thiện định dạng trong các file DTO và module">
+      <option name="closed" value="true" />
+      <created>1750228103331</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1750228103331</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -202,6 +342,7 @@
     <MESSAGE value="Initial commit from Create Next App" />
     <MESSAGE value="Remove all project files and configurations&#10;&#10;This commit deletes all source code, dependencies, configurations, and project assets. It effectively cleans up the repository, leaving no traces of the previous Next.js project or related files." />
     <MESSAGE value="Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend." />
-    <option name="LAST_COMMIT_MESSAGE" value="Add .gitignore and package-lock.json for frontend&#10;&#10;Introduced a .gitignore file to exclude unnecessary files such as node_modules, build artifacts, and environment files. Added a package-lock.json file to lock dependencies for consistent builds. These changes set up the basic project structure for the frontend." />
+    <MESSAGE value="Cập nhật và cải thiện cấu trúc mã nguồn, bao gồm việc loại bỏ các dòng trống thừa và cải thiện định dạng trong các file DTO và module" />
+    <option name="LAST_COMMIT_MESSAGE" value="Cập nhật và cải thiện cấu trúc mã nguồn, bao gồm việc loại bỏ các dòng trống thừa và cải thiện định dạng trong các file DTO và module" />
   </component>
 </project>
\ No newline at end of file
Index: frontend/pos/src/lib/validations/auth.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/lib/validations/auth.ts b/frontend/pos/src/lib/validations/auth.ts
new file mode 100644
--- /dev/null	(date 1750217299851)
+++ b/frontend/pos/src/lib/validations/auth.ts	(date 1750217299851)
@@ -0,0 +1,14 @@
+import { z } from "zod";
+
+export const loginSchema = z.object({
+  username: z
+    .string()
+    .min(1, "Tên đăng nhập không được để trống")
+    .min(3, "Tên đăng nhập phải có ít nhất 3 ký tự"),
+  password: z
+    .string()
+    .min(1, "Mật khẩu không được để trống")
+    .min(6, "Mật khẩu phải có ít nhất 6 ký tự"),
+});
+
+export type LoginFormData = z.infer<typeof loginSchema>; 
\ No newline at end of file
Index: frontend/pos/src/lib/services/auth-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/lib/services/auth-service.ts b/frontend/pos/src/lib/services/auth-service.ts
new file mode 100644
--- /dev/null	(date 1750224972522)
+++ b/frontend/pos/src/lib/services/auth-service.ts	(date 1750224972522)
@@ -0,0 +1,55 @@
+import { apiClient } from "@/lib/api-client";
+import { User, LoginCredentials, LoginResponse, RefreshTokenResponse } from "@/types/auth";
+
+/**
+ * Authentication Service
+ * Xử lý tất cả API calls liên quan đến authentication
+ */
+export class AuthService {
+  private readonly endpoint = "/auth";
+
+  /**
+   * Đăng nhập
+   */
+  async login(credentials: LoginCredentials): Promise<LoginResponse> {
+    return apiClient.post<LoginResponse>(`${this.endpoint}/login`, credentials);
+  }
+
+  /**
+   * Đăng xuất
+   */
+  async logout(): Promise<{ message: string }> {
+    return apiClient.post<{ message: string }>(`${this.endpoint}/logout`);
+  }
+
+  /**
+   * Lấy thông tin user hiện tại
+   */
+  async getCurrentUser(): Promise<{ user: User }> {
+    return apiClient.get<{ user: User }>(`${this.endpoint}/profile`);
+  }
+
+  /**
+   * Refresh token
+   */
+  async refreshToken(): Promise<RefreshTokenResponse> {
+    return apiClient.post<RefreshTokenResponse>(`${this.endpoint}/refresh`);
+  }
+
+  /**
+   * Thu hồi token
+   */
+  async revokeToken(): Promise<{ message: string }> {
+    return apiClient.post<{ message: string }>(`${this.endpoint}/revoke`);
+  }
+
+  /**
+   * Test endpoint
+   */
+  async test(): Promise<{ message: string }> {
+    return apiClient.get<{ message: string }>(`${this.endpoint}/test`);
+  }
+}
+
+// Export singleton instance
+export const authService = new AuthService(); 
\ No newline at end of file
Index: frontend/pos/src/stores/auth.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/stores/auth.ts b/frontend/pos/src/stores/auth.ts
new file mode 100644
--- /dev/null	(date 1750224727458)
+++ b/frontend/pos/src/stores/auth.ts	(date 1750224727458)
@@ -0,0 +1,117 @@
+"use client";
+
+import { create } from 'zustand';
+import { persist } from 'zustand/middleware';
+import { authService } from '@/lib/services/auth-service';
+import { User, LoginCredentials } from '@/types/auth';
+
+interface AuthState {
+  // State
+  user: User | null;
+  token: string | null;
+  isAuthenticated: boolean;
+  isLoading: boolean;
+  
+  // Actions
+  login: (credentials: LoginCredentials) => Promise<void>;
+  logout: () => Promise<void>;
+  setUser: (user: User) => void;
+  setToken: (token: string) => void;
+  clearAuth: () => void;
+  initializeAuth: () => void;
+}
+
+export const useAuthStore = create<AuthState>()(
+  persist(
+    (set, get) => ({
+      // Initial state
+      user: null,
+      token: null,
+      isAuthenticated: false,
+      isLoading: false,
+
+      // Actions
+      login: async (credentials: LoginCredentials) => {
+        try {
+          set({ isLoading: true });
+          
+          const response = await authService.login(credentials);
+          
+          set({
+            user: response.user,
+            token: response.access_token,
+            isAuthenticated: true,
+            isLoading: false,
+          });
+          
+          // Store token in localStorage
+          localStorage.setItem('auth_token', response.access_token);
+          
+        } catch (error) {
+          set({ isLoading: false });
+          throw error;
+        }
+      },
+
+      logout: async () => {
+        try {
+          await authService.logout();
+        } catch (error) {
+          console.error('Lỗi khi đăng xuất:', error);
+        } finally {
+          set({
+            user: null,
+            token: null,
+            isAuthenticated: false,
+          });
+          localStorage.removeItem('auth_token');
+        }
+      },
+
+      setUser: (user: User) => {
+        set({ user, isAuthenticated: true });
+      },
+
+      setToken: (token: string) => {
+        set({ token });
+        localStorage.setItem('auth_token', token);
+      },
+
+      clearAuth: () => {
+        set({
+          user: null,
+          token: null,
+          isAuthenticated: false,
+        });
+        localStorage.removeItem('auth_token');
+      },
+
+      initializeAuth: () => {
+        // Lắng nghe event token expired từ API client
+        if (typeof window !== 'undefined') {
+          const handleTokenExpired = () => {
+            console.log('Token expired, clearing auth...');
+            get().clearAuth();
+            // Redirect về login page
+            window.location.href = '/login';
+          };
+
+          window.addEventListener('auth:token-expired', handleTokenExpired);
+
+          // Cleanup function
+          return () => {
+            window.removeEventListener('auth:token-expired', handleTokenExpired);
+          };
+        }
+      },
+    }),
+    {
+      name: 'auth-storage',
+      partialize: (state) => ({
+        token: state.token,
+        user: state.user,
+        isAuthenticated: state.isAuthenticated,
+      }),
+    }
+  )
+); 
\ No newline at end of file
Index: frontend/pos/src/lib/api-client.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/lib/api-client.ts b/frontend/pos/src/lib/api-client.ts
new file mode 100644
--- /dev/null	(date 1750224844949)
+++ b/frontend/pos/src/lib/api-client.ts	(date 1750224844949)
@@ -0,0 +1,343 @@
+/**
+ * API Client Configuration
+ * Cấu hình client API với environment variables và prefix
+ */
+
+// API Configuration từ environment variables
+const API_CONFIG = {
+  BASE_URL: process.env.NEXT_PUBLIC_API_URL || "https://localhost:4653/api/v1",
+  TIMEOUT: 10000, // 10 seconds
+  RETRY_ATTEMPTS: 3,
+} as const;
+
+// API Response wrapper
+interface ApiResponse<T = any> {
+  success: boolean;
+  data?: T;
+  message?: string;
+  error?: string;
+}
+
+// Error types
+export class ApiError extends Error {
+  constructor(
+    message: string,
+    public status: number,
+    public response?: any
+  ) {
+    super(message);
+    this.name = 'ApiError';
+  }
+}
+
+export class NetworkError extends Error {
+  constructor(message: string) {
+    super(message);
+    this.name = 'NetworkError';
+  }
+}
+
+/**
+ * API Client class với retry logic và error handling
+ */
+class ApiClient {
+  private baseURL: string;
+  private timeout: number;
+  private retryAttempts: number;
+  private isRefreshing: boolean = false;
+  private refreshPromise: Promise<string> | null = null;
+
+  constructor() {
+    this.baseURL = API_CONFIG.BASE_URL;
+    this.timeout = API_CONFIG.TIMEOUT;
+    this.retryAttempts = API_CONFIG.RETRY_ATTEMPTS;
+  }
+
+  /**
+   * Lấy headers mặc định với auth token
+   */
+  private getHeaders(isFormData: boolean = false): HeadersInit {
+    const token = typeof window !== 'undefined' 
+      ? localStorage.getItem("auth_token") 
+      : null;
+    
+    const headers: HeadersInit = {
+      ...(token && { Authorization: `Bearer ${token}` }),
+    };
+
+    // Không set Content-Type cho FormData, để browser tự set với boundary
+    if (!isFormData) {
+      headers["Content-Type"] = "application/json";
+    }
+
+    return headers;
+  }
+
+  /**
+   * Refresh access token
+   */
+  private async refreshAccessToken(): Promise<string> {
+    if (this.isRefreshing && this.refreshPromise) {
+      return this.refreshPromise;
+    }
+
+    this.isRefreshing = true;
+    this.refreshPromise = this.performTokenRefresh();
+
+    try {
+      const newToken = await this.refreshPromise;
+      return newToken;
+    } finally {
+      this.isRefreshing = false;
+      this.refreshPromise = null;
+    }
+  }
+
+  /**
+   * Thực hiện refresh token
+   */
+  private async performTokenRefresh(): Promise<string> {
+    try {
+      const response = await fetch(`${this.baseURL}/auth/refresh`, {
+        method: 'POST',
+        headers: {
+          'Content-Type': 'application/json',
+        },
+        credentials: 'include', // Để gửi cookie refresh_token
+      });
+
+      if (!response.ok) {
+        throw new Error('Không thể refresh token');
+      }
+
+      const data = await response.json();
+      const newToken = data.access_token;
+
+      // Cập nhật token mới vào localStorage
+      if (typeof window !== 'undefined') {
+        localStorage.setItem('auth_token', newToken);
+      }
+
+      return newToken;
+    } catch (error) {
+      // Nếu refresh thất bại, clear auth và redirect về login
+      if (typeof window !== 'undefined') {
+        localStorage.removeItem('auth_token');
+        // Dispatch custom event để auth store có thể lắng nghe
+        window.dispatchEvent(new CustomEvent('auth:token-expired'));
+      }
+      throw error;
+    }
+  }
+
+  /**
+   * Xử lý response từ API với auto refresh token
+   */
+  private async handleResponse<T>(response: Response, originalRequest?: () => Promise<Response>): Promise<T> {
+    // Nếu gặp lỗi 401 và có originalRequest, thử refresh token
+    if (response.status === 401 && originalRequest && !this.isRefreshing) {
+      try {
+        await this.refreshAccessToken();
+        
+        // Retry request với token mới
+        const retryResponse = await originalRequest();
+        return this.handleResponse<T>(retryResponse);
+      } catch (refreshError) {
+        // Nếu refresh thất bại, throw lỗi 401 gốc
+        console.error('Token refresh failed:', refreshError);
+      }
+    }
+
+    if (!response.ok) {
+      let errorMessage = `HTTP ${response.status}`;
+      
+      try {
+        const errorData = await response.json();
+        errorMessage = errorData.message || errorData.error || errorMessage;
+      } catch {
+        errorMessage = await response.text() || errorMessage;
+      }
+      
+      throw new ApiError(errorMessage, response.status, response);
+    }
+
+    try {
+      return await response.json();
+    } catch (error) {
+      throw new ApiError("Phản hồi không hợp lệ từ server", response.status);
+    }
+  }
+
+  /**
+   * Retry logic cho network requests
+   */
+  private async fetchWithRetry(
+    url: string, 
+    options: RequestInit, 
+    attempt: number = 1
+  ): Promise<Response> {
+    try {
+      const controller = new AbortController();
+      const timeoutId = setTimeout(() => controller.abort(), this.timeout);
+
+      const response = await fetch(url, {
+        ...options,
+        signal: controller.signal,
+      });
+
+      clearTimeout(timeoutId);
+      return response;
+    } catch (error) {
+      if (attempt < this.retryAttempts && this.shouldRetry(error)) {
+        console.warn(`API request failed, retrying... (${attempt}/${this.retryAttempts})`);
+        await this.delay(1000 * attempt); // Exponential backoff
+        return this.fetchWithRetry(url, options, attempt + 1);
+      }
+      
+      if (error instanceof Error && error.name === 'AbortError') {
+        throw new NetworkError("Yêu cầu bị timeout");
+      }
+      
+      throw new NetworkError(error instanceof Error ? error.message : "Lỗi kết nối mạng");
+    }
+  }
+
+  /**
+   * Kiểm tra xem có nên retry request không
+   */
+  private shouldRetry(error: any): boolean {
+    // Retry cho network errors, không retry cho 4xx errors
+    if (error instanceof ApiError) {
+      return error.status >= 500; // Chỉ retry server errors
+    }
+    return true; // Retry network errors
+  }
+
+  /**
+   * Delay utility function
+   */
+  private delay(ms: number): Promise<void> {
+    return new Promise(resolve => setTimeout(resolve, ms));
+  }
+
+  /**
+   * GET request
+   */
+  async get<T>(endpoint: string, params?: Record<string, any>): Promise<T> {
+    const url = new URL(`${this.baseURL}${endpoint}`);
+    
+    if (params) {
+      Object.entries(params).forEach(([key, value]) => {
+        if (value !== undefined && value !== null) {
+          url.searchParams.append(key, String(value));
+        }
+      });
+    }
+
+    const makeRequest = () => this.fetchWithRetry(url.toString(), {
+      method: "GET",
+      headers: this.getHeaders(),
+      credentials: 'include',
+    });
+
+    const response = await makeRequest();
+    return this.handleResponse<T>(response, makeRequest);
+  }
+
+  /**
+   * POST request
+   */
+  async post<T>(endpoint: string, data?: any): Promise<T> {
+    const url = `${this.baseURL}${endpoint}`;
+    const isFormData = data instanceof FormData;
+    
+    const makeRequest = () => this.fetchWithRetry(url, {
+      method: "POST",
+      headers: this.getHeaders(isFormData),
+      body: isFormData ? data : (data ? JSON.stringify(data) : undefined),
+      credentials: 'include',
+    });
+
+    const response = await makeRequest();
+    return this.handleResponse<T>(response, makeRequest);
+  }
+
+  /**
+   * PATCH request
+   */
+  async patch<T>(endpoint: string, data?: any): Promise<T> {
+    const url = `${this.baseURL}${endpoint}`;
+    const isFormData = data instanceof FormData;
+    
+    const makeRequest = () => this.fetchWithRetry(url, {
+      method: "PATCH",
+      headers: this.getHeaders(isFormData),
+      body: isFormData ? data : (data ? JSON.stringify(data) : undefined),
+      credentials: 'include',
+    });
+
+    const response = await makeRequest();
+    return this.handleResponse<T>(response, makeRequest);
+  }
+
+  /**
+   * PUT request
+   */
+  async put<T>(endpoint: string, data?: any): Promise<T> {
+    const url = `${this.baseURL}${endpoint}`;
+    const isFormData = data instanceof FormData;
+    
+    const makeRequest = () => this.fetchWithRetry(url, {
+      method: "PUT",
+      headers: this.getHeaders(isFormData),
+      body: isFormData ? data : (data ? JSON.stringify(data) : undefined),
+      credentials: 'include',
+    });
+
+    const response = await makeRequest();
+    return this.handleResponse<T>(response, makeRequest);
+  }
+
+  /**
+   * DELETE request
+   */
+  async delete<T>(endpoint: string, data?: any): Promise<T> {
+    const url = `${this.baseURL}${endpoint}`;
+    
+    const makeRequest = () => this.fetchWithRetry(url, {
+      method: "DELETE",
+      headers: this.getHeaders(),
+      body: data ? JSON.stringify(data) : undefined,
+      credentials: 'include',
+    });
+
+    const response = await makeRequest();
+    return this.handleResponse<T>(response, makeRequest);
+  }
+
+  /**
+   * Health check endpoint
+   */
+  async healthCheck(): Promise<{ status: string; timestamp: string }> {
+    try {
+      return await this.get("/health");
+    } catch (error) {
+      console.error("Health check failed:", error);
+      throw error;
+    }
+  }
+
+  /**
+   * Get current configuration
+   */
+  getConfig() {
+    return {
+      baseURL: this.baseURL,
+      timeout: this.timeout,
+      retryAttempts: this.retryAttempts,
+    };
+  }
+}
+
+// Export singleton instance
+export const apiClient = new ApiClient(); 
\ No newline at end of file
Index: frontend/pos/src/lib/utils.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/lib/utils.ts b/frontend/pos/src/lib/utils.ts
new file mode 100644
--- /dev/null	(date 1750214522593)
+++ b/frontend/pos/src/lib/utils.ts	(date 1750214522593)
@@ -0,0 +1,6 @@
+import { type ClassValue, clsx } from "clsx";
+import { twMerge } from "tailwind-merge";
+
+export function cn(...inputs: ClassValue[]) {
+  return twMerge(clsx(inputs));
+} 
\ No newline at end of file
Index: frontend/manager/src/lib/validations/profile.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/validations/profile.ts b/frontend/manager/src/lib/validations/profile.ts
new file mode 100644
--- /dev/null	(date 1750227674561)
+++ b/frontend/manager/src/lib/validations/profile.ts	(date 1750227674561)
@@ -0,0 +1,104 @@
+import { z } from "zod";
+
+// Profile validation schema
+export const updateProfileSchema = z.object({
+  username: z
+    .string()
+    .min(3, "Tên đăng nhập phải có ít nhất 3 ký tự")
+    .optional(),
+  
+  password: z
+    .string()
+    .min(8, "Mật khẩu phải có ít nhất 8 ký tự")
+    .optional()
+    .or(z.literal("")),
+  
+  last_name: z
+    .string()
+    .min(1, "Họ không được để trống")
+    .max(70, "Họ không được vượt quá 70 ký tự"),
+  
+  first_name: z
+    .string()
+    .min(1, "Tên không được để trống")
+    .max(70, "Tên không được vượt quá 70 ký tự"),
+  
+  gender: z
+    .enum(["MALE", "FEMALE", "OTHER"], {
+      errorMap: () => ({ message: "Giới tính không hợp lệ" }),
+    })
+    .optional(),
+  
+  phone: z
+    .string()
+    .min(10, "Số điện thoại phải có ít nhất 10 số")
+    .max(15, "Số điện thoại không được vượt quá 15 ký tự")
+    .regex(/^[0-9+\-\s()]{10,15}$/, "Số điện thoại không hợp lệ"),
+  
+  email: z
+    .string()
+    .email("Email không hợp lệ")
+    .max(100, "Email không được vượt quá 100 ký tự")
+    .optional(),
+  
+  position: z
+    .string()
+    .max(50, "Chức vụ không được vượt quá 50 ký tự")
+    .optional(),
+});
+
+export type UpdateProfileFormData = z.infer<typeof updateProfileSchema>;
+
+// Account info only schema (subset of profile)
+export const updateAccountInfoSchema = z.object({
+  username: z
+    .string()
+    .min(3, "Tên đăng nhập phải có ít nhất 3 ký tự")
+    .optional(),
+  
+  password: z
+    .string()
+    .min(8, "Mật khẩu phải có ít nhất 8 ký tự")
+    .optional()
+    .or(z.literal("")),
+});
+
+export type UpdateAccountInfoFormData = z.infer<typeof updateAccountInfoSchema>;
+
+// Personal info only schema (subset of profile)
+export const updatePersonalInfoSchema = z.object({
+  last_name: z
+    .string()
+    .min(1, "Họ không được để trống")
+    .max(70, "Họ không được vượt quá 70 ký tự"),
+  
+  first_name: z
+    .string()
+    .min(1, "Tên không được để trống")
+    .max(70, "Tên không được vượt quá 70 ký tự"),
+  
+  gender: z
+    .enum(["MALE", "FEMALE", "OTHER"], {
+      errorMap: () => ({ message: "Giới tính không hợp lệ" }),
+    })
+    .optional(),
+  
+  phone: z
+    .string()
+    .min(10, "Số điện thoại phải có ít nhất 10 số")
+    .max(15, "Số điện thoại không được vượt quá 15 ký tự")
+    .regex(/^[0-9+\-\s()]{10,15}$/, "Số điện thoại không hợp lệ"),
+  
+  email: z
+    .string()
+    .email("Email không hợp lệ")
+    .max(100, "Email không được vượt quá 100 ký tự")
+    .optional(),
+  
+  position: z
+    .string()
+    .max(50, "Chức vụ không được vượt quá 50 ký tự")
+    .optional(),
+});
+
+export type UpdatePersonalInfoFormData = z.infer<typeof updatePersonalInfoSchema>; 
\ No newline at end of file
Index: frontend/manager/src/lib/validations/store.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/validations/store.ts b/frontend/manager/src/lib/validations/store.ts
new file mode 100644
--- /dev/null	(date 1750227698812)
+++ b/frontend/manager/src/lib/validations/store.ts	(date 1750227698812)
@@ -0,0 +1,118 @@
+import { z } from "zod";
+
+// Store validation schema
+export const createStoreSchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên cửa hàng không được để trống")
+    .max(100, "Tên cửa hàng không được vượt quá 100 ký tự"),
+  
+  address: z
+    .string()
+    .min(1, "Địa chỉ không được để trống")
+    .max(255, "Địa chỉ không được vượt quá 255 ký tự"),
+  
+  phone: z
+    .string()
+    .min(10, "Số điện thoại phải có ít nhất 10 số")
+    .max(15, "Số điện thoại không được vượt quá 15 ký tự")
+    .regex(/^[0-9+\-\s()]{10,15}$/, "Số điện thoại không hợp lệ"),
+  
+  opening_time: z
+    .string()
+    .regex(/^([01]\d|2[0-3]):([0-5]\d)(:([0-5]\d))?$/, "Định dạng thời gian không hợp lệ (HH:mm hoặc HH:mm:ss)"),
+  
+  closing_time: z
+    .string()
+    .regex(/^([01]\d|2[0-3]):([0-5]\d)(:([0-5]\d))?$/, "Định dạng thời gian không hợp lệ (HH:mm hoặc HH:mm:ss)"),
+  
+  email: z
+    .string()
+    .email("Email không hợp lệ")
+    .max(100, "Email không được vượt quá 100 ký tự"),
+  
+  opening_date: z
+    .string()
+    .regex(/^\d{4}-\d{2}-\d{2}$/, "Định dạng ngày không hợp lệ (YYYY-MM-DD)"),
+  
+  tax_code: z
+    .string()
+    .min(1, "Mã số thuế không được để trống")
+    .max(20, "Mã số thuế không được vượt quá 20 ký tự"),
+});
+
+export type CreateStoreFormData = z.infer<typeof createStoreSchema>;
+
+// Update store schema (all fields optional)
+export const updateStoreSchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên cửa hàng không được để trống")
+    .max(100, "Tên cửa hàng không được vượt quá 100 ký tự")
+    .optional(),
+  
+  address: z
+    .string()
+    .min(1, "Địa chỉ không được để trống")
+    .max(255, "Địa chỉ không được vượt quá 255 ký tự")
+    .optional(),
+  
+  phone: z
+    .string()
+    .min(10, "Số điện thoại phải có ít nhất 10 số")
+    .max(15, "Số điện thoại không được vượt quá 15 ký tự")
+    .regex(/^[0-9+\-\s()]{10,15}$/, "Số điện thoại không hợp lệ")
+    .optional(),
+  
+  opening_time: z
+    .string()
+    .regex(/^([01]\d|2[0-3]):([0-5]\d)(:([0-5]\d))?$/, "Định dạng thời gian không hợp lệ (HH:mm hoặc HH:mm:ss)")
+    .optional(),
+  
+  closing_time: z
+    .string()
+    .regex(/^([01]\d|2[0-3]):([0-5]\d)(:([0-5]\d))?$/, "Định dạng thời gian không hợp lệ (HH:mm hoặc HH:mm:ss)")
+    .optional(),
+  
+  email: z
+    .string()
+    .email("Email không hợp lệ")
+    .max(100, "Email không được vượt quá 100 ký tự")
+    .optional(),
+  
+  opening_date: z
+    .string()
+    .regex(/^\d{4}-\d{2}-\d{2}$/, "Định dạng ngày không hợp lệ (YYYY-MM-DD)")
+    .optional(),
+  
+  tax_code: z
+    .string()
+    .min(1, "Mã số thuế không được để trống")
+    .max(20, "Mã số thuế không được vượt quá 20 ký tự")
+    .optional(),
+});
+
+export type UpdateStoreFormData = z.infer<typeof updateStoreSchema>;
+
+// Validation for opening/closing time comparison
+export const validateStoreHours = (opening_time: string, closing_time: string): boolean => {
+  try {
+    const openTime = new Date(`1970-01-01T${opening_time}`);
+    const closeTime = new Date(`1970-01-01T${closing_time}`);
+    return openTime < closeTime;
+  } catch {
+    return false;
+  }
+};
+
+// Custom validation for store hours
+export const storeHoursSchema = z.object({
+  opening_time: z.string(),
+  closing_time: z.string(),
+}).refine(
+  (data) => validateStoreHours(data.opening_time, data.closing_time),
+  {
+    message: "Giờ đóng cửa phải sau giờ mở cửa",
+    path: ["closing_time"],
+  }
+); 
\ No newline at end of file
Index: frontend/manager/src/lib/validations/product-size.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/validations/product-size.ts b/frontend/manager/src/lib/validations/product-size.ts
new file mode 100644
--- /dev/null	(date 1750166055992)
+++ b/frontend/manager/src/lib/validations/product-size.ts	(date 1750166055992)
@@ -0,0 +1,61 @@
+import { z } from "zod";
+
+// Schema cho tạo product size
+export const createProductSizeSchema = z.object({
+  name: z.string()
+    .min(1, "Tên kích thước là bắt buộc")
+    .max(5, "Tên kích thước không được vượt quá 5 ký tự")
+    .trim(),
+  
+  unit: z.string()
+    .min(1, "Đơn vị là bắt buộc")
+    .max(15, "Đơn vị không được vượt quá 15 ký tự")
+    .trim(),
+  
+  quantity: z.number()
+    .int("Số lượng phải là số nguyên")
+    .min(1, "Số lượng phải lớn hơn 0")
+    .max(32767, "Số lượng không được vượt quá 32767"),
+  
+  description: z.string()
+    .max(1000, "Mô tả không được vượt quá 1000 ký tự")
+    .optional()
+    .nullable()
+    .transform(val => val?.trim() || null),
+});
+
+// Schema cho cập nhật product size
+export const updateProductSizeSchema = createProductSizeSchema.partial();
+
+// Schema cho bulk delete product sizes
+export const bulkDeleteProductSizeSchema = z.object({
+  ids: z.array(z.number().int().positive())
+    .min(1, "Phải chọn ít nhất một kích thước để xóa")
+    .max(100, "Không thể xóa quá 100 kích thước cùng lúc"),
+});
+
+// Types
+export type CreateProductSizeFormData = z.infer<typeof createProductSizeSchema>;
+export type UpdateProductSizeFormData = z.infer<typeof updateProductSizeSchema>;
+export type BulkDeleteProductSizeFormData = z.infer<typeof bulkDeleteProductSizeSchema>;
+
+// Transform functions để convert form data sang DTO backend
+export function transformCreateProductSizeFormData(formData: CreateProductSizeFormData) {
+  return {
+    name: formData.name,
+    unit: formData.unit,
+    quantity: formData.quantity,
+    description: formData.description,
+  };
+}
+
+export function transformUpdateProductSizeFormData(formData: UpdateProductSizeFormData) {
+  const result: Record<string, unknown> = {};
+  
+  if (formData.name !== undefined) result.name = formData.name;
+  if (formData.unit !== undefined) result.unit = formData.unit;
+  if (formData.quantity !== undefined) result.quantity = formData.quantity;
+  if (formData.description !== undefined) result.description = formData.description;
+  
+  return result;
+} 
\ No newline at end of file
Index: frontend/manager/src/lib/services/profile-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/profile-service.ts b/frontend/manager/src/lib/services/profile-service.ts
new file mode 100644
--- /dev/null	(date 1750227330759)
+++ b/frontend/manager/src/lib/services/profile-service.ts	(date 1750227330759)
@@ -0,0 +1,37 @@
+import { apiClient } from '../api-client';
+import { 
+  Profile, 
+  UpdateProfileDto, 
+  BackendProfileResponse, 
+  transformProfileResponse 
+} from '@/types/api';
+
+class ProfileService {
+  /**
+   * Lấy thông tin profile của user hiện tại
+   */
+  async getProfile(): Promise<Profile> {
+    try {
+      const response = await apiClient.get<BackendProfileResponse>('/auth/profile');
+      return transformProfileResponse(response);
+    } catch (error) {
+      console.error('Lỗi lấy thông tin profile:', error);
+      throw error;
+    }
+  }
+
+  /**
+   * Cập nhật thông tin profile của user hiện tại
+   */
+  async updateProfile(data: UpdateProfileDto): Promise<Profile> {
+    try {
+      const response = await apiClient.patch<BackendProfileResponse>('/auth/profile', data);
+      return transformProfileResponse(response);
+    } catch (error) {
+      console.error('Lỗi cập nhật profile:', error);
+      throw error;
+    }
+  }
+}
+
+export const profileService = new ProfileService(); 
\ No newline at end of file
Index: frontend/manager/pnpm-lock.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@hookform/resolvers':\n        specifier: ^5.1.1\n        version: 5.1.1(react-hook-form@7.57.0(react@19.1.0))\n      '@radix-ui/react-alert-dialog':\n        specifier: ^1.1.14\n        version: 1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-avatar':\n        specifier: ^1.1.10\n        version: 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-checkbox':\n        specifier: ^1.3.2\n        version: 1.3.2(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-collapsible':\n        specifier: ^1.1.11\n        version: 1.1.11(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-dialog':\n        specifier: ^1.1.14\n        version: 1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-dropdown-menu':\n        specifier: ^2.1.15\n        version: 2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-label':\n        specifier: ^2.1.7\n        version: 2.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-navigation-menu':\n        specifier: ^1.2.13\n        version: 1.2.13(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-scroll-area':\n        specifier: ^1.2.9\n        version: 1.2.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-select':\n        specifier: ^2.2.5\n        version: 2.2.5(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-separator':\n        specifier: ^1.1.7\n        version: 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot':\n        specifier: ^1.2.3\n        version: 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-switch':\n        specifier: ^1.2.5\n        version: 1.2.5(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-tabs':\n        specifier: ^1.1.12\n        version: 1.1.12(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-toast':\n        specifier: ^1.2.14\n        version: 1.2.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-tooltip':\n        specifier: ^1.2.7\n        version: 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@tanstack/react-table':\n        specifier: ^8.21.3\n        version: 8.21.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@tanstack/table-core':\n        specifier: ^8.21.3\n        version: 8.21.3\n      class-variance-authority:\n        specifier: ^0.7.1\n        version: 0.7.1\n      clsx:\n        specifier: ^2.1.1\n        version: 2.1.1\n      date-fns:\n        specifier: ^4.1.0\n        version: 4.1.0\n      lucide-react:\n        specifier: ^0.515.0\n        version: 0.515.0(react@19.1.0)\n      next:\n        specifier: 15.3.3\n        version: 15.3.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      next-themes:\n        specifier: ^0.4.6\n        version: 0.4.6(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react:\n        specifier: ^19.0.0\n        version: 19.1.0\n      react-dom:\n        specifier: ^19.0.0\n        version: 19.1.0(react@19.1.0)\n      react-hook-form:\n        specifier: ^7.57.0\n        version: 7.57.0(react@19.1.0)\n      sonner:\n        specifier: ^2.0.5\n        version: 2.0.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      tailwind-merge:\n        specifier: ^3.3.1\n        version: 3.3.1\n      tailwindcss-animate:\n        specifier: ^1.0.7\n        version: 1.0.7(tailwindcss@4.1.10)\n      zod:\n        specifier: ^3.25.64\n        version: 3.25.64\n      zustand:\n        specifier: ^5.0.5\n        version: 5.0.5(@types/react@19.1.8)(react@19.1.0)(use-sync-external-store@1.5.0(react@19.1.0))\n    devDependencies:\n      '@eslint/eslintrc':\n        specifier: ^3\n        version: 3.3.1\n      '@tailwindcss/postcss':\n        specifier: ^4\n        version: 4.1.10\n      '@types/node':\n        specifier: ^20\n        version: 20.19.0\n      '@types/react':\n        specifier: ^19\n        version: 19.1.8\n      '@types/react-dom':\n        specifier: ^19\n        version: 19.1.6(@types/react@19.1.8)\n      dotenv-cli:\n        specifier: ^8.0.0\n        version: 8.0.0\n      eslint:\n        specifier: ^9\n        version: 9.29.0(jiti@2.4.2)\n      eslint-config-next:\n        specifier: 15.3.3\n        version: 15.3.3(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      tailwindcss:\n        specifier: ^4\n        version: 4.1.10\n      tw-animate-css:\n        specifier: ^1.3.4\n        version: 1.3.4\n      typescript:\n        specifier: ^5\n        version: 5.8.3\n\npackages:\n\n  '@alloc/quick-lru@5.2.0':\n    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}\n    engines: {node: '>=10'}\n\n  '@ampproject/remapping@2.3.0':\n    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}\n    engines: {node: '>=6.0.0'}\n\n  '@emnapi/core@1.4.3':\n    resolution: {integrity: sha512-4m62DuCE07lw01soJwPiBGC0nAww0Q+RY70VZ+n49yDIO13yyinhbWCeNnaob0lakDtWQzSdtNWzJeOJt2ma+g==}\n\n  '@emnapi/runtime@1.4.3':\n    resolution: {integrity: sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==}\n\n  '@emnapi/wasi-threads@1.0.2':\n    resolution: {integrity: sha512-5n3nTJblwRi8LlXkJ9eBzu+kZR8Yxcc7ubakyQTFzPMtIhFpUBRbsnc2Dv88IZDIbCDlBiWrknhB4Lsz7mg6BA==}\n\n  '@eslint-community/eslint-utils@4.7.0':\n    resolution: {integrity: sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0\n\n  '@eslint-community/regexpp@4.12.1':\n    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  '@eslint/config-array@0.20.1':\n    resolution: {integrity: sha512-OL0RJzC/CBzli0DrrR31qzj6d6i6Mm3HByuhflhl4LOBiWxN+3i6/t/ZQQNii4tjksXi8r2CRW1wMpWA2ULUEw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/config-helpers@0.2.3':\n    resolution: {integrity: sha512-u180qk2Um1le4yf0ruXH3PYFeEZeYC3p/4wCTKrr2U1CmGdzGi3KtY0nuPDH48UJxlKCC5RDzbcbh4X0XlqgHg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/core@0.14.0':\n    resolution: {integrity: sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/core@0.15.0':\n    resolution: {integrity: sha512-b7ePw78tEWWkpgZCDYkbqDOP8dmM6qe+AOC6iuJqlq1R/0ahMAeH3qynpnqKFGkMltrp44ohV4ubGyvLX28tzw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/eslintrc@3.3.1':\n    resolution: {integrity: sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/js@9.29.0':\n    resolution: {integrity: sha512-3PIF4cBw/y+1u2EazflInpV+lYsSG0aByVIQzAgb1m1MhHFSbqTyNqtBKHgWf/9Ykud+DhILS9EGkmekVhbKoQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/object-schema@2.1.6':\n    resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/plugin-kit@0.3.2':\n    resolution: {integrity: sha512-4SaFZCNfJqvk/kenHpI8xvN42DMaoycy4PzKc5otHxRswww1kAt82OlBuwRVLofCACCTZEcla2Ydxv8scMXaTg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@floating-ui/core@1.7.1':\n    resolution: {integrity: sha512-azI0DrjMMfIug/ExbBaeDVJXcY0a7EPvPjb2xAJPa4HeimBX+Z18HK8QQR3jb6356SnDDdxx+hinMLcJEDdOjw==}\n\n  '@floating-ui/dom@1.7.1':\n    resolution: {integrity: sha512-cwsmW/zyw5ltYTUeeYJ60CnQuPqmGwuGVhG9w0PRaRKkAyi38BT5CKrpIbb+jtahSwUl04cWzSx9ZOIxeS6RsQ==}\n\n  '@floating-ui/react-dom@2.1.3':\n    resolution: {integrity: sha512-huMBfiU9UnQ2oBwIhgzyIiSpVgvlDstU8CX0AF+wS+KzmYMs0J2a3GwuFHV1Lz+jlrQGeC1fF+Nv0QoumyV0bA==}\n    peerDependencies:\n      react: '>=16.8.0'\n      react-dom: '>=16.8.0'\n\n  '@floating-ui/utils@0.2.9':\n    resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n\n  '@hookform/resolvers@5.1.1':\n    resolution: {integrity: sha512-J/NVING3LMAEvexJkyTLjruSm7aOFx7QX21pzkiJfMoNG0wl5aFEjLTl7ay7IQb9EWY6AkrBy7tHL2Alijpdcg==}\n    peerDependencies:\n      react-hook-form: ^7.55.0\n\n  '@humanfs/core@0.19.1':\n    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanfs/node@0.16.6':\n    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanwhocodes/module-importer@1.0.1':\n    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}\n    engines: {node: '>=12.22'}\n\n  '@humanwhocodes/retry@0.3.1':\n    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}\n    engines: {node: '>=18.18'}\n\n  '@humanwhocodes/retry@0.4.3':\n    resolution: {integrity: sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==}\n    engines: {node: '>=18.18'}\n\n  '@img/sharp-darwin-arm64@0.34.2':\n    resolution: {integrity: sha512-OfXHZPppddivUJnqyKoi5YVeHRkkNE2zUFT2gbpKxp/JZCFYEYubnMg+gOp6lWfasPrTS+KPosKqdI+ELYVDtg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-darwin-x64@0.34.2':\n    resolution: {integrity: sha512-dYvWqmjU9VxqXmjEtjmvHnGqF8GrVjM2Epj9rJ6BUIXvk8slvNDJbhGFvIoXzkDhrJC2jUxNLz/GUjjvSzfw+g==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-arm64@1.1.0':\n    resolution: {integrity: sha512-HZ/JUmPwrJSoM4DIQPv/BfNh9yrOA8tlBbqbLz4JZ5uew2+o22Ik+tHQJcih7QJuSa0zo5coHTfD5J8inqj9DA==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-x64@1.1.0':\n    resolution: {integrity: sha512-Xzc2ToEmHN+hfvsl9wja0RlnXEgpKNmftriQp6XzY/RaSfwD9th+MSh0WQKzUreLKKINb3afirxW7A0fz2YWuQ==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-linux-arm64@1.1.0':\n    resolution: {integrity: sha512-IVfGJa7gjChDET1dK9SekxFFdflarnUB8PwW8aGwEoF3oAsSDuNUTYS+SKDOyOJxQyDC1aPFMuRYLoDInyV9Ew==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-arm@1.1.0':\n    resolution: {integrity: sha512-s8BAd0lwUIvYCJyRdFqvsj+BJIpDBSxs6ivrOPm/R7piTs5UIwY5OjXrP2bqXC9/moGsyRa37eYWYCOGVXxVrA==}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-ppc64@1.1.0':\n    resolution: {integrity: sha512-tiXxFZFbhnkWE2LA8oQj7KYR+bWBkiV2nilRldT7bqoEZ4HiDOcePr9wVDAZPi/Id5fT1oY9iGnDq20cwUz8lQ==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-s390x@1.1.0':\n    resolution: {integrity: sha512-xukSwvhguw7COyzvmjydRb3x/09+21HykyapcZchiCUkTThEQEOMtBj9UhkaBRLuBrgLFzQ2wbxdeCCJW/jgJA==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-x64@1.1.0':\n    resolution: {integrity: sha512-yRj2+reB8iMg9W5sULM3S74jVS7zqSzHG3Ol/twnAAkAhnGQnpjj6e4ayUz7V+FpKypwgs82xbRdYtchTTUB+Q==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.1.0':\n    resolution: {integrity: sha512-jYZdG+whg0MDK+q2COKbYidaqW/WTz0cc1E+tMAusiDygrM4ypmSCjOJPmFTvHHJ8j/6cAGyeDWZOsK06tP33w==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-x64@1.1.0':\n    resolution: {integrity: sha512-wK7SBdwrAiycjXdkPnGCPLjYb9lD4l6Ze2gSdAGVZrEL05AOUJESWU2lhlC+Ffn5/G+VKuSm6zzbQSzFX/P65A==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linux-arm64@0.34.2':\n    resolution: {integrity: sha512-D8n8wgWmPDakc83LORcfJepdOSN6MvWNzzz2ux0MnIbOqdieRZwVYY32zxVx+IFUT8er5KPcyU3XXsn+GzG/0Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linux-arm@0.34.2':\n    resolution: {integrity: sha512-0DZzkvuEOqQUP9mo2kjjKNok5AmnOr1jB2XYjkaoNRwpAYMDzRmAqUIa1nRi58S2WswqSfPOWLNOr0FDT3H5RQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-linux-s390x@0.34.2':\n    resolution: {integrity: sha512-EGZ1xwhBI7dNISwxjChqBGELCWMGDvmxZXKjQRuqMrakhO8QoMgqCrdjnAqJq/CScxfRn+Bb7suXBElKQpPDiw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-linux-x64@0.34.2':\n    resolution: {integrity: sha512-sD7J+h5nFLMMmOXYH4DD9UtSNBD05tWSSdWAcEyzqW8Cn5UxXvsHAxmxSesYUsTOBmUnjtxghKDl15EvfqLFbQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-arm64@0.34.2':\n    resolution: {integrity: sha512-NEE2vQ6wcxYav1/A22OOxoSOGiKnNmDzCYFOZ949xFmrWZOVII1Bp3NqVVpvj+3UeHMFyN5eP/V5hzViQ5CZNA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-x64@0.34.2':\n    resolution: {integrity: sha512-DOYMrDm5E6/8bm/yQLCWyuDJwUnlevR8xtF8bs+gjZ7cyUNYXiSf/E8Kp0Ss5xasIaXSHzb888V1BE4i1hFhAA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-wasm32@0.34.2':\n    resolution: {integrity: sha512-/VI4mdlJ9zkaq53MbIG6rZY+QRN3MLbR6usYlgITEzi4Rpx5S6LFKsycOQjkOGmqTNmkIdLjEvooFKwww6OpdQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [wasm32]\n\n  '@img/sharp-win32-arm64@0.34.2':\n    resolution: {integrity: sha512-cfP/r9FdS63VA5k0xiqaNaEoGxBg9k7uE+RQGzuK9fHt7jib4zAVVseR9LsE4gJcNWgT6APKMNnCcnyOtmSEUQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [win32]\n\n  '@img/sharp-win32-ia32@0.34.2':\n    resolution: {integrity: sha512-QLjGGvAbj0X/FXl8n1WbtQ6iVBpWU7JO94u/P2M4a8CFYsvQi4GW2mRy/JqkRx0qpBzaOdKJKw8uc930EX2AHw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [ia32]\n    os: [win32]\n\n  '@img/sharp-win32-x64@0.34.2':\n    resolution: {integrity: sha512-aUdT6zEYtDKCaxkofmmJDJYGCf0+pJg3eU9/oBuqvEeoB9dKI6ZLc/1iLJCTuJQDO4ptntAlkUmHgGjyuobZbw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [win32]\n\n  '@isaacs/fs-minipass@4.0.1':\n    resolution: {integrity: sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==}\n    engines: {node: '>=18.0.0'}\n\n  '@jridgewell/gen-mapping@0.3.8':\n    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@napi-rs/wasm-runtime@0.2.11':\n    resolution: {integrity: sha512-9DPkXtvHydrcOsopiYpUgPHpmj0HWZKMUnL2dZqpvC42lsratuBG06V5ipyno0fUek5VlFsNQ+AcFATSrJXgMA==}\n\n  '@next/env@15.3.3':\n    resolution: {integrity: sha512-OdiMrzCl2Xi0VTjiQQUK0Xh7bJHnOuET2s+3V+Y40WJBAXrJeGA3f+I8MZJ/YQ3mVGi5XGR1L66oFlgqXhQ4Vw==}\n\n  '@next/eslint-plugin-next@15.3.3':\n    resolution: {integrity: sha512-VKZJEiEdpKkfBmcokGjHu0vGDG+8CehGs90tBEy/IDoDDKGngeyIStt2MmE5FYNyU9BhgR7tybNWTAJY/30u+Q==}\n\n  '@next/swc-darwin-arm64@15.3.3':\n    resolution: {integrity: sha512-WRJERLuH+O3oYB4yZNVahSVFmtxRNjNF1I1c34tYMoJb0Pve+7/RaLAJJizyYiFhjYNGHRAE1Ri2Fd23zgDqhg==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@next/swc-darwin-x64@15.3.3':\n    resolution: {integrity: sha512-XHdzH/yBc55lu78k/XwtuFR/ZXUTcflpRXcsu0nKmF45U96jt1tsOZhVrn5YH+paw66zOANpOnFQ9i6/j+UYvw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@next/swc-linux-arm64-gnu@15.3.3':\n    resolution: {integrity: sha512-VZ3sYL2LXB8znNGcjhocikEkag/8xiLgnvQts41tq6i+wql63SMS1Q6N8RVXHw5pEUjiof+II3HkDd7GFcgkzw==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-arm64-musl@15.3.3':\n    resolution: {integrity: sha512-h6Y1fLU4RWAp1HPNJWDYBQ+e3G7sLckyBXhmH9ajn8l/RSMnhbuPBV/fXmy3muMcVwoJdHL+UtzRzs0nXOf9SA==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-x64-gnu@15.3.3':\n    resolution: {integrity: sha512-jJ8HRiF3N8Zw6hGlytCj5BiHyG/K+fnTKVDEKvUCyiQ/0r5tgwO7OgaRiOjjRoIx2vwLR+Rz8hQoPrnmFbJdfw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-linux-x64-musl@15.3.3':\n    resolution: {integrity: sha512-HrUcTr4N+RgiiGn3jjeT6Oo208UT/7BuTr7K0mdKRBtTbT4v9zJqCDKO97DUqqoBK1qyzP1RwvrWTvU6EPh/Cw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-win32-arm64-msvc@15.3.3':\n    resolution: {integrity: sha512-SxorONgi6K7ZUysMtRF3mIeHC5aA3IQLmKFQzU0OuhuUYwpOBc1ypaLJLP5Bf3M9k53KUUUj4vTPwzGvl/NwlQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@next/swc-win32-x64-msvc@15.3.3':\n    resolution: {integrity: sha512-4QZG6F8enl9/S2+yIiOiju0iCTFd93d8VC1q9LZS4p/Xuk81W2QDjCFeoogmrWWkAD59z8ZxepBQap2dKS5ruw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [win32]\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@nolyfill/is-core-module@1.0.39':\n    resolution: {integrity: sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==}\n    engines: {node: '>=12.4.0'}\n\n  '@radix-ui/number@1.1.1':\n    resolution: {integrity: sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==}\n\n  '@radix-ui/primitive@1.1.2':\n    resolution: {integrity: sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==}\n\n  '@radix-ui/react-alert-dialog@1.1.14':\n    resolution: {integrity: sha512-IOZfZ3nPvN6lXpJTBCunFQPRSvK8MDgSc1FB85xnIpUKOw9en0dJj8JmCAxV7BiZdtYlUpmrQjoTFkVYtdoWzQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-arrow@1.1.7':\n    resolution: {integrity: sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-avatar@1.1.10':\n    resolution: {integrity: sha512-V8piFfWapM5OmNCXTzVQY+E1rDa53zY+MQ4Y7356v4fFz6vqCyUtIz2rUD44ZEdwg78/jKmMJHj07+C/Z/rcog==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-checkbox@1.3.2':\n    resolution: {integrity: sha512-yd+dI56KZqawxKZrJ31eENUwqc1QSqg4OZ15rybGjF2ZNwMO+wCyHzAVLRp9qoYJf7kYy0YpZ2b0JCzJ42HZpA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collapsible@1.1.11':\n    resolution: {integrity: sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collection@1.1.7':\n    resolution: {integrity: sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.2':\n    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-context@1.1.2':\n    resolution: {integrity: sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dialog@1.1.14':\n    resolution: {integrity: sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-direction@1.1.1':\n    resolution: {integrity: sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dismissable-layer@1.1.10':\n    resolution: {integrity: sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-dropdown-menu@2.1.15':\n    resolution: {integrity: sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-focus-guards@1.1.2':\n    resolution: {integrity: sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-focus-scope@1.1.7':\n    resolution: {integrity: sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-id@1.1.1':\n    resolution: {integrity: sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-label@2.1.7':\n    resolution: {integrity: sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menu@2.1.15':\n    resolution: {integrity: sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-navigation-menu@1.2.13':\n    resolution: {integrity: sha512-WG8wWfDiJlSF5hELjwfjSGOXcBR/ZMhBFCGYe8vERpC39CQYZeq1PQ2kaYHdye3V95d06H89KGMsVCIE4LWo3g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popper@1.2.7':\n    resolution: {integrity: sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-portal@1.1.9':\n    resolution: {integrity: sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-presence@1.1.4':\n    resolution: {integrity: sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.1.3':\n    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-roving-focus@1.1.10':\n    resolution: {integrity: sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-scroll-area@1.2.9':\n    resolution: {integrity: sha512-YSjEfBXnhUELsO2VzjdtYYD4CfQjvao+lhhrX5XsHD7/cyUNzljF1FHEbgTPN7LH2MClfwRMIsYlqTYpKTTe2A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-select@2.2.5':\n    resolution: {integrity: sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-separator@1.1.7':\n    resolution: {integrity: sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slot@1.2.3':\n    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-switch@1.2.5':\n    resolution: {integrity: sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tabs@1.1.12':\n    resolution: {integrity: sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toast@1.2.14':\n    resolution: {integrity: sha512-nAP5FBxBJGQ/YfUB+r+O6USFVkWq3gAInkxyEnmvEV5jtSbfDhfa4hwX8CraCnbjMLsE7XSf/K75l9xXY7joWg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tooltip@1.2.7':\n    resolution: {integrity: sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-use-callback-ref@1.1.1':\n    resolution: {integrity: sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-controllable-state@1.2.2':\n    resolution: {integrity: sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-effect-event@0.0.2':\n    resolution: {integrity: sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-escape-keydown@1.1.1':\n    resolution: {integrity: sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-is-hydrated@0.1.0':\n    resolution: {integrity: sha512-U+UORVEq+cTnRIaostJv9AGdV3G6Y+zbVd+12e18jQ5A3c0xL03IhnHuiU4UV69wolOQp5GfR58NW/EgdQhwOA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.1':\n    resolution: {integrity: sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-previous@1.1.1':\n    resolution: {integrity: sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-rect@1.1.1':\n    resolution: {integrity: sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-size@1.1.1':\n    resolution: {integrity: sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-visually-hidden@1.2.3':\n    resolution: {integrity: sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/rect@1.1.1':\n    resolution: {integrity: sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==}\n\n  '@rtsao/scc@1.1.0':\n    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}\n\n  '@rushstack/eslint-patch@1.11.0':\n    resolution: {integrity: sha512-zxnHvoMQVqewTJr/W4pKjF0bMGiKJv1WX7bSrkl46Hg0QjESbzBROWK0Wg4RphzSOS5Jiy7eFimmM3UgMrMZbQ==}\n\n  '@standard-schema/utils@0.3.0':\n    resolution: {integrity: sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==}\n\n  '@swc/counter@0.1.3':\n    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}\n\n  '@swc/helpers@0.5.15':\n    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}\n\n  '@tailwindcss/node@4.1.10':\n    resolution: {integrity: sha512-2ACf1znY5fpRBwRhMgj9ZXvb2XZW8qs+oTfotJ2C5xR0/WNL7UHZ7zXl6s+rUqedL1mNi+0O+WQr5awGowS3PQ==}\n\n  '@tailwindcss/oxide-android-arm64@4.1.10':\n    resolution: {integrity: sha512-VGLazCoRQ7rtsCzThaI1UyDu/XRYVyH4/EWiaSX6tFglE+xZB5cvtC5Omt0OQ+FfiIVP98su16jDVHDEIuH4iQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [android]\n\n  '@tailwindcss/oxide-darwin-arm64@4.1.10':\n    resolution: {integrity: sha512-ZIFqvR1irX2yNjWJzKCqTCcHZbgkSkSkZKbRM3BPzhDL/18idA8uWCoopYA2CSDdSGFlDAxYdU2yBHwAwx8euQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@tailwindcss/oxide-darwin-x64@4.1.10':\n    resolution: {integrity: sha512-eCA4zbIhWUFDXoamNztmS0MjXHSEJYlvATzWnRiTqJkcUteSjO94PoRHJy1Xbwp9bptjeIxxBHh+zBWFhttbrQ==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@tailwindcss/oxide-freebsd-x64@4.1.10':\n    resolution: {integrity: sha512-8/392Xu12R0cc93DpiJvNpJ4wYVSiciUlkiOHOSOQNH3adq9Gi/dtySK7dVQjXIOzlpSHjeCL89RUUI8/GTI6g==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@tailwindcss/oxide-linux-arm-gnueabihf@4.1.10':\n    resolution: {integrity: sha512-t9rhmLT6EqeuPT+MXhWhlRYIMSfh5LZ6kBrC4FS6/+M1yXwfCtp24UumgCWOAJVyjQwG+lYva6wWZxrfvB+NhQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm]\n    os: [linux]\n\n  '@tailwindcss/oxide-linux-arm64-gnu@4.1.10':\n    resolution: {integrity: sha512-3oWrlNlxLRxXejQ8zImzrVLuZ/9Z2SeKoLhtCu0hpo38hTO2iL86eFOu4sVR8cZc6n3z7eRXXqtHJECa6mFOvA==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@tailwindcss/oxide-linux-arm64-musl@4.1.10':\n    resolution: {integrity: sha512-saScU0cmWvg/Ez4gUmQWr9pvY9Kssxt+Xenfx1LG7LmqjcrvBnw4r9VjkFcqmbBb7GCBwYNcZi9X3/oMda9sqQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@tailwindcss/oxide-linux-x64-gnu@4.1.10':\n    resolution: {integrity: sha512-/G3ao/ybV9YEEgAXeEg28dyH6gs1QG8tvdN9c2MNZdUXYBaIY/Gx0N6RlJzfLy/7Nkdok4kaxKPHKJUlAaoTdA==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@tailwindcss/oxide-linux-x64-musl@4.1.10':\n    resolution: {integrity: sha512-LNr7X8fTiKGRtQGOerSayc2pWJp/9ptRYAa4G+U+cjw9kJZvkopav1AQc5HHD+U364f71tZv6XamaHKgrIoVzA==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@tailwindcss/oxide-wasm32-wasi@4.1.10':\n    resolution: {integrity: sha512-d6ekQpopFQJAcIK2i7ZzWOYGZ+A6NzzvQ3ozBvWFdeyqfOZdYHU66g5yr+/HC4ipP1ZgWsqa80+ISNILk+ae/Q==}\n    engines: {node: '>=14.0.0'}\n    cpu: [wasm32]\n    bundledDependencies:\n      - '@napi-rs/wasm-runtime'\n      - '@emnapi/core'\n      - '@emnapi/runtime'\n      - '@tybys/wasm-util'\n      - '@emnapi/wasi-threads'\n      - tslib\n\n  '@tailwindcss/oxide-win32-arm64-msvc@4.1.10':\n    resolution: {integrity: sha512-i1Iwg9gRbwNVOCYmnigWCCgow8nDWSFmeTUU5nbNx3rqbe4p0kRbEqLwLJbYZKmSSp23g4N6rCDmm7OuPBXhDA==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@tailwindcss/oxide-win32-x64-msvc@4.1.10':\n    resolution: {integrity: sha512-sGiJTjcBSfGq2DVRtaSljq5ZgZS2SDHSIfhOylkBvHVjwOsodBhnb3HdmiKkVuUGKD0I7G63abMOVaskj1KpOA==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [win32]\n\n  '@tailwindcss/oxide@4.1.10':\n    resolution: {integrity: sha512-v0C43s7Pjw+B9w21htrQwuFObSkio2aV/qPx/mhrRldbqxbWJK6KizM+q7BF1/1CmuLqZqX3CeYF7s7P9fbA8Q==}\n    engines: {node: '>= 10'}\n\n  '@tailwindcss/postcss@4.1.10':\n    resolution: {integrity: sha512-B+7r7ABZbkXJwpvt2VMnS6ujcDoR2OOcFaqrLIo1xbcdxje4Vf+VgJdBzNNbrAjBj/rLZ66/tlQ1knIGNLKOBQ==}\n\n  '@tanstack/react-table@8.21.3':\n    resolution: {integrity: sha512-5nNMTSETP4ykGegmVkhjcS8tTLW6Vl4axfEGQN3v0zdHYbK4UfoqfPChclTrJ4EoK9QynqAu9oUf8VEmrpZ5Ww==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      react: '>=16.8'\n      react-dom: '>=16.8'\n\n  '@tanstack/table-core@8.21.3':\n    resolution: {integrity: sha512-ldZXEhOBb8Is7xLs01fR3YEc3DERiz5silj8tnGkFZytt1abEvl/GhUmCE0PMLaMPTa3Jk4HbKmRlHmu+gCftg==}\n    engines: {node: '>=12'}\n\n  '@tybys/wasm-util@0.9.0':\n    resolution: {integrity: sha512-6+7nlbMVX/PVDCwaIQ8nTOPveOcFLSt8GcXdx8hD0bt39uWxYT88uXzqTd4fTvqta7oeUJqudepapKNt2DYJFw==}\n\n  '@types/estree@1.0.8':\n    resolution: {integrity: sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==}\n\n  '@types/json-schema@7.0.15':\n    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}\n\n  '@types/json5@0.0.29':\n    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n\n  '@types/node@20.19.0':\n    resolution: {integrity: sha512-hfrc+1tud1xcdVTABC2JiomZJEklMcXYNTVtZLAeqTVWD+qL5jkHKT+1lOtqDdGxt+mB53DTtiz673vfjU8D1Q==}\n\n  '@types/react-dom@19.1.6':\n    resolution: {integrity: sha512-4hOiT/dwO8Ko0gV1m/TJZYk3y0KBnY9vzDh7W+DH17b2HFSOGgdj33dhihPeuy3l0q23+4e+hoXHV6hCC4dCXw==}\n    peerDependencies:\n      '@types/react': ^19.0.0\n\n  '@types/react@19.1.8':\n    resolution: {integrity: sha512-AwAfQ2Wa5bCx9WP8nZL2uMZWod7J7/JSplxbTmBQ5ms6QpqNYm672H0Vu9ZVKVngQ+ii4R/byguVEUZQyeg44g==}\n\n  '@typescript-eslint/eslint-plugin@8.34.0':\n    resolution: {integrity: sha512-QXwAlHlbcAwNlEEMKQS2RCgJsgXrTJdjXT08xEgbPFa2yYQgVjBymxP5DrfrE7X7iodSzd9qBUHUycdyVJTW1w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      '@typescript-eslint/parser': ^8.34.0\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/parser@8.34.0':\n    resolution: {integrity: sha512-vxXJV1hVFx3IXz/oy2sICsJukaBrtDEQSBiV48/YIV5KWjX1dO+bcIr/kCPrW6weKXvsaGKFNlwH0v2eYdRRbA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/project-service@8.34.0':\n    resolution: {integrity: sha512-iEgDALRf970/B2YExmtPMPF54NenZUf4xpL3wsCRx/lgjz6ul/l13R81ozP/ZNuXfnLCS+oPmG7JIxfdNYKELw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/scope-manager@8.34.0':\n    resolution: {integrity: sha512-9Ac0X8WiLykl0aj1oYQNcLZjHgBojT6cW68yAgZ19letYu+Hxd0rE0veI1XznSSst1X5lwnxhPbVdwjDRIomRw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/tsconfig-utils@8.34.0':\n    resolution: {integrity: sha512-+W9VYHKFIzA5cBeooqQxqNriAP0QeQ7xTiDuIOr71hzgffm3EL2hxwWBIIj4GuofIbKxGNarpKqIq6Q6YrShOA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/type-utils@8.34.0':\n    resolution: {integrity: sha512-n7zSmOcUVhcRYC75W2pnPpbO1iwhJY3NLoHEtbJwJSNlVAZuwqu05zY3f3s2SDWWDSo9FdN5szqc73DCtDObAg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/types@8.34.0':\n    resolution: {integrity: sha512-9V24k/paICYPniajHfJ4cuAWETnt7Ssy+R0Rbcqo5sSFr3QEZ/8TSoUi9XeXVBGXCaLtwTOKSLGcInCAvyZeMA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/typescript-estree@8.34.0':\n    resolution: {integrity: sha512-rOi4KZxI7E0+BMqG7emPSK1bB4RICCpF7QD3KCLXn9ZvWoESsOMlHyZPAHyG04ujVplPaHbmEvs34m+wjgtVtg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/utils@8.34.0':\n    resolution: {integrity: sha512-8L4tWatGchV9A1cKbjaavS6mwYwp39jql8xUmIIKJdm+qiaeHy5KMKlBrf30akXAWBzn2SqKsNOtSENWUwg7XQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.9.0'\n\n  '@typescript-eslint/visitor-keys@8.34.0':\n    resolution: {integrity: sha512-qHV7pW7E85A0x6qyrFn+O+q1k1p3tQCsqIZ1KZ5ESLXY57aTvUd3/a4rdPTeXisvhXn2VQG0VSKUqs8KHF2zcA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@unrs/resolver-binding-android-arm-eabi@1.9.0':\n    resolution: {integrity: sha512-h1T2c2Di49ekF2TE8ZCoJkb+jwETKUIPDJ/nO3tJBKlLFPu+fyd93f0rGP/BvArKx2k2HlRM4kqkNarj3dvZlg==}\n    cpu: [arm]\n    os: [android]\n\n  '@unrs/resolver-binding-android-arm64@1.9.0':\n    resolution: {integrity: sha512-sG1NHtgXtX8owEkJ11yn34vt0Xqzi3k9TJ8zppDmyG8GZV4kVWw44FHwKwHeEFl07uKPeC4ZoyuQaGh5ruJYPA==}\n    cpu: [arm64]\n    os: [android]\n\n  '@unrs/resolver-binding-darwin-arm64@1.9.0':\n    resolution: {integrity: sha512-nJ9z47kfFnCxN1z/oYZS7HSNsFh43y2asePzTEZpEvK7kGyuShSl3RRXnm/1QaqFL+iP+BjMwuB+DYUymOkA5A==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@unrs/resolver-binding-darwin-x64@1.9.0':\n    resolution: {integrity: sha512-TK+UA1TTa0qS53rjWn7cVlEKVGz2B6JYe0C++TdQjvWYIyx83ruwh0wd4LRxYBM5HeuAzXcylA9BH2trARXJTw==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@unrs/resolver-binding-freebsd-x64@1.9.0':\n    resolution: {integrity: sha512-6uZwzMRFcD7CcCd0vz3Hp+9qIL2jseE/bx3ZjaLwn8t714nYGwiE84WpaMCYjU+IQET8Vu/+BNAGtYD7BG/0yA==}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@unrs/resolver-binding-linux-arm-gnueabihf@1.9.0':\n    resolution: {integrity: sha512-bPUBksQfrgcfv2+mm+AZinaKq8LCFvt5PThYqRotqSuuZK1TVKkhbVMS/jvSRfYl7jr3AoZLYbDkItxgqMKRkg==}\n    cpu: [arm]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-arm-musleabihf@1.9.0':\n    resolution: {integrity: sha512-uT6E7UBIrTdCsFQ+y0tQd3g5oudmrS/hds5pbU3h4s2t/1vsGWbbSKhBSCD9mcqaqkBwoqlECpUrRJCmldl8PA==}\n    cpu: [arm]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-arm64-gnu@1.9.0':\n    resolution: {integrity: sha512-vdqBh911wc5awE2bX2zx3eflbyv8U9xbE/jVKAm425eRoOVv/VseGZsqi3A3SykckSpF4wSROkbQPvbQFn8EsA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-arm64-musl@1.9.0':\n    resolution: {integrity: sha512-/8JFZ/SnuDr1lLEVsxsuVwrsGquTvT51RZGvyDB/dOK3oYK2UqeXzgeyq6Otp8FZXQcEYqJwxb9v+gtdXn03eQ==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-ppc64-gnu@1.9.0':\n    resolution: {integrity: sha512-FkJjybtrl+rajTw4loI3L6YqSOpeZfDls4SstL/5lsP2bka9TiHUjgMBjygeZEis1oC8LfJTS8FSgpKPaQx2tQ==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-riscv64-gnu@1.9.0':\n    resolution: {integrity: sha512-w/NZfHNeDusbqSZ8r/hp8iL4S39h4+vQMc9/vvzuIKMWKppyUGKm3IST0Qv0aOZ1rzIbl9SrDeIqK86ZpUK37w==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-riscv64-musl@1.9.0':\n    resolution: {integrity: sha512-bEPBosut8/8KQbUixPry8zg/fOzVOWyvwzOfz0C0Rw6dp+wIBseyiHKjkcSyZKv/98edrbMknBaMNJfA/UEdqw==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-s390x-gnu@1.9.0':\n    resolution: {integrity: sha512-LDtMT7moE3gK753gG4pc31AAqGUC86j3AplaFusc717EUGF9ZFJ356sdQzzZzkBk1XzMdxFyZ4f/i35NKM/lFA==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-x64-gnu@1.9.0':\n    resolution: {integrity: sha512-WmFd5KINHIXj8o1mPaT8QRjA9HgSXhN1gl9Da4IZihARihEnOylu4co7i/yeaIpcfsI6sYs33cNZKyHYDh0lrA==}\n    cpu: [x64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-x64-musl@1.9.0':\n    resolution: {integrity: sha512-CYuXbANW+WgzVRIl8/QvZmDaZxrqvOldOwlbUjIM4pQ46FJ0W5cinJ/Ghwa/Ng1ZPMJMk1VFdsD/XwmCGIXBWg==}\n    cpu: [x64]\n    os: [linux]\n\n  '@unrs/resolver-binding-wasm32-wasi@1.9.0':\n    resolution: {integrity: sha512-6Rp2WH0OoitMYR57Z6VE8Y6corX8C6QEMWLgOV6qXiJIeZ1F9WGXY/yQ8yDC4iTraotyLOeJ2Asea0urWj2fKQ==}\n    engines: {node: '>=14.0.0'}\n    cpu: [wasm32]\n\n  '@unrs/resolver-binding-win32-arm64-msvc@1.9.0':\n    resolution: {integrity: sha512-rknkrTRuvujprrbPmGeHi8wYWxmNVlBoNW8+4XF2hXUnASOjmuC9FNF1tGbDiRQWn264q9U/oGtixyO3BT8adQ==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@unrs/resolver-binding-win32-ia32-msvc@1.9.0':\n    resolution: {integrity: sha512-Ceymm+iBl+bgAICtgiHyMLz6hjxmLJKqBim8tDzpX61wpZOx2bPK6Gjuor7I2RiUynVjvvkoRIkrPyMwzBzF3A==}\n    cpu: [ia32]\n    os: [win32]\n\n  '@unrs/resolver-binding-win32-x64-msvc@1.9.0':\n    resolution: {integrity: sha512-k59o9ZyeyS0hAlcaKFezYSH2agQeRFEB7KoQLXl3Nb3rgkqT1NY9Vwy+SqODiLmYnEjxWJVRE/yq2jFVqdIxZw==}\n    cpu: [x64]\n    os: [win32]\n\n  acorn-jsx@5.3.2:\n    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}\n    peerDependencies:\n      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n\n  acorn@8.15.0:\n    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  ajv@6.12.6:\n    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  argparse@2.0.1:\n    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}\n\n  aria-hidden@1.2.6:\n    resolution: {integrity: sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==}\n    engines: {node: '>=10'}\n\n  aria-query@5.3.2:\n    resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}\n    engines: {node: '>= 0.4'}\n\n  array-buffer-byte-length@1.0.2:\n    resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}\n    engines: {node: '>= 0.4'}\n\n  array-includes@3.1.9:\n    resolution: {integrity: sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.findlast@1.2.5:\n    resolution: {integrity: sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.findlastindex@1.2.6:\n    resolution: {integrity: sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flat@1.3.3:\n    resolution: {integrity: sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flatmap@1.3.3:\n    resolution: {integrity: sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.tosorted@1.1.4:\n    resolution: {integrity: sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==}\n    engines: {node: '>= 0.4'}\n\n  arraybuffer.prototype.slice@1.0.4:\n    resolution: {integrity: sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==}\n    engines: {node: '>= 0.4'}\n\n  ast-types-flow@0.0.8:\n    resolution: {integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==}\n\n  async-function@1.0.0:\n    resolution: {integrity: sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==}\n    engines: {node: '>= 0.4'}\n\n  available-typed-arrays@1.0.7:\n    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}\n    engines: {node: '>= 0.4'}\n\n  axe-core@4.10.3:\n    resolution: {integrity: sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==}\n    engines: {node: '>=4'}\n\n  axobject-query@4.1.0:\n    resolution: {integrity: sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==}\n    engines: {node: '>= 0.4'}\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  brace-expansion@1.1.12:\n    resolution: {integrity: sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==}\n\n  brace-expansion@2.0.2:\n    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  busboy@1.6.0:\n    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}\n    engines: {node: '>=10.16.0'}\n\n  call-bind-apply-helpers@1.0.2:\n    resolution: {integrity: sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==}\n    engines: {node: '>= 0.4'}\n\n  call-bind@1.0.8:\n    resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}\n    engines: {node: '>= 0.4'}\n\n  call-bound@1.0.4:\n    resolution: {integrity: sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==}\n    engines: {node: '>= 0.4'}\n\n  callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n\n  caniuse-lite@1.0.30001723:\n    resolution: {integrity: sha512-1R/elMjtehrFejxwmexeXAtae5UO9iSyFn6G/I806CYC/BLyyBk1EPhrKBkWhy6wM6Xnm47dSJQec+tLJ39WHw==}\n\n  chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n\n  chownr@3.0.0:\n    resolution: {integrity: sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==}\n    engines: {node: '>=18'}\n\n  class-variance-authority@0.7.1:\n    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}\n\n  client-only@0.0.1:\n    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}\n\n  clsx@2.1.1:\n    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n    engines: {node: '>=6'}\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  color-string@1.9.1:\n    resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}\n\n  color@4.2.3:\n    resolution: {integrity: sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==}\n    engines: {node: '>=12.5.0'}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  csstype@3.1.3:\n    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}\n\n  damerau-levenshtein@1.0.8:\n    resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}\n\n  data-view-buffer@1.0.2:\n    resolution: {integrity: sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-length@1.0.2:\n    resolution: {integrity: sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-offset@1.0.1:\n    resolution: {integrity: sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==}\n    engines: {node: '>= 0.4'}\n\n  date-fns@4.1.0:\n    resolution: {integrity: sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==}\n\n  debug@3.2.7:\n    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.4.1:\n    resolution: {integrity: sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  deep-is@0.1.4:\n    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n\n  define-data-property@1.1.4:\n    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}\n    engines: {node: '>= 0.4'}\n\n  define-properties@1.2.1:\n    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}\n    engines: {node: '>= 0.4'}\n\n  detect-libc@2.0.4:\n    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}\n    engines: {node: '>=8'}\n\n  detect-node-es@1.1.0:\n    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}\n\n  doctrine@2.1.0:\n    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}\n    engines: {node: '>=0.10.0'}\n\n  dotenv-cli@8.0.0:\n    resolution: {integrity: sha512-aLqYbK7xKOiTMIRf1lDPbI+Y+Ip/wo5k3eyp6ePysVaSqbyxjyK3dK35BTxG+rmd7djf5q2UPs4noPNH+cj0Qw==}\n    hasBin: true\n\n  dotenv-expand@10.0.0:\n    resolution: {integrity: sha512-GopVGCpVS1UKH75VKHGuQFqS1Gusej0z4FyQkPdwjil2gNIv+LNsqBlboOzpJFZKVT95GkCyWJbBSdFEFUWI2A==}\n    engines: {node: '>=12'}\n\n  dotenv@16.5.0:\n    resolution: {integrity: sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==}\n    engines: {node: '>=12'}\n\n  dunder-proto@1.0.1:\n    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}\n    engines: {node: '>= 0.4'}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  enhanced-resolve@5.18.1:\n    resolution: {integrity: sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==}\n    engines: {node: '>=10.13.0'}\n\n  es-abstract@1.24.0:\n    resolution: {integrity: sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==}\n    engines: {node: '>= 0.4'}\n\n  es-define-property@1.0.1:\n    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}\n    engines: {node: '>= 0.4'}\n\n  es-errors@1.3.0:\n    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}\n    engines: {node: '>= 0.4'}\n\n  es-iterator-helpers@1.2.1:\n    resolution: {integrity: sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==}\n    engines: {node: '>= 0.4'}\n\n  es-object-atoms@1.1.1:\n    resolution: {integrity: sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==}\n    engines: {node: '>= 0.4'}\n\n  es-set-tostringtag@2.1.0:\n    resolution: {integrity: sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==}\n    engines: {node: '>= 0.4'}\n\n  es-shim-unscopables@1.1.0:\n    resolution: {integrity: sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==}\n    engines: {node: '>= 0.4'}\n\n  es-to-primitive@1.3.0:\n    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}\n    engines: {node: '>= 0.4'}\n\n  escape-string-regexp@4.0.0:\n    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}\n    engines: {node: '>=10'}\n\n  eslint-config-next@15.3.3:\n    resolution: {integrity: sha512-QJLv/Ouk2vZnxL4b67njJwTLjTf7uZRltI0LL4GERYR4qMF5z08+gxkfODAeaK7TiC6o+cER91bDaEnwrTWV6Q==}\n    peerDependencies:\n      eslint: ^7.23.0 || ^8.0.0 || ^9.0.0\n      typescript: '>=3.3.1'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  eslint-import-resolver-node@0.3.9:\n    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}\n\n  eslint-import-resolver-typescript@3.10.1:\n    resolution: {integrity: sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '*'\n      eslint-plugin-import: '*'\n      eslint-plugin-import-x: '*'\n    peerDependenciesMeta:\n      eslint-plugin-import:\n        optional: true\n      eslint-plugin-import-x:\n        optional: true\n\n  eslint-module-utils@2.12.0:\n    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: '*'\n      eslint-import-resolver-node: '*'\n      eslint-import-resolver-typescript: '*'\n      eslint-import-resolver-webpack: '*'\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n      eslint:\n        optional: true\n      eslint-import-resolver-node:\n        optional: true\n      eslint-import-resolver-typescript:\n        optional: true\n      eslint-import-resolver-webpack:\n        optional: true\n\n  eslint-plugin-import@2.31.0:\n    resolution: {integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n\n  eslint-plugin-jsx-a11y@6.10.2:\n    resolution: {integrity: sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==}\n    engines: {node: '>=4.0'}\n    peerDependencies:\n      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9\n\n  eslint-plugin-react-hooks@5.2.0:\n    resolution: {integrity: sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0\n\n  eslint-plugin-react@7.37.5:\n    resolution: {integrity: sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\n\n  eslint-scope@8.4.0:\n    resolution: {integrity: sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint-visitor-keys@3.4.3:\n    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  eslint-visitor-keys@4.2.1:\n    resolution: {integrity: sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint@9.29.0:\n    resolution: {integrity: sha512-GsGizj2Y1rCWDu6XoEekL3RLilp0voSePurjZIkxL3wlm5o5EC9VpgaP7lrCvjnkuLvzFBQWB3vWB3K5KQTveQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    hasBin: true\n    peerDependencies:\n      jiti: '*'\n    peerDependenciesMeta:\n      jiti:\n        optional: true\n\n  espree@10.4.0:\n    resolution: {integrity: sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  esquery@1.6.0:\n    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}\n    engines: {node: '>=0.10'}\n\n  esrecurse@4.3.0:\n    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}\n    engines: {node: '>=4.0'}\n\n  estraverse@5.3.0:\n    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}\n    engines: {node: '>=4.0'}\n\n  esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n\n  fast-deep-equal@3.1.3:\n    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}\n\n  fast-glob@3.3.1:\n    resolution: {integrity: sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==}\n    engines: {node: '>=8.6.0'}\n\n  fast-glob@3.3.3:\n    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}\n    engines: {node: '>=8.6.0'}\n\n  fast-json-stable-stringify@2.1.0:\n    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n\n  fast-levenshtein@2.0.6:\n    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}\n\n  fastq@1.19.1:\n    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}\n\n  fdir@6.4.6:\n    resolution: {integrity: sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==}\n    peerDependencies:\n      picomatch: ^3 || ^4\n    peerDependenciesMeta:\n      picomatch:\n        optional: true\n\n  file-entry-cache@8.0.0:\n    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}\n    engines: {node: '>=16.0.0'}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  find-up@5.0.0:\n    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}\n    engines: {node: '>=10'}\n\n  flat-cache@4.0.1:\n    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}\n    engines: {node: '>=16'}\n\n  flatted@3.3.3:\n    resolution: {integrity: sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==}\n\n  for-each@0.3.5:\n    resolution: {integrity: sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==}\n    engines: {node: '>= 0.4'}\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  function.prototype.name@1.1.8:\n    resolution: {integrity: sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==}\n    engines: {node: '>= 0.4'}\n\n  functions-have-names@1.2.3:\n    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}\n\n  get-intrinsic@1.3.0:\n    resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}\n    engines: {node: '>= 0.4'}\n\n  get-nonce@1.0.1:\n    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}\n    engines: {node: '>=6'}\n\n  get-proto@1.0.1:\n    resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}\n    engines: {node: '>= 0.4'}\n\n  get-symbol-description@1.1.0:\n    resolution: {integrity: sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==}\n    engines: {node: '>= 0.4'}\n\n  get-tsconfig@4.10.1:\n    resolution: {integrity: sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  globals@14.0.0:\n    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}\n    engines: {node: '>=18'}\n\n  globalthis@1.0.4:\n    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}\n    engines: {node: '>= 0.4'}\n\n  gopd@1.2.0:\n    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}\n    engines: {node: '>= 0.4'}\n\n  graceful-fs@4.2.11:\n    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}\n\n  graphemer@1.4.0:\n    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}\n\n  has-bigints@1.1.0:\n    resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}\n    engines: {node: '>= 0.4'}\n\n  has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n\n  has-property-descriptors@1.0.2:\n    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}\n\n  has-proto@1.2.0:\n    resolution: {integrity: sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==}\n    engines: {node: '>= 0.4'}\n\n  has-symbols@1.1.0:\n    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}\n    engines: {node: '>= 0.4'}\n\n  has-tostringtag@1.0.2:\n    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}\n    engines: {node: '>= 0.4'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  ignore@5.3.2:\n    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}\n    engines: {node: '>= 4'}\n\n  ignore@7.0.5:\n    resolution: {integrity: sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==}\n    engines: {node: '>= 4'}\n\n  import-fresh@3.3.1:\n    resolution: {integrity: sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==}\n    engines: {node: '>=6'}\n\n  imurmurhash@0.1.4:\n    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}\n    engines: {node: '>=0.8.19'}\n\n  internal-slot@1.1.0:\n    resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}\n    engines: {node: '>= 0.4'}\n\n  is-array-buffer@3.0.5:\n    resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}\n    engines: {node: '>= 0.4'}\n\n  is-arrayish@0.3.2:\n    resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}\n\n  is-async-function@2.1.1:\n    resolution: {integrity: sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==}\n    engines: {node: '>= 0.4'}\n\n  is-bigint@1.1.0:\n    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}\n    engines: {node: '>= 0.4'}\n\n  is-boolean-object@1.2.2:\n    resolution: {integrity: sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==}\n    engines: {node: '>= 0.4'}\n\n  is-bun-module@2.0.0:\n    resolution: {integrity: sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==}\n\n  is-callable@1.2.7:\n    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}\n    engines: {node: '>= 0.4'}\n\n  is-core-module@2.16.1:\n    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}\n    engines: {node: '>= 0.4'}\n\n  is-data-view@1.0.2:\n    resolution: {integrity: sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==}\n    engines: {node: '>= 0.4'}\n\n  is-date-object@1.1.0:\n    resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-finalizationregistry@1.1.1:\n    resolution: {integrity: sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==}\n    engines: {node: '>= 0.4'}\n\n  is-generator-function@1.1.0:\n    resolution: {integrity: sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==}\n    engines: {node: '>= 0.4'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-map@2.0.3:\n    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}\n    engines: {node: '>= 0.4'}\n\n  is-negative-zero@2.0.3:\n    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}\n    engines: {node: '>= 0.4'}\n\n  is-number-object@1.1.1:\n    resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}\n    engines: {node: '>= 0.4'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-regex@1.2.1:\n    resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}\n    engines: {node: '>= 0.4'}\n\n  is-set@2.0.3:\n    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}\n    engines: {node: '>= 0.4'}\n\n  is-shared-array-buffer@1.0.4:\n    resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}\n    engines: {node: '>= 0.4'}\n\n  is-string@1.1.1:\n    resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}\n    engines: {node: '>= 0.4'}\n\n  is-symbol@1.1.1:\n    resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}\n    engines: {node: '>= 0.4'}\n\n  is-typed-array@1.1.15:\n    resolution: {integrity: sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==}\n    engines: {node: '>= 0.4'}\n\n  is-weakmap@2.0.2:\n    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}\n    engines: {node: '>= 0.4'}\n\n  is-weakref@1.1.1:\n    resolution: {integrity: sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==}\n    engines: {node: '>= 0.4'}\n\n  is-weakset@2.0.4:\n    resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}\n    engines: {node: '>= 0.4'}\n\n  isarray@2.0.5:\n    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  iterator.prototype@1.1.5:\n    resolution: {integrity: sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==}\n    engines: {node: '>= 0.4'}\n\n  jiti@2.4.2:\n    resolution: {integrity: sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==}\n    hasBin: true\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  js-yaml@4.1.0:\n    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}\n    hasBin: true\n\n  json-buffer@3.0.1:\n    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}\n\n  json-schema-traverse@0.4.1:\n    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}\n\n  json-stable-stringify-without-jsonify@1.0.1:\n    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}\n\n  json5@1.0.2:\n    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}\n    hasBin: true\n\n  jsx-ast-utils@3.3.5:\n    resolution: {integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==}\n    engines: {node: '>=4.0'}\n\n  keyv@4.5.4:\n    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}\n\n  language-subtag-registry@0.3.23:\n    resolution: {integrity: sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==}\n\n  language-tags@1.0.9:\n    resolution: {integrity: sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==}\n    engines: {node: '>=0.10'}\n\n  levn@0.4.1:\n    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}\n    engines: {node: '>= 0.8.0'}\n\n  lightningcss-darwin-arm64@1.30.1:\n    resolution: {integrity: sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [arm64]\n    os: [darwin]\n\n  lightningcss-darwin-x64@1.30.1:\n    resolution: {integrity: sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [x64]\n    os: [darwin]\n\n  lightningcss-freebsd-x64@1.30.1:\n    resolution: {integrity: sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [x64]\n    os: [freebsd]\n\n  lightningcss-linux-arm-gnueabihf@1.30.1:\n    resolution: {integrity: sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [arm]\n    os: [linux]\n\n  lightningcss-linux-arm64-gnu@1.30.1:\n    resolution: {integrity: sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [arm64]\n    os: [linux]\n\n  lightningcss-linux-arm64-musl@1.30.1:\n    resolution: {integrity: sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [arm64]\n    os: [linux]\n\n  lightningcss-linux-x64-gnu@1.30.1:\n    resolution: {integrity: sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [x64]\n    os: [linux]\n\n  lightningcss-linux-x64-musl@1.30.1:\n    resolution: {integrity: sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [x64]\n    os: [linux]\n\n  lightningcss-win32-arm64-msvc@1.30.1:\n    resolution: {integrity: sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [arm64]\n    os: [win32]\n\n  lightningcss-win32-x64-msvc@1.30.1:\n    resolution: {integrity: sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==}\n    engines: {node: '>= 12.0.0'}\n    cpu: [x64]\n    os: [win32]\n\n  lightningcss@1.30.1:\n    resolution: {integrity: sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==}\n    engines: {node: '>= 12.0.0'}\n\n  locate-path@6.0.0:\n    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}\n    engines: {node: '>=10'}\n\n  lodash.merge@4.6.2:\n    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}\n\n  loose-envify@1.4.0:\n    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n    hasBin: true\n\n  lucide-react@0.515.0:\n    resolution: {integrity: sha512-Sy7bY0MeicRm2pzrnoHm2h6C1iVoeHyBU2fjdQDsXGP51fhkhau1/ZV/dzrcxEmAKsxYb6bGaIsMnGHuQ5s0dw==}\n    peerDependencies:\n      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  magic-string@0.30.17:\n    resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}\n\n  math-intrinsics@1.1.0:\n    resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}\n    engines: {node: '>= 0.4'}\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minizlib@3.0.2:\n    resolution: {integrity: sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==}\n    engines: {node: '>= 18'}\n\n  mkdirp@3.0.1:\n    resolution: {integrity: sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  nanoid@3.3.11:\n    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  napi-postinstall@0.2.4:\n    resolution: {integrity: sha512-ZEzHJwBhZ8qQSbknHqYcdtQVr8zUgGyM/q6h6qAyhtyVMNrSgDhrC4disf03dYW0e+czXyLnZINnCTEkWy0eJg==}\n    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}\n    hasBin: true\n\n  natural-compare@1.4.0:\n    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n\n  next-themes@0.4.6:\n    resolution: {integrity: sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==}\n    peerDependencies:\n      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n\n  next@15.3.3:\n    resolution: {integrity: sha512-JqNj29hHNmCLtNvd090SyRbXJiivQ+58XjCcrC50Crb5g5u2zi7Y2YivbsEfzk6AtVI80akdOQbaMZwWB1Hthw==}\n    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@opentelemetry/api': ^1.1.0\n      '@playwright/test': ^1.41.2\n      babel-plugin-react-compiler: '*'\n      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      sass: ^1.3.0\n    peerDependenciesMeta:\n      '@opentelemetry/api':\n        optional: true\n      '@playwright/test':\n        optional: true\n      babel-plugin-react-compiler:\n        optional: true\n      sass:\n        optional: true\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-inspect@1.13.4:\n    resolution: {integrity: sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==}\n    engines: {node: '>= 0.4'}\n\n  object-keys@1.1.1:\n    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}\n    engines: {node: '>= 0.4'}\n\n  object.assign@4.1.7:\n    resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}\n    engines: {node: '>= 0.4'}\n\n  object.entries@1.1.9:\n    resolution: {integrity: sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==}\n    engines: {node: '>= 0.4'}\n\n  object.fromentries@2.0.8:\n    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}\n    engines: {node: '>= 0.4'}\n\n  object.groupby@1.0.3:\n    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}\n    engines: {node: '>= 0.4'}\n\n  object.values@1.2.1:\n    resolution: {integrity: sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==}\n    engines: {node: '>= 0.4'}\n\n  optionator@0.9.4:\n    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}\n    engines: {node: '>= 0.8.0'}\n\n  own-keys@1.0.1:\n    resolution: {integrity: sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==}\n    engines: {node: '>= 0.4'}\n\n  p-limit@3.1.0:\n    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}\n    engines: {node: '>=10'}\n\n  p-locate@5.0.0:\n    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}\n    engines: {node: '>=10'}\n\n  parent-module@1.0.1:\n    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n    engines: {node: '>=6'}\n\n  path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  picomatch@4.0.2:\n    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}\n    engines: {node: '>=12'}\n\n  possible-typed-array-names@1.1.0:\n    resolution: {integrity: sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==}\n    engines: {node: '>= 0.4'}\n\n  postcss@8.4.31:\n    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  postcss@8.5.5:\n    resolution: {integrity: sha512-d/jtm+rdNT8tpXuHY5MMtcbJFBkhXE6593XVR9UoGCH8jSFGci7jGvMGH5RYd5PBJW+00NZQt6gf7CbagJCrhg==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  prelude-ls@1.2.1:\n    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n    engines: {node: '>= 0.8.0'}\n\n  prop-types@15.8.1:\n    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}\n\n  punycode@2.3.1:\n    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}\n    engines: {node: '>=6'}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  react-dom@19.1.0:\n    resolution: {integrity: sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==}\n    peerDependencies:\n      react: ^19.1.0\n\n  react-hook-form@7.57.0:\n    resolution: {integrity: sha512-RbEks3+cbvTP84l/VXGUZ+JMrKOS8ykQCRYdm5aYsxnDquL0vspsyNhGRO7pcH6hsZqWlPOjLye7rJqdtdAmlg==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      react: ^16.8.0 || ^17 || ^18 || ^19\n\n  react-is@16.13.1:\n    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}\n\n  react-remove-scroll-bar@2.3.8:\n    resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-remove-scroll@2.7.1:\n    resolution: {integrity: sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-style-singleton@2.2.3:\n    resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react@19.1.0:\n    resolution: {integrity: sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==}\n    engines: {node: '>=0.10.0'}\n\n  reflect.getprototypeof@1.0.10:\n    resolution: {integrity: sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==}\n    engines: {node: '>= 0.4'}\n\n  regexp.prototype.flags@1.5.4:\n    resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}\n    engines: {node: '>= 0.4'}\n\n  resolve-from@4.0.0:\n    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}\n    engines: {node: '>=4'}\n\n  resolve-pkg-maps@1.0.0:\n    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n\n  resolve@1.22.10:\n    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}\n    engines: {node: '>= 0.4'}\n    hasBin: true\n\n  resolve@2.0.0-next.5:\n    resolution: {integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==}\n    hasBin: true\n\n  reusify@1.1.0:\n    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  safe-array-concat@1.1.3:\n    resolution: {integrity: sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==}\n    engines: {node: '>=0.4'}\n\n  safe-push-apply@1.0.0:\n    resolution: {integrity: sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==}\n    engines: {node: '>= 0.4'}\n\n  safe-regex-test@1.1.0:\n    resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}\n    engines: {node: '>= 0.4'}\n\n  scheduler@0.26.0:\n    resolution: {integrity: sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==}\n\n  semver@6.3.1:\n    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}\n    hasBin: true\n\n  semver@7.7.2:\n    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  set-function-length@1.2.2:\n    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}\n    engines: {node: '>= 0.4'}\n\n  set-function-name@2.0.2:\n    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}\n    engines: {node: '>= 0.4'}\n\n  set-proto@1.0.0:\n    resolution: {integrity: sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==}\n    engines: {node: '>= 0.4'}\n\n  sharp@0.34.2:\n    resolution: {integrity: sha512-lszvBmB9QURERtyKT2bNmsgxXK0ShJrL/fvqlonCo7e6xBF8nT8xU6pW+PMIbLsz0RxQk3rgH9kd8UmvOzlMJg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  side-channel-list@1.0.0:\n    resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}\n    engines: {node: '>= 0.4'}\n\n  side-channel-map@1.0.1:\n    resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}\n    engines: {node: '>= 0.4'}\n\n  side-channel-weakmap@1.0.2:\n    resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}\n    engines: {node: '>= 0.4'}\n\n  side-channel@1.1.0:\n    resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}\n    engines: {node: '>= 0.4'}\n\n  simple-swizzle@0.2.2:\n    resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n\n  sonner@2.0.5:\n    resolution: {integrity: sha512-YwbHQO6cSso3HBXlbCkgrgzDNIhws14r4MO87Ofy+cV2X7ES4pOoAK3+veSmVTvqNx1BWUxlhPmZzP00Crk2aQ==}\n    peerDependencies:\n      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  stable-hash@0.0.5:\n    resolution: {integrity: sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==}\n\n  stop-iteration-iterator@1.1.0:\n    resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}\n    engines: {node: '>= 0.4'}\n\n  streamsearch@1.1.0:\n    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}\n    engines: {node: '>=10.0.0'}\n\n  string.prototype.includes@2.0.1:\n    resolution: {integrity: sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.matchall@4.0.12:\n    resolution: {integrity: sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.repeat@1.0.0:\n    resolution: {integrity: sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==}\n\n  string.prototype.trim@1.2.10:\n    resolution: {integrity: sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.trimend@1.0.9:\n    resolution: {integrity: sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.trimstart@1.0.8:\n    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}\n    engines: {node: '>= 0.4'}\n\n  strip-bom@3.0.0:\n    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}\n    engines: {node: '>=4'}\n\n  strip-json-comments@3.1.1:\n    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}\n    engines: {node: '>=8'}\n\n  styled-jsx@5.1.6:\n    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}\n    engines: {node: '>= 12.0.0'}\n    peerDependencies:\n      '@babel/core': '*'\n      babel-plugin-macros: '*'\n      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'\n    peerDependenciesMeta:\n      '@babel/core':\n        optional: true\n      babel-plugin-macros:\n        optional: true\n\n  supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tailwind-merge@3.3.1:\n    resolution: {integrity: sha512-gBXpgUm/3rp1lMZZrM/w7D8GKqshif0zAymAhbCyIt8KMe+0v9DQ7cdYLR4FHH/cKpdTXb+A/tKKU3eolfsI+g==}\n\n  tailwindcss-animate@1.0.7:\n    resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n    peerDependencies:\n      tailwindcss: '>=3.0.0 || insiders'\n\n  tailwindcss@4.1.10:\n    resolution: {integrity: sha512-P3nr6WkvKV/ONsTzj6Gb57sWPMX29EPNPopo7+FcpkQaNsrNpZ1pv8QmrYI2RqEKD7mlGqLnGovlcYnBK0IqUA==}\n\n  tapable@2.2.2:\n    resolution: {integrity: sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==}\n    engines: {node: '>=6'}\n\n  tar@7.4.3:\n    resolution: {integrity: sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==}\n    engines: {node: '>=18'}\n\n  tinyglobby@0.2.14:\n    resolution: {integrity: sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==}\n    engines: {node: '>=12.0.0'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  ts-api-utils@2.1.0:\n    resolution: {integrity: sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==}\n    engines: {node: '>=18.12'}\n    peerDependencies:\n      typescript: '>=4.8.4'\n\n  tsconfig-paths@3.15.0:\n    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}\n\n  tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n\n  tw-animate-css@1.3.4:\n    resolution: {integrity: sha512-dd1Ht6/YQHcNbq0znIT6dG8uhO7Ce+VIIhZUhjsryXsMPJQz3bZg7Q2eNzLwipb25bRZslGb2myio5mScd1TFg==}\n\n  type-check@0.4.0:\n    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}\n    engines: {node: '>= 0.8.0'}\n\n  typed-array-buffer@1.0.3:\n    resolution: {integrity: sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-length@1.0.3:\n    resolution: {integrity: sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-offset@1.0.4:\n    resolution: {integrity: sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-length@1.0.7:\n    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}\n    engines: {node: '>= 0.4'}\n\n  typescript@5.8.3:\n    resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  unbox-primitive@1.1.0:\n    resolution: {integrity: sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==}\n    engines: {node: '>= 0.4'}\n\n  undici-types@6.21.0:\n    resolution: {integrity: sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==}\n\n  unrs-resolver@1.9.0:\n    resolution: {integrity: sha512-wqaRu4UnzBD2ABTC1kLfBjAqIDZ5YUTr/MLGa7By47JV1bJDSW7jq/ZSLigB7enLe7ubNaJhtnBXgrc/50cEhg==}\n\n  uri-js@4.4.1:\n    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}\n\n  use-callback-ref@1.3.3:\n    resolution: {integrity: sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sidecar@1.1.3:\n    resolution: {integrity: sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sync-external-store@1.5.0:\n    resolution: {integrity: sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  which-boxed-primitive@1.1.1:\n    resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}\n    engines: {node: '>= 0.4'}\n\n  which-builtin-type@1.2.1:\n    resolution: {integrity: sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==}\n    engines: {node: '>= 0.4'}\n\n  which-collection@1.0.2:\n    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}\n    engines: {node: '>= 0.4'}\n\n  which-typed-array@1.1.19:\n    resolution: {integrity: sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==}\n    engines: {node: '>= 0.4'}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  word-wrap@1.2.5:\n    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}\n    engines: {node: '>=0.10.0'}\n\n  yallist@5.0.0:\n    resolution: {integrity: sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==}\n    engines: {node: '>=18'}\n\n  yocto-queue@0.1.0:\n    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n    engines: {node: '>=10'}\n\n  zod@3.25.64:\n    resolution: {integrity: sha512-hbP9FpSZf7pkS7hRVUrOjhwKJNyampPgtXKc3AN6DsWtoHsg2Sb4SQaS4Tcay380zSwd2VPo9G9180emBACp5g==}\n\n  zustand@5.0.5:\n    resolution: {integrity: sha512-mILtRfKW9xM47hqxGIxCv12gXusoY/xTSHBYApXozR0HmQv299whhBeeAcRy+KrPPybzosvJBCOmVjq6x12fCg==}\n    engines: {node: '>=12.20.0'}\n    peerDependencies:\n      '@types/react': '>=18.0.0'\n      immer: '>=9.0.6'\n      react: '>=18.0.0'\n      use-sync-external-store: '>=1.2.0'\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      immer:\n        optional: true\n      react:\n        optional: true\n      use-sync-external-store:\n        optional: true\n\nsnapshots:\n\n  '@alloc/quick-lru@5.2.0': {}\n\n  '@ampproject/remapping@2.3.0':\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.8\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@emnapi/core@1.4.3':\n    dependencies:\n      '@emnapi/wasi-threads': 1.0.2\n      tslib: 2.8.1\n    optional: true\n\n  '@emnapi/runtime@1.4.3':\n    dependencies:\n      tslib: 2.8.1\n    optional: true\n\n  '@emnapi/wasi-threads@1.0.2':\n    dependencies:\n      tslib: 2.8.1\n    optional: true\n\n  '@eslint-community/eslint-utils@4.7.0(eslint@9.29.0(jiti@2.4.2))':\n    dependencies:\n      eslint: 9.29.0(jiti@2.4.2)\n      eslint-visitor-keys: 3.4.3\n\n  '@eslint-community/regexpp@4.12.1': {}\n\n  '@eslint/config-array@0.20.1':\n    dependencies:\n      '@eslint/object-schema': 2.1.6\n      debug: 4.4.1\n      minimatch: 3.1.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/config-helpers@0.2.3': {}\n\n  '@eslint/core@0.14.0':\n    dependencies:\n      '@types/json-schema': 7.0.15\n\n  '@eslint/core@0.15.0':\n    dependencies:\n      '@types/json-schema': 7.0.15\n\n  '@eslint/eslintrc@3.3.1':\n    dependencies:\n      ajv: 6.12.6\n      debug: 4.4.1\n      espree: 10.4.0\n      globals: 14.0.0\n      ignore: 5.3.2\n      import-fresh: 3.3.1\n      js-yaml: 4.1.0\n      minimatch: 3.1.2\n      strip-json-comments: 3.1.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/js@9.29.0': {}\n\n  '@eslint/object-schema@2.1.6': {}\n\n  '@eslint/plugin-kit@0.3.2':\n    dependencies:\n      '@eslint/core': 0.15.0\n      levn: 0.4.1\n\n  '@floating-ui/core@1.7.1':\n    dependencies:\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/dom@1.7.1':\n    dependencies:\n      '@floating-ui/core': 1.7.1\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/react-dom@2.1.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@floating-ui/dom': 1.7.1\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  '@floating-ui/utils@0.2.9': {}\n\n  '@hookform/resolvers@5.1.1(react-hook-form@7.57.0(react@19.1.0))':\n    dependencies:\n      '@standard-schema/utils': 0.3.0\n      react-hook-form: 7.57.0(react@19.1.0)\n\n  '@humanfs/core@0.19.1': {}\n\n  '@humanfs/node@0.16.6':\n    dependencies:\n      '@humanfs/core': 0.19.1\n      '@humanwhocodes/retry': 0.3.1\n\n  '@humanwhocodes/module-importer@1.0.1': {}\n\n  '@humanwhocodes/retry@0.3.1': {}\n\n  '@humanwhocodes/retry@0.4.3': {}\n\n  '@img/sharp-darwin-arm64@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-arm64': 1.1.0\n    optional: true\n\n  '@img/sharp-darwin-x64@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-x64': 1.1.0\n    optional: true\n\n  '@img/sharp-libvips-darwin-arm64@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-darwin-x64@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm64@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linux-ppc64@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linux-s390x@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linux-x64@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.1.0':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-x64@1.1.0':\n    optional: true\n\n  '@img/sharp-linux-arm64@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm64': 1.1.0\n    optional: true\n\n  '@img/sharp-linux-arm@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm': 1.1.0\n    optional: true\n\n  '@img/sharp-linux-s390x@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-s390x': 1.1.0\n    optional: true\n\n  '@img/sharp-linux-x64@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-x64': 1.1.0\n    optional: true\n\n  '@img/sharp-linuxmusl-arm64@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-arm64': 1.1.0\n    optional: true\n\n  '@img/sharp-linuxmusl-x64@0.34.2':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-x64': 1.1.0\n    optional: true\n\n  '@img/sharp-wasm32@0.34.2':\n    dependencies:\n      '@emnapi/runtime': 1.4.3\n    optional: true\n\n  '@img/sharp-win32-arm64@0.34.2':\n    optional: true\n\n  '@img/sharp-win32-ia32@0.34.2':\n    optional: true\n\n  '@img/sharp-win32-x64@0.34.2':\n    optional: true\n\n  '@isaacs/fs-minipass@4.0.1':\n    dependencies:\n      minipass: 7.1.2\n\n  '@jridgewell/gen-mapping@0.3.8':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.5.0\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@napi-rs/wasm-runtime@0.2.11':\n    dependencies:\n      '@emnapi/core': 1.4.3\n      '@emnapi/runtime': 1.4.3\n      '@tybys/wasm-util': 0.9.0\n    optional: true\n\n  '@next/env@15.3.3': {}\n\n  '@next/eslint-plugin-next@15.3.3':\n    dependencies:\n      fast-glob: 3.3.1\n\n  '@next/swc-darwin-arm64@15.3.3':\n    optional: true\n\n  '@next/swc-darwin-x64@15.3.3':\n    optional: true\n\n  '@next/swc-linux-arm64-gnu@15.3.3':\n    optional: true\n\n  '@next/swc-linux-arm64-musl@15.3.3':\n    optional: true\n\n  '@next/swc-linux-x64-gnu@15.3.3':\n    optional: true\n\n  '@next/swc-linux-x64-musl@15.3.3':\n    optional: true\n\n  '@next/swc-win32-arm64-msvc@15.3.3':\n    optional: true\n\n  '@next/swc-win32-x64-msvc@15.3.3':\n    optional: true\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.19.1\n\n  '@nolyfill/is-core-module@1.0.39': {}\n\n  '@radix-ui/number@1.1.1': {}\n\n  '@radix-ui/primitive@1.1.2': {}\n\n  '@radix-ui/react-alert-dialog@1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dialog': 1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-arrow@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-avatar@1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-is-hydrated': 0.1.0(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-checkbox@1.3.2(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-collapsible@1.1.11(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-collection@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-compose-refs@1.1.2(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-context@1.1.2(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-dialog@1.1.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.1(@types/react@19.1.8)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-direction@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-dismissable-layer@1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-escape-keydown': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-dropdown-menu@2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-menu': 2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-focus-guards@1.1.2(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-focus-scope@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-id@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-label@2.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-menu@2.1.15(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.1(@types/react@19.1.8)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-navigation-menu@1.2.13(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-popper@1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@floating-ui/react-dom': 2.1.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-arrow': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-rect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/rect': 1.1.1\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-portal@1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-presence@1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-primitive@2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-roving-focus@1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-scroll-area@1.2.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.1\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-select@2.2.5(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.1\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.1(@types/react@19.1.8)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-separator@1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-slot@1.2.3(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-switch@1.2.5(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-tabs@1.1.12(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-toast@1.2.14(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-tooltip@1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.7(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/react-use-callback-ref@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-controllable-state@1.2.2(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-effect-event': 0.0.2(@types/react@19.1.8)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-effect-event@0.0.2(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-escape-keydown@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-is-hydrated@0.1.0(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n      use-sync-external-store: 1.5.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-layout-effect@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-previous@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-rect@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/rect': 1.1.1\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-use-size@1.1.1(@types/react@19.1.8)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.8)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  '@radix-ui/react-visually-hidden@1.2.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.6(@types/react@19.1.8))(@types/react@19.1.8)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n      '@types/react-dom': 19.1.6(@types/react@19.1.8)\n\n  '@radix-ui/rect@1.1.1': {}\n\n  '@rtsao/scc@1.1.0': {}\n\n  '@rushstack/eslint-patch@1.11.0': {}\n\n  '@standard-schema/utils@0.3.0': {}\n\n  '@swc/counter@0.1.3': {}\n\n  '@swc/helpers@0.5.15':\n    dependencies:\n      tslib: 2.8.1\n\n  '@tailwindcss/node@4.1.10':\n    dependencies:\n      '@ampproject/remapping': 2.3.0\n      enhanced-resolve: 5.18.1\n      jiti: 2.4.2\n      lightningcss: 1.30.1\n      magic-string: 0.30.17\n      source-map-js: 1.2.1\n      tailwindcss: 4.1.10\n\n  '@tailwindcss/oxide-android-arm64@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-darwin-arm64@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-darwin-x64@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-freebsd-x64@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-linux-arm-gnueabihf@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-linux-arm64-gnu@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-linux-arm64-musl@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-linux-x64-gnu@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-linux-x64-musl@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-wasm32-wasi@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-win32-arm64-msvc@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide-win32-x64-msvc@4.1.10':\n    optional: true\n\n  '@tailwindcss/oxide@4.1.10':\n    dependencies:\n      detect-libc: 2.0.4\n      tar: 7.4.3\n    optionalDependencies:\n      '@tailwindcss/oxide-android-arm64': 4.1.10\n      '@tailwindcss/oxide-darwin-arm64': 4.1.10\n      '@tailwindcss/oxide-darwin-x64': 4.1.10\n      '@tailwindcss/oxide-freebsd-x64': 4.1.10\n      '@tailwindcss/oxide-linux-arm-gnueabihf': 4.1.10\n      '@tailwindcss/oxide-linux-arm64-gnu': 4.1.10\n      '@tailwindcss/oxide-linux-arm64-musl': 4.1.10\n      '@tailwindcss/oxide-linux-x64-gnu': 4.1.10\n      '@tailwindcss/oxide-linux-x64-musl': 4.1.10\n      '@tailwindcss/oxide-wasm32-wasi': 4.1.10\n      '@tailwindcss/oxide-win32-arm64-msvc': 4.1.10\n      '@tailwindcss/oxide-win32-x64-msvc': 4.1.10\n\n  '@tailwindcss/postcss@4.1.10':\n    dependencies:\n      '@alloc/quick-lru': 5.2.0\n      '@tailwindcss/node': 4.1.10\n      '@tailwindcss/oxide': 4.1.10\n      postcss: 8.5.5\n      tailwindcss: 4.1.10\n\n  '@tanstack/react-table@8.21.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@tanstack/table-core': 8.21.3\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  '@tanstack/table-core@8.21.3': {}\n\n  '@tybys/wasm-util@0.9.0':\n    dependencies:\n      tslib: 2.8.1\n    optional: true\n\n  '@types/estree@1.0.8': {}\n\n  '@types/json-schema@7.0.15': {}\n\n  '@types/json5@0.0.29': {}\n\n  '@types/node@20.19.0':\n    dependencies:\n      undici-types: 6.21.0\n\n  '@types/react-dom@19.1.6(@types/react@19.1.8)':\n    dependencies:\n      '@types/react': 19.1.8\n\n  '@types/react@19.1.8':\n    dependencies:\n      csstype: 3.1.3\n\n  '@typescript-eslint/eslint-plugin@8.34.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      '@typescript-eslint/parser': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      '@typescript-eslint/scope-manager': 8.34.0\n      '@typescript-eslint/type-utils': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      '@typescript-eslint/utils': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      '@typescript-eslint/visitor-keys': 8.34.0\n      eslint: 9.29.0(jiti@2.4.2)\n      graphemer: 1.4.0\n      ignore: 7.0.5\n      natural-compare: 1.4.0\n      ts-api-utils: 2.1.0(typescript@5.8.3)\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':\n    dependencies:\n      '@typescript-eslint/scope-manager': 8.34.0\n      '@typescript-eslint/types': 8.34.0\n      '@typescript-eslint/typescript-estree': 8.34.0(typescript@5.8.3)\n      '@typescript-eslint/visitor-keys': 8.34.0\n      debug: 4.4.1\n      eslint: 9.29.0(jiti@2.4.2)\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/project-service@8.34.0(typescript@5.8.3)':\n    dependencies:\n      '@typescript-eslint/tsconfig-utils': 8.34.0(typescript@5.8.3)\n      '@typescript-eslint/types': 8.34.0\n      debug: 4.4.1\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/scope-manager@8.34.0':\n    dependencies:\n      '@typescript-eslint/types': 8.34.0\n      '@typescript-eslint/visitor-keys': 8.34.0\n\n  '@typescript-eslint/tsconfig-utils@8.34.0(typescript@5.8.3)':\n    dependencies:\n      typescript: 5.8.3\n\n  '@typescript-eslint/type-utils@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':\n    dependencies:\n      '@typescript-eslint/typescript-estree': 8.34.0(typescript@5.8.3)\n      '@typescript-eslint/utils': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      debug: 4.4.1\n      eslint: 9.29.0(jiti@2.4.2)\n      ts-api-utils: 2.1.0(typescript@5.8.3)\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/types@8.34.0': {}\n\n  '@typescript-eslint/typescript-estree@8.34.0(typescript@5.8.3)':\n    dependencies:\n      '@typescript-eslint/project-service': 8.34.0(typescript@5.8.3)\n      '@typescript-eslint/tsconfig-utils': 8.34.0(typescript@5.8.3)\n      '@typescript-eslint/types': 8.34.0\n      '@typescript-eslint/visitor-keys': 8.34.0\n      debug: 4.4.1\n      fast-glob: 3.3.3\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.7.2\n      ts-api-utils: 2.1.0(typescript@5.8.3)\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/utils@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':\n    dependencies:\n      '@eslint-community/eslint-utils': 4.7.0(eslint@9.29.0(jiti@2.4.2))\n      '@typescript-eslint/scope-manager': 8.34.0\n      '@typescript-eslint/types': 8.34.0\n      '@typescript-eslint/typescript-estree': 8.34.0(typescript@5.8.3)\n      eslint: 9.29.0(jiti@2.4.2)\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/visitor-keys@8.34.0':\n    dependencies:\n      '@typescript-eslint/types': 8.34.0\n      eslint-visitor-keys: 4.2.1\n\n  '@unrs/resolver-binding-android-arm-eabi@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-android-arm64@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-darwin-arm64@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-darwin-x64@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-freebsd-x64@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-arm-gnueabihf@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-arm-musleabihf@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-arm64-gnu@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-arm64-musl@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-ppc64-gnu@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-riscv64-gnu@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-riscv64-musl@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-s390x-gnu@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-x64-gnu@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-linux-x64-musl@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-wasm32-wasi@1.9.0':\n    dependencies:\n      '@napi-rs/wasm-runtime': 0.2.11\n    optional: true\n\n  '@unrs/resolver-binding-win32-arm64-msvc@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-win32-ia32-msvc@1.9.0':\n    optional: true\n\n  '@unrs/resolver-binding-win32-x64-msvc@1.9.0':\n    optional: true\n\n  acorn-jsx@5.3.2(acorn@8.15.0):\n    dependencies:\n      acorn: 8.15.0\n\n  acorn@8.15.0: {}\n\n  ajv@6.12.6:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  argparse@2.0.1: {}\n\n  aria-hidden@1.2.6:\n    dependencies:\n      tslib: 2.8.1\n\n  aria-query@5.3.2: {}\n\n  array-buffer-byte-length@1.0.2:\n    dependencies:\n      call-bound: 1.0.4\n      is-array-buffer: 3.0.5\n\n  array-includes@3.1.9:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-object-atoms: 1.1.1\n      get-intrinsic: 1.3.0\n      is-string: 1.1.1\n      math-intrinsics: 1.1.0\n\n  array.prototype.findlast@1.2.5:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n      es-shim-unscopables: 1.1.0\n\n  array.prototype.findlastindex@1.2.6:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n      es-shim-unscopables: 1.1.0\n\n  array.prototype.flat@1.3.3:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-shim-unscopables: 1.1.0\n\n  array.prototype.flatmap@1.3.3:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-shim-unscopables: 1.1.0\n\n  array.prototype.tosorted@1.1.4:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      es-shim-unscopables: 1.1.0\n\n  arraybuffer.prototype.slice@1.0.4:\n    dependencies:\n      array-buffer-byte-length: 1.0.2\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      get-intrinsic: 1.3.0\n      is-array-buffer: 3.0.5\n\n  ast-types-flow@0.0.8: {}\n\n  async-function@1.0.0: {}\n\n  available-typed-arrays@1.0.7:\n    dependencies:\n      possible-typed-array-names: 1.1.0\n\n  axe-core@4.10.3: {}\n\n  axobject-query@4.1.0: {}\n\n  balanced-match@1.0.2: {}\n\n  brace-expansion@1.1.12:\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n\n  brace-expansion@2.0.2:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  busboy@1.6.0:\n    dependencies:\n      streamsearch: 1.1.0\n\n  call-bind-apply-helpers@1.0.2:\n    dependencies:\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n\n  call-bind@1.0.8:\n    dependencies:\n      call-bind-apply-helpers: 1.0.2\n      es-define-property: 1.0.1\n      get-intrinsic: 1.3.0\n      set-function-length: 1.2.2\n\n  call-bound@1.0.4:\n    dependencies:\n      call-bind-apply-helpers: 1.0.2\n      get-intrinsic: 1.3.0\n\n  callsites@3.1.0: {}\n\n  caniuse-lite@1.0.30001723: {}\n\n  chalk@4.1.2:\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n\n  chownr@3.0.0: {}\n\n  class-variance-authority@0.7.1:\n    dependencies:\n      clsx: 2.1.1\n\n  client-only@0.0.1: {}\n\n  clsx@2.1.1: {}\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.4: {}\n\n  color-string@1.9.1:\n    dependencies:\n      color-name: 1.1.4\n      simple-swizzle: 0.2.2\n    optional: true\n\n  color@4.2.3:\n    dependencies:\n      color-convert: 2.0.1\n      color-string: 1.9.1\n    optional: true\n\n  concat-map@0.0.1: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  csstype@3.1.3: {}\n\n  damerau-levenshtein@1.0.8: {}\n\n  data-view-buffer@1.0.2:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      is-data-view: 1.0.2\n\n  data-view-byte-length@1.0.2:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      is-data-view: 1.0.2\n\n  data-view-byte-offset@1.0.1:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      is-data-view: 1.0.2\n\n  date-fns@4.1.0: {}\n\n  debug@3.2.7:\n    dependencies:\n      ms: 2.1.3\n\n  debug@4.4.1:\n    dependencies:\n      ms: 2.1.3\n\n  deep-is@0.1.4: {}\n\n  define-data-property@1.1.4:\n    dependencies:\n      es-define-property: 1.0.1\n      es-errors: 1.3.0\n      gopd: 1.2.0\n\n  define-properties@1.2.1:\n    dependencies:\n      define-data-property: 1.1.4\n      has-property-descriptors: 1.0.2\n      object-keys: 1.1.1\n\n  detect-libc@2.0.4: {}\n\n  detect-node-es@1.1.0: {}\n\n  doctrine@2.1.0:\n    dependencies:\n      esutils: 2.0.3\n\n  dotenv-cli@8.0.0:\n    dependencies:\n      cross-spawn: 7.0.6\n      dotenv: 16.5.0\n      dotenv-expand: 10.0.0\n      minimist: 1.2.8\n\n  dotenv-expand@10.0.0: {}\n\n  dotenv@16.5.0: {}\n\n  dunder-proto@1.0.1:\n    dependencies:\n      call-bind-apply-helpers: 1.0.2\n      es-errors: 1.3.0\n      gopd: 1.2.0\n\n  emoji-regex@9.2.2: {}\n\n  enhanced-resolve@5.18.1:\n    dependencies:\n      graceful-fs: 4.2.11\n      tapable: 2.2.2\n\n  es-abstract@1.24.0:\n    dependencies:\n      array-buffer-byte-length: 1.0.2\n      arraybuffer.prototype.slice: 1.0.4\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      data-view-buffer: 1.0.2\n      data-view-byte-length: 1.0.2\n      data-view-byte-offset: 1.0.1\n      es-define-property: 1.0.1\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n      es-set-tostringtag: 2.1.0\n      es-to-primitive: 1.3.0\n      function.prototype.name: 1.1.8\n      get-intrinsic: 1.3.0\n      get-proto: 1.0.1\n      get-symbol-description: 1.1.0\n      globalthis: 1.0.4\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n      has-proto: 1.2.0\n      has-symbols: 1.1.0\n      hasown: 2.0.2\n      internal-slot: 1.1.0\n      is-array-buffer: 3.0.5\n      is-callable: 1.2.7\n      is-data-view: 1.0.2\n      is-negative-zero: 2.0.3\n      is-regex: 1.2.1\n      is-set: 2.0.3\n      is-shared-array-buffer: 1.0.4\n      is-string: 1.1.1\n      is-typed-array: 1.1.15\n      is-weakref: 1.1.1\n      math-intrinsics: 1.1.0\n      object-inspect: 1.13.4\n      object-keys: 1.1.1\n      object.assign: 4.1.7\n      own-keys: 1.0.1\n      regexp.prototype.flags: 1.5.4\n      safe-array-concat: 1.1.3\n      safe-push-apply: 1.0.0\n      safe-regex-test: 1.1.0\n      set-proto: 1.0.0\n      stop-iteration-iterator: 1.1.0\n      string.prototype.trim: 1.2.10\n      string.prototype.trimend: 1.0.9\n      string.prototype.trimstart: 1.0.8\n      typed-array-buffer: 1.0.3\n      typed-array-byte-length: 1.0.3\n      typed-array-byte-offset: 1.0.4\n      typed-array-length: 1.0.7\n      unbox-primitive: 1.1.0\n      which-typed-array: 1.1.19\n\n  es-define-property@1.0.1: {}\n\n  es-errors@1.3.0: {}\n\n  es-iterator-helpers@1.2.1:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      es-set-tostringtag: 2.1.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.3.0\n      globalthis: 1.0.4\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n      has-proto: 1.2.0\n      has-symbols: 1.1.0\n      internal-slot: 1.1.0\n      iterator.prototype: 1.1.5\n      safe-array-concat: 1.1.3\n\n  es-object-atoms@1.1.1:\n    dependencies:\n      es-errors: 1.3.0\n\n  es-set-tostringtag@2.1.0:\n    dependencies:\n      es-errors: 1.3.0\n      get-intrinsic: 1.3.0\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  es-shim-unscopables@1.1.0:\n    dependencies:\n      hasown: 2.0.2\n\n  es-to-primitive@1.3.0:\n    dependencies:\n      is-callable: 1.2.7\n      is-date-object: 1.1.0\n      is-symbol: 1.1.1\n\n  escape-string-regexp@4.0.0: {}\n\n  eslint-config-next@15.3.3(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3):\n    dependencies:\n      '@next/eslint-plugin-next': 15.3.3\n      '@rushstack/eslint-patch': 1.11.0\n      '@typescript-eslint/eslint-plugin': 8.34.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      '@typescript-eslint/parser': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      eslint: 9.29.0(jiti@2.4.2)\n      eslint-import-resolver-node: 0.3.9\n      eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.31.0)(eslint@9.29.0(jiti@2.4.2))\n      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2))\n      eslint-plugin-jsx-a11y: 6.10.2(eslint@9.29.0(jiti@2.4.2))\n      eslint-plugin-react: 7.37.5(eslint@9.29.0(jiti@2.4.2))\n      eslint-plugin-react-hooks: 5.2.0(eslint@9.29.0(jiti@2.4.2))\n    optionalDependencies:\n      typescript: 5.8.3\n    transitivePeerDependencies:\n      - eslint-import-resolver-webpack\n      - eslint-plugin-import-x\n      - supports-color\n\n  eslint-import-resolver-node@0.3.9:\n    dependencies:\n      debug: 3.2.7\n      is-core-module: 2.16.1\n      resolve: 1.22.10\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-import-resolver-typescript@3.10.1(eslint-plugin-import@2.31.0)(eslint@9.29.0(jiti@2.4.2)):\n    dependencies:\n      '@nolyfill/is-core-module': 1.0.39\n      debug: 4.4.1\n      eslint: 9.29.0(jiti@2.4.2)\n      get-tsconfig: 4.10.1\n      is-bun-module: 2.0.0\n      stable-hash: 0.0.5\n      tinyglobby: 0.2.14\n      unrs-resolver: 1.9.0\n    optionalDependencies:\n      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2))\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2)):\n    dependencies:\n      debug: 3.2.7\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n      eslint: 9.29.0(jiti@2.4.2)\n      eslint-import-resolver-node: 0.3.9\n      eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.31.0)(eslint@9.29.0(jiti@2.4.2))\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2)):\n    dependencies:\n      '@rtsao/scc': 1.1.0\n      array-includes: 3.1.9\n      array.prototype.findlastindex: 1.2.6\n      array.prototype.flat: 1.3.3\n      array.prototype.flatmap: 1.3.3\n      debug: 3.2.7\n      doctrine: 2.1.0\n      eslint: 9.29.0(jiti@2.4.2)\n      eslint-import-resolver-node: 0.3.9\n      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@9.29.0(jiti@2.4.2))\n      hasown: 2.0.2\n      is-core-module: 2.16.1\n      is-glob: 4.0.3\n      minimatch: 3.1.2\n      object.fromentries: 2.0.8\n      object.groupby: 1.0.3\n      object.values: 1.2.1\n      semver: 6.3.1\n      string.prototype.trimend: 1.0.9\n      tsconfig-paths: 3.15.0\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)\n    transitivePeerDependencies:\n      - eslint-import-resolver-typescript\n      - eslint-import-resolver-webpack\n      - supports-color\n\n  eslint-plugin-jsx-a11y@6.10.2(eslint@9.29.0(jiti@2.4.2)):\n    dependencies:\n      aria-query: 5.3.2\n      array-includes: 3.1.9\n      array.prototype.flatmap: 1.3.3\n      ast-types-flow: 0.0.8\n      axe-core: 4.10.3\n      axobject-query: 4.1.0\n      damerau-levenshtein: 1.0.8\n      emoji-regex: 9.2.2\n      eslint: 9.29.0(jiti@2.4.2)\n      hasown: 2.0.2\n      jsx-ast-utils: 3.3.5\n      language-tags: 1.0.9\n      minimatch: 3.1.2\n      object.fromentries: 2.0.8\n      safe-regex-test: 1.1.0\n      string.prototype.includes: 2.0.1\n\n  eslint-plugin-react-hooks@5.2.0(eslint@9.29.0(jiti@2.4.2)):\n    dependencies:\n      eslint: 9.29.0(jiti@2.4.2)\n\n  eslint-plugin-react@7.37.5(eslint@9.29.0(jiti@2.4.2)):\n    dependencies:\n      array-includes: 3.1.9\n      array.prototype.findlast: 1.2.5\n      array.prototype.flatmap: 1.3.3\n      array.prototype.tosorted: 1.1.4\n      doctrine: 2.1.0\n      es-iterator-helpers: 1.2.1\n      eslint: 9.29.0(jiti@2.4.2)\n      estraverse: 5.3.0\n      hasown: 2.0.2\n      jsx-ast-utils: 3.3.5\n      minimatch: 3.1.2\n      object.entries: 1.1.9\n      object.fromentries: 2.0.8\n      object.values: 1.2.1\n      prop-types: 15.8.1\n      resolve: 2.0.0-next.5\n      semver: 6.3.1\n      string.prototype.matchall: 4.0.12\n      string.prototype.repeat: 1.0.0\n\n  eslint-scope@8.4.0:\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 5.3.0\n\n  eslint-visitor-keys@3.4.3: {}\n\n  eslint-visitor-keys@4.2.1: {}\n\n  eslint@9.29.0(jiti@2.4.2):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.7.0(eslint@9.29.0(jiti@2.4.2))\n      '@eslint-community/regexpp': 4.12.1\n      '@eslint/config-array': 0.20.1\n      '@eslint/config-helpers': 0.2.3\n      '@eslint/core': 0.14.0\n      '@eslint/eslintrc': 3.3.1\n      '@eslint/js': 9.29.0\n      '@eslint/plugin-kit': 0.3.2\n      '@humanfs/node': 0.16.6\n      '@humanwhocodes/module-importer': 1.0.1\n      '@humanwhocodes/retry': 0.4.3\n      '@types/estree': 1.0.8\n      '@types/json-schema': 7.0.15\n      ajv: 6.12.6\n      chalk: 4.1.2\n      cross-spawn: 7.0.6\n      debug: 4.4.1\n      escape-string-regexp: 4.0.0\n      eslint-scope: 8.4.0\n      eslint-visitor-keys: 4.2.1\n      espree: 10.4.0\n      esquery: 1.6.0\n      esutils: 2.0.3\n      fast-deep-equal: 3.1.3\n      file-entry-cache: 8.0.0\n      find-up: 5.0.0\n      glob-parent: 6.0.2\n      ignore: 5.3.2\n      imurmurhash: 0.1.4\n      is-glob: 4.0.3\n      json-stable-stringify-without-jsonify: 1.0.1\n      lodash.merge: 4.6.2\n      minimatch: 3.1.2\n      natural-compare: 1.4.0\n      optionator: 0.9.4\n    optionalDependencies:\n      jiti: 2.4.2\n    transitivePeerDependencies:\n      - supports-color\n\n  espree@10.4.0:\n    dependencies:\n      acorn: 8.15.0\n      acorn-jsx: 5.3.2(acorn@8.15.0)\n      eslint-visitor-keys: 4.2.1\n\n  esquery@1.6.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  esrecurse@4.3.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  estraverse@5.3.0: {}\n\n  esutils@2.0.3: {}\n\n  fast-deep-equal@3.1.3: {}\n\n  fast-glob@3.3.1:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fast-glob@3.3.3:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fast-json-stable-stringify@2.1.0: {}\n\n  fast-levenshtein@2.0.6: {}\n\n  fastq@1.19.1:\n    dependencies:\n      reusify: 1.1.0\n\n  fdir@6.4.6(picomatch@4.0.2):\n    optionalDependencies:\n      picomatch: 4.0.2\n\n  file-entry-cache@8.0.0:\n    dependencies:\n      flat-cache: 4.0.1\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  find-up@5.0.0:\n    dependencies:\n      locate-path: 6.0.0\n      path-exists: 4.0.0\n\n  flat-cache@4.0.1:\n    dependencies:\n      flatted: 3.3.3\n      keyv: 4.5.4\n\n  flatted@3.3.3: {}\n\n  for-each@0.3.5:\n    dependencies:\n      is-callable: 1.2.7\n\n  function-bind@1.1.2: {}\n\n  function.prototype.name@1.1.8:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      functions-have-names: 1.2.3\n      hasown: 2.0.2\n      is-callable: 1.2.7\n\n  functions-have-names@1.2.3: {}\n\n  get-intrinsic@1.3.0:\n    dependencies:\n      call-bind-apply-helpers: 1.0.2\n      es-define-property: 1.0.1\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n      function-bind: 1.1.2\n      get-proto: 1.0.1\n      gopd: 1.2.0\n      has-symbols: 1.1.0\n      hasown: 2.0.2\n      math-intrinsics: 1.1.0\n\n  get-nonce@1.0.1: {}\n\n  get-proto@1.0.1:\n    dependencies:\n      dunder-proto: 1.0.1\n      es-object-atoms: 1.1.1\n\n  get-symbol-description@1.1.0:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      get-intrinsic: 1.3.0\n\n  get-tsconfig@4.10.1:\n    dependencies:\n      resolve-pkg-maps: 1.0.0\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  globals@14.0.0: {}\n\n  globalthis@1.0.4:\n    dependencies:\n      define-properties: 1.2.1\n      gopd: 1.2.0\n\n  gopd@1.2.0: {}\n\n  graceful-fs@4.2.11: {}\n\n  graphemer@1.4.0: {}\n\n  has-bigints@1.1.0: {}\n\n  has-flag@4.0.0: {}\n\n  has-property-descriptors@1.0.2:\n    dependencies:\n      es-define-property: 1.0.1\n\n  has-proto@1.2.0:\n    dependencies:\n      dunder-proto: 1.0.1\n\n  has-symbols@1.1.0: {}\n\n  has-tostringtag@1.0.2:\n    dependencies:\n      has-symbols: 1.1.0\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  ignore@5.3.2: {}\n\n  ignore@7.0.5: {}\n\n  import-fresh@3.3.1:\n    dependencies:\n      parent-module: 1.0.1\n      resolve-from: 4.0.0\n\n  imurmurhash@0.1.4: {}\n\n  internal-slot@1.1.0:\n    dependencies:\n      es-errors: 1.3.0\n      hasown: 2.0.2\n      side-channel: 1.1.0\n\n  is-array-buffer@3.0.5:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      get-intrinsic: 1.3.0\n\n  is-arrayish@0.3.2:\n    optional: true\n\n  is-async-function@2.1.1:\n    dependencies:\n      async-function: 1.0.0\n      call-bound: 1.0.4\n      get-proto: 1.0.1\n      has-tostringtag: 1.0.2\n      safe-regex-test: 1.1.0\n\n  is-bigint@1.1.0:\n    dependencies:\n      has-bigints: 1.1.0\n\n  is-boolean-object@1.2.2:\n    dependencies:\n      call-bound: 1.0.4\n      has-tostringtag: 1.0.2\n\n  is-bun-module@2.0.0:\n    dependencies:\n      semver: 7.7.2\n\n  is-callable@1.2.7: {}\n\n  is-core-module@2.16.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-data-view@1.0.2:\n    dependencies:\n      call-bound: 1.0.4\n      get-intrinsic: 1.3.0\n      is-typed-array: 1.1.15\n\n  is-date-object@1.1.0:\n    dependencies:\n      call-bound: 1.0.4\n      has-tostringtag: 1.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-finalizationregistry@1.1.1:\n    dependencies:\n      call-bound: 1.0.4\n\n  is-generator-function@1.1.0:\n    dependencies:\n      call-bound: 1.0.4\n      get-proto: 1.0.1\n      has-tostringtag: 1.0.2\n      safe-regex-test: 1.1.0\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-map@2.0.3: {}\n\n  is-negative-zero@2.0.3: {}\n\n  is-number-object@1.1.1:\n    dependencies:\n      call-bound: 1.0.4\n      has-tostringtag: 1.0.2\n\n  is-number@7.0.0: {}\n\n  is-regex@1.2.1:\n    dependencies:\n      call-bound: 1.0.4\n      gopd: 1.2.0\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  is-set@2.0.3: {}\n\n  is-shared-array-buffer@1.0.4:\n    dependencies:\n      call-bound: 1.0.4\n\n  is-string@1.1.1:\n    dependencies:\n      call-bound: 1.0.4\n      has-tostringtag: 1.0.2\n\n  is-symbol@1.1.1:\n    dependencies:\n      call-bound: 1.0.4\n      has-symbols: 1.1.0\n      safe-regex-test: 1.1.0\n\n  is-typed-array@1.1.15:\n    dependencies:\n      which-typed-array: 1.1.19\n\n  is-weakmap@2.0.2: {}\n\n  is-weakref@1.1.1:\n    dependencies:\n      call-bound: 1.0.4\n\n  is-weakset@2.0.4:\n    dependencies:\n      call-bound: 1.0.4\n      get-intrinsic: 1.3.0\n\n  isarray@2.0.5: {}\n\n  isexe@2.0.0: {}\n\n  iterator.prototype@1.1.5:\n    dependencies:\n      define-data-property: 1.1.4\n      es-object-atoms: 1.1.1\n      get-intrinsic: 1.3.0\n      get-proto: 1.0.1\n      has-symbols: 1.1.0\n      set-function-name: 2.0.2\n\n  jiti@2.4.2: {}\n\n  js-tokens@4.0.0: {}\n\n  js-yaml@4.1.0:\n    dependencies:\n      argparse: 2.0.1\n\n  json-buffer@3.0.1: {}\n\n  json-schema-traverse@0.4.1: {}\n\n  json-stable-stringify-without-jsonify@1.0.1: {}\n\n  json5@1.0.2:\n    dependencies:\n      minimist: 1.2.8\n\n  jsx-ast-utils@3.3.5:\n    dependencies:\n      array-includes: 3.1.9\n      array.prototype.flat: 1.3.3\n      object.assign: 4.1.7\n      object.values: 1.2.1\n\n  keyv@4.5.4:\n    dependencies:\n      json-buffer: 3.0.1\n\n  language-subtag-registry@0.3.23: {}\n\n  language-tags@1.0.9:\n    dependencies:\n      language-subtag-registry: 0.3.23\n\n  levn@0.4.1:\n    dependencies:\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n\n  lightningcss-darwin-arm64@1.30.1:\n    optional: true\n\n  lightningcss-darwin-x64@1.30.1:\n    optional: true\n\n  lightningcss-freebsd-x64@1.30.1:\n    optional: true\n\n  lightningcss-linux-arm-gnueabihf@1.30.1:\n    optional: true\n\n  lightningcss-linux-arm64-gnu@1.30.1:\n    optional: true\n\n  lightningcss-linux-arm64-musl@1.30.1:\n    optional: true\n\n  lightningcss-linux-x64-gnu@1.30.1:\n    optional: true\n\n  lightningcss-linux-x64-musl@1.30.1:\n    optional: true\n\n  lightningcss-win32-arm64-msvc@1.30.1:\n    optional: true\n\n  lightningcss-win32-x64-msvc@1.30.1:\n    optional: true\n\n  lightningcss@1.30.1:\n    dependencies:\n      detect-libc: 2.0.4\n    optionalDependencies:\n      lightningcss-darwin-arm64: 1.30.1\n      lightningcss-darwin-x64: 1.30.1\n      lightningcss-freebsd-x64: 1.30.1\n      lightningcss-linux-arm-gnueabihf: 1.30.1\n      lightningcss-linux-arm64-gnu: 1.30.1\n      lightningcss-linux-arm64-musl: 1.30.1\n      lightningcss-linux-x64-gnu: 1.30.1\n      lightningcss-linux-x64-musl: 1.30.1\n      lightningcss-win32-arm64-msvc: 1.30.1\n      lightningcss-win32-x64-msvc: 1.30.1\n\n  locate-path@6.0.0:\n    dependencies:\n      p-locate: 5.0.0\n\n  lodash.merge@4.6.2: {}\n\n  loose-envify@1.4.0:\n    dependencies:\n      js-tokens: 4.0.0\n\n  lucide-react@0.515.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n\n  magic-string@0.30.17:\n    dependencies:\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  math-intrinsics@1.1.0: {}\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  minimatch@3.1.2:\n    dependencies:\n      brace-expansion: 1.1.12\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.2\n\n  minimist@1.2.8: {}\n\n  minipass@7.1.2: {}\n\n  minizlib@3.0.2:\n    dependencies:\n      minipass: 7.1.2\n\n  mkdirp@3.0.1: {}\n\n  ms@2.1.3: {}\n\n  nanoid@3.3.11: {}\n\n  napi-postinstall@0.2.4: {}\n\n  natural-compare@1.4.0: {}\n\n  next-themes@0.4.6(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  next@15.3.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      '@next/env': 15.3.3\n      '@swc/counter': 0.1.3\n      '@swc/helpers': 0.5.15\n      busboy: 1.6.0\n      caniuse-lite: 1.0.30001723\n      postcss: 8.4.31\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      styled-jsx: 5.1.6(react@19.1.0)\n    optionalDependencies:\n      '@next/swc-darwin-arm64': 15.3.3\n      '@next/swc-darwin-x64': 15.3.3\n      '@next/swc-linux-arm64-gnu': 15.3.3\n      '@next/swc-linux-arm64-musl': 15.3.3\n      '@next/swc-linux-x64-gnu': 15.3.3\n      '@next/swc-linux-x64-musl': 15.3.3\n      '@next/swc-win32-arm64-msvc': 15.3.3\n      '@next/swc-win32-x64-msvc': 15.3.3\n      sharp: 0.34.2\n    transitivePeerDependencies:\n      - '@babel/core'\n      - babel-plugin-macros\n\n  object-assign@4.1.1: {}\n\n  object-inspect@1.13.4: {}\n\n  object-keys@1.1.1: {}\n\n  object.assign@4.1.7:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-object-atoms: 1.1.1\n      has-symbols: 1.1.0\n      object-keys: 1.1.1\n\n  object.entries@1.1.9:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-object-atoms: 1.1.1\n\n  object.fromentries@2.0.8:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-object-atoms: 1.1.1\n\n  object.groupby@1.0.3:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n\n  object.values@1.2.1:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-object-atoms: 1.1.1\n\n  optionator@0.9.4:\n    dependencies:\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.4.1\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n      word-wrap: 1.2.5\n\n  own-keys@1.0.1:\n    dependencies:\n      get-intrinsic: 1.3.0\n      object-keys: 1.1.1\n      safe-push-apply: 1.0.0\n\n  p-limit@3.1.0:\n    dependencies:\n      yocto-queue: 0.1.0\n\n  p-locate@5.0.0:\n    dependencies:\n      p-limit: 3.1.0\n\n  parent-module@1.0.1:\n    dependencies:\n      callsites: 3.1.0\n\n  path-exists@4.0.0: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  picomatch@4.0.2: {}\n\n  possible-typed-array-names@1.1.0: {}\n\n  postcss@8.4.31:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  postcss@8.5.5:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  prelude-ls@1.2.1: {}\n\n  prop-types@15.8.1:\n    dependencies:\n      loose-envify: 1.4.0\n      object-assign: 4.1.1\n      react-is: 16.13.1\n\n  punycode@2.3.1: {}\n\n  queue-microtask@1.2.3: {}\n\n  react-dom@19.1.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      scheduler: 0.26.0\n\n  react-hook-form@7.57.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n\n  react-is@16.13.1: {}\n\n  react-remove-scroll-bar@2.3.8(@types/react@19.1.8)(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-style-singleton: 2.2.3(@types/react@19.1.8)(react@19.1.0)\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  react-remove-scroll@2.7.1(@types/react@19.1.8)(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-remove-scroll-bar: 2.3.8(@types/react@19.1.8)(react@19.1.0)\n      react-style-singleton: 2.2.3(@types/react@19.1.8)(react@19.1.0)\n      tslib: 2.8.1\n      use-callback-ref: 1.3.3(@types/react@19.1.8)(react@19.1.0)\n      use-sidecar: 1.1.3(@types/react@19.1.8)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  react-style-singleton@2.2.3(@types/react@19.1.8)(react@19.1.0):\n    dependencies:\n      get-nonce: 1.0.1\n      react: 19.1.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  react@19.1.0: {}\n\n  reflect.getprototypeof@1.0.10:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n      get-intrinsic: 1.3.0\n      get-proto: 1.0.1\n      which-builtin-type: 1.2.1\n\n  regexp.prototype.flags@1.5.4:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-errors: 1.3.0\n      get-proto: 1.0.1\n      gopd: 1.2.0\n      set-function-name: 2.0.2\n\n  resolve-from@4.0.0: {}\n\n  resolve-pkg-maps@1.0.0: {}\n\n  resolve@1.22.10:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  resolve@2.0.0-next.5:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.1.0: {}\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  safe-array-concat@1.1.3:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      get-intrinsic: 1.3.0\n      has-symbols: 1.1.0\n      isarray: 2.0.5\n\n  safe-push-apply@1.0.0:\n    dependencies:\n      es-errors: 1.3.0\n      isarray: 2.0.5\n\n  safe-regex-test@1.1.0:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      is-regex: 1.2.1\n\n  scheduler@0.26.0: {}\n\n  semver@6.3.1: {}\n\n  semver@7.7.2: {}\n\n  set-function-length@1.2.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.3.0\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n\n  set-function-name@2.0.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      functions-have-names: 1.2.3\n      has-property-descriptors: 1.0.2\n\n  set-proto@1.0.0:\n    dependencies:\n      dunder-proto: 1.0.1\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n\n  sharp@0.34.2:\n    dependencies:\n      color: 4.2.3\n      detect-libc: 2.0.4\n      semver: 7.7.2\n    optionalDependencies:\n      '@img/sharp-darwin-arm64': 0.34.2\n      '@img/sharp-darwin-x64': 0.34.2\n      '@img/sharp-libvips-darwin-arm64': 1.1.0\n      '@img/sharp-libvips-darwin-x64': 1.1.0\n      '@img/sharp-libvips-linux-arm': 1.1.0\n      '@img/sharp-libvips-linux-arm64': 1.1.0\n      '@img/sharp-libvips-linux-ppc64': 1.1.0\n      '@img/sharp-libvips-linux-s390x': 1.1.0\n      '@img/sharp-libvips-linux-x64': 1.1.0\n      '@img/sharp-libvips-linuxmusl-arm64': 1.1.0\n      '@img/sharp-libvips-linuxmusl-x64': 1.1.0\n      '@img/sharp-linux-arm': 0.34.2\n      '@img/sharp-linux-arm64': 0.34.2\n      '@img/sharp-linux-s390x': 0.34.2\n      '@img/sharp-linux-x64': 0.34.2\n      '@img/sharp-linuxmusl-arm64': 0.34.2\n      '@img/sharp-linuxmusl-x64': 0.34.2\n      '@img/sharp-wasm32': 0.34.2\n      '@img/sharp-win32-arm64': 0.34.2\n      '@img/sharp-win32-ia32': 0.34.2\n      '@img/sharp-win32-x64': 0.34.2\n    optional: true\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  side-channel-list@1.0.0:\n    dependencies:\n      es-errors: 1.3.0\n      object-inspect: 1.13.4\n\n  side-channel-map@1.0.1:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      get-intrinsic: 1.3.0\n      object-inspect: 1.13.4\n\n  side-channel-weakmap@1.0.2:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      get-intrinsic: 1.3.0\n      object-inspect: 1.13.4\n      side-channel-map: 1.0.1\n\n  side-channel@1.1.0:\n    dependencies:\n      es-errors: 1.3.0\n      object-inspect: 1.13.4\n      side-channel-list: 1.0.0\n      side-channel-map: 1.0.1\n      side-channel-weakmap: 1.0.2\n\n  simple-swizzle@0.2.2:\n    dependencies:\n      is-arrayish: 0.3.2\n    optional: true\n\n  sonner@2.0.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  source-map-js@1.2.1: {}\n\n  stable-hash@0.0.5: {}\n\n  stop-iteration-iterator@1.1.0:\n    dependencies:\n      es-errors: 1.3.0\n      internal-slot: 1.1.0\n\n  streamsearch@1.1.0: {}\n\n  string.prototype.includes@2.0.1:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n\n  string.prototype.matchall@4.0.12:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.1.1\n      get-intrinsic: 1.3.0\n      gopd: 1.2.0\n      has-symbols: 1.1.0\n      internal-slot: 1.1.0\n      regexp.prototype.flags: 1.5.4\n      set-function-name: 2.0.2\n      side-channel: 1.1.0\n\n  string.prototype.repeat@1.0.0:\n    dependencies:\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n\n  string.prototype.trim@1.2.10:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-data-property: 1.1.4\n      define-properties: 1.2.1\n      es-abstract: 1.24.0\n      es-object-atoms: 1.1.1\n      has-property-descriptors: 1.0.2\n\n  string.prototype.trimend@1.0.9:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      define-properties: 1.2.1\n      es-object-atoms: 1.1.1\n\n  string.prototype.trimstart@1.0.8:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-object-atoms: 1.1.1\n\n  strip-bom@3.0.0: {}\n\n  strip-json-comments@3.1.1: {}\n\n  styled-jsx@5.1.6(react@19.1.0):\n    dependencies:\n      client-only: 0.0.1\n      react: 19.1.0\n\n  supports-color@7.2.0:\n    dependencies:\n      has-flag: 4.0.0\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tailwind-merge@3.3.1: {}\n\n  tailwindcss-animate@1.0.7(tailwindcss@4.1.10):\n    dependencies:\n      tailwindcss: 4.1.10\n\n  tailwindcss@4.1.10: {}\n\n  tapable@2.2.2: {}\n\n  tar@7.4.3:\n    dependencies:\n      '@isaacs/fs-minipass': 4.0.1\n      chownr: 3.0.0\n      minipass: 7.1.2\n      minizlib: 3.0.2\n      mkdirp: 3.0.1\n      yallist: 5.0.0\n\n  tinyglobby@0.2.14:\n    dependencies:\n      fdir: 6.4.6(picomatch@4.0.2)\n      picomatch: 4.0.2\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  ts-api-utils@2.1.0(typescript@5.8.3):\n    dependencies:\n      typescript: 5.8.3\n\n  tsconfig-paths@3.15.0:\n    dependencies:\n      '@types/json5': 0.0.29\n      json5: 1.0.2\n      minimist: 1.2.8\n      strip-bom: 3.0.0\n\n  tslib@2.8.1: {}\n\n  tw-animate-css@1.3.4: {}\n\n  type-check@0.4.0:\n    dependencies:\n      prelude-ls: 1.2.1\n\n  typed-array-buffer@1.0.3:\n    dependencies:\n      call-bound: 1.0.4\n      es-errors: 1.3.0\n      is-typed-array: 1.1.15\n\n  typed-array-byte-length@1.0.3:\n    dependencies:\n      call-bind: 1.0.8\n      for-each: 0.3.5\n      gopd: 1.2.0\n      has-proto: 1.2.0\n      is-typed-array: 1.1.15\n\n  typed-array-byte-offset@1.0.4:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.8\n      for-each: 0.3.5\n      gopd: 1.2.0\n      has-proto: 1.2.0\n      is-typed-array: 1.1.15\n      reflect.getprototypeof: 1.0.10\n\n  typed-array-length@1.0.7:\n    dependencies:\n      call-bind: 1.0.8\n      for-each: 0.3.5\n      gopd: 1.2.0\n      is-typed-array: 1.1.15\n      possible-typed-array-names: 1.1.0\n      reflect.getprototypeof: 1.0.10\n\n  typescript@5.8.3: {}\n\n  unbox-primitive@1.1.0:\n    dependencies:\n      call-bound: 1.0.4\n      has-bigints: 1.1.0\n      has-symbols: 1.1.0\n      which-boxed-primitive: 1.1.1\n\n  undici-types@6.21.0: {}\n\n  unrs-resolver@1.9.0:\n    dependencies:\n      napi-postinstall: 0.2.4\n    optionalDependencies:\n      '@unrs/resolver-binding-android-arm-eabi': 1.9.0\n      '@unrs/resolver-binding-android-arm64': 1.9.0\n      '@unrs/resolver-binding-darwin-arm64': 1.9.0\n      '@unrs/resolver-binding-darwin-x64': 1.9.0\n      '@unrs/resolver-binding-freebsd-x64': 1.9.0\n      '@unrs/resolver-binding-linux-arm-gnueabihf': 1.9.0\n      '@unrs/resolver-binding-linux-arm-musleabihf': 1.9.0\n      '@unrs/resolver-binding-linux-arm64-gnu': 1.9.0\n      '@unrs/resolver-binding-linux-arm64-musl': 1.9.0\n      '@unrs/resolver-binding-linux-ppc64-gnu': 1.9.0\n      '@unrs/resolver-binding-linux-riscv64-gnu': 1.9.0\n      '@unrs/resolver-binding-linux-riscv64-musl': 1.9.0\n      '@unrs/resolver-binding-linux-s390x-gnu': 1.9.0\n      '@unrs/resolver-binding-linux-x64-gnu': 1.9.0\n      '@unrs/resolver-binding-linux-x64-musl': 1.9.0\n      '@unrs/resolver-binding-wasm32-wasi': 1.9.0\n      '@unrs/resolver-binding-win32-arm64-msvc': 1.9.0\n      '@unrs/resolver-binding-win32-ia32-msvc': 1.9.0\n      '@unrs/resolver-binding-win32-x64-msvc': 1.9.0\n\n  uri-js@4.4.1:\n    dependencies:\n      punycode: 2.3.1\n\n  use-callback-ref@1.3.3(@types/react@19.1.8)(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  use-sidecar@1.1.3(@types/react@19.1.8)(react@19.1.0):\n    dependencies:\n      detect-node-es: 1.1.0\n      react: 19.1.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.8\n\n  use-sync-external-store@1.5.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n\n  which-boxed-primitive@1.1.1:\n    dependencies:\n      is-bigint: 1.1.0\n      is-boolean-object: 1.2.2\n      is-number-object: 1.1.1\n      is-string: 1.1.1\n      is-symbol: 1.1.1\n\n  which-builtin-type@1.2.1:\n    dependencies:\n      call-bound: 1.0.4\n      function.prototype.name: 1.1.8\n      has-tostringtag: 1.0.2\n      is-async-function: 2.1.1\n      is-date-object: 1.1.0\n      is-finalizationregistry: 1.1.1\n      is-generator-function: 1.1.0\n      is-regex: 1.2.1\n      is-weakref: 1.1.1\n      isarray: 2.0.5\n      which-boxed-primitive: 1.1.1\n      which-collection: 1.0.2\n      which-typed-array: 1.1.19\n\n  which-collection@1.0.2:\n    dependencies:\n      is-map: 2.0.3\n      is-set: 2.0.3\n      is-weakmap: 2.0.2\n      is-weakset: 2.0.4\n\n  which-typed-array@1.1.19:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.8\n      call-bound: 1.0.4\n      for-each: 0.3.5\n      get-proto: 1.0.1\n      gopd: 1.2.0\n      has-tostringtag: 1.0.2\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  word-wrap@1.2.5: {}\n\n  yallist@5.0.0: {}\n\n  yocto-queue@0.1.0: {}\n\n  zod@3.25.64: {}\n\n  zustand@5.0.5(@types/react@19.1.8)(react@19.1.0)(use-sync-external-store@1.5.0(react@19.1.0)):\n    optionalDependencies:\n      '@types/react': 19.1.8\n      react: 19.1.0\n      use-sync-external-store: 1.5.0(react@19.1.0)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/pnpm-lock.yaml b/frontend/manager/pnpm-lock.yaml
--- a/frontend/manager/pnpm-lock.yaml	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/pnpm-lock.yaml	(date 1750224386778)
@@ -65,6 +65,9 @@
       '@tanstack/table-core':
         specifier: ^8.21.3
         version: 8.21.3
+      '@types/recharts':
+        specifier: ^2.0.1
+        version: 2.0.1(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
       class-variance-authority:
         specifier: ^0.7.1
         version: 0.7.1
@@ -92,6 +95,9 @@
       react-hook-form:
         specifier: ^7.57.0
         version: 7.57.0(react@19.1.0)
+      recharts:
+        specifier: ^2.15.3
+        version: 2.15.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
       sonner:
         specifier: ^2.0.5
         version: 2.0.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
@@ -132,6 +138,12 @@
       eslint-config-next:
         specifier: 15.3.3
         version: 15.3.3(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+      eslint-plugin-unused-imports:
+        specifier: ^4.1.4
+        version: 4.1.4(@typescript-eslint/eslint-plugin@8.34.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))
+      install:
+        specifier: ^0.13.0
+        version: 0.13.0
       tailwindcss:
         specifier: ^4
         version: 4.1.10
@@ -152,6 +164,10 @@
     resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
     engines: {node: '>=6.0.0'}
 
+  '@babel/runtime@7.27.6':
+    resolution: {integrity: sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==}
+    engines: {node: '>=6.9.0'}
+
   '@emnapi/core@1.4.3':
     resolution: {integrity: sha512-4m62DuCE07lw01soJwPiBGC0nAww0Q+RY70VZ+n49yDIO13yyinhbWCeNnaob0lakDtWQzSdtNWzJeOJt2ma+g==}
 
@@ -1053,6 +1069,33 @@
   '@tybys/wasm-util@0.9.0':
     resolution: {integrity: sha512-6+7nlbMVX/PVDCwaIQ8nTOPveOcFLSt8GcXdx8hD0bt39uWxYT88uXzqTd4fTvqta7oeUJqudepapKNt2DYJFw==}
 
+  '@types/d3-array@3.2.1':
+    resolution: {integrity: sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==}
+
+  '@types/d3-color@3.1.3':
+    resolution: {integrity: sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==}
+
+  '@types/d3-ease@3.0.2':
+    resolution: {integrity: sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==}
+
+  '@types/d3-interpolate@3.0.4':
+    resolution: {integrity: sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==}
+
+  '@types/d3-path@3.1.1':
+    resolution: {integrity: sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==}
+
+  '@types/d3-scale@4.0.9':
+    resolution: {integrity: sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==}
+
+  '@types/d3-shape@3.1.7':
+    resolution: {integrity: sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==}
+
+  '@types/d3-time@3.0.4':
+    resolution: {integrity: sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==}
+
+  '@types/d3-timer@3.0.2':
+    resolution: {integrity: sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==}
+
   '@types/estree@1.0.8':
     resolution: {integrity: sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==}
 
@@ -1073,6 +1116,10 @@
   '@types/react@19.1.8':
     resolution: {integrity: sha512-AwAfQ2Wa5bCx9WP8nZL2uMZWod7J7/JSplxbTmBQ5ms6QpqNYm672H0Vu9ZVKVngQ+ii4R/byguVEUZQyeg44g==}
 
+  '@types/recharts@2.0.1':
+    resolution: {integrity: sha512-/cFs7oiafzByUwBSWA1IzE6FW+ppPwQAWsDTadSgVOwzveY9MESpyLHyyHY0SfPPKLW4+4qVNYHPXd0rFiC8vg==}
+    deprecated: This is a stub types definition. recharts provides its own type definitions, so you do not need this installed.
+
   '@typescript-eslint/eslint-plugin@8.34.0':
     resolution: {integrity: sha512-QXwAlHlbcAwNlEEMKQS2RCgJsgXrTJdjXT08xEgbPFa2yYQgVjBymxP5DrfrE7X7iodSzd9qBUHUycdyVJTW1w==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
@@ -1384,6 +1431,50 @@
   csstype@3.1.3:
     resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
 
+  d3-array@3.2.4:
+    resolution: {integrity: sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==}
+    engines: {node: '>=12'}
+
+  d3-color@3.1.0:
+    resolution: {integrity: sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==}
+    engines: {node: '>=12'}
+
+  d3-ease@3.0.1:
+    resolution: {integrity: sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==}
+    engines: {node: '>=12'}
+
+  d3-format@3.1.0:
+    resolution: {integrity: sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==}
+    engines: {node: '>=12'}
+
+  d3-interpolate@3.0.1:
+    resolution: {integrity: sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==}
+    engines: {node: '>=12'}
+
+  d3-path@3.1.0:
+    resolution: {integrity: sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==}
+    engines: {node: '>=12'}
+
+  d3-scale@4.0.2:
+    resolution: {integrity: sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==}
+    engines: {node: '>=12'}
+
+  d3-shape@3.2.0:
+    resolution: {integrity: sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==}
+    engines: {node: '>=12'}
+
+  d3-time-format@4.1.0:
+    resolution: {integrity: sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==}
+    engines: {node: '>=12'}
+
+  d3-time@3.1.0:
+    resolution: {integrity: sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==}
+    engines: {node: '>=12'}
+
+  d3-timer@3.0.1:
+    resolution: {integrity: sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==}
+    engines: {node: '>=12'}
+
   damerau-levenshtein@1.0.8:
     resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}
 
@@ -1419,6 +1510,9 @@
       supports-color:
         optional: true
 
+  decimal.js-light@2.5.1:
+    resolution: {integrity: sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==}
+
   deep-is@0.1.4:
     resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
 
@@ -1441,6 +1535,9 @@
     resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}
     engines: {node: '>=0.10.0'}
 
+  dom-helpers@5.2.1:
+    resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}
+
   dotenv-cli@8.0.0:
     resolution: {integrity: sha512-aLqYbK7xKOiTMIRf1lDPbI+Y+Ip/wo5k3eyp6ePysVaSqbyxjyK3dK35BTxG+rmd7djf5q2UPs4noPNH+cj0Qw==}
     hasBin: true
@@ -1574,6 +1671,15 @@
     peerDependencies:
       eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7
 
+  eslint-plugin-unused-imports@4.1.4:
+    resolution: {integrity: sha512-YptD6IzQjDardkl0POxnnRBhU1OEePMV0nd6siHaRBbd+lyh6NAhFEobiznKU7kTsSsDeSD62Pe7kAM1b7dAZQ==}
+    peerDependencies:
+      '@typescript-eslint/eslint-plugin': ^8.0.0-0 || ^7.0.0 || ^6.0.0 || ^5.0.0
+      eslint: ^9.0.0 || ^8.0.0
+    peerDependenciesMeta:
+      '@typescript-eslint/eslint-plugin':
+        optional: true
+
   eslint-scope@8.4.0:
     resolution: {integrity: sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
@@ -1616,9 +1722,16 @@
     resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
     engines: {node: '>=0.10.0'}
 
+  eventemitter3@4.0.7:
+    resolution: {integrity: sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==}
+
   fast-deep-equal@3.1.3:
     resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
 
+  fast-equals@5.2.2:
+    resolution: {integrity: sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==}
+    engines: {node: '>=6.0.0'}
+
   fast-glob@3.3.1:
     resolution: {integrity: sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==}
     engines: {node: '>=8.6.0'}
@@ -1765,10 +1878,18 @@
     resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
     engines: {node: '>=0.8.19'}
 
+  install@0.13.0:
+    resolution: {integrity: sha512-zDml/jzr2PKU9I8J/xyZBQn8rPCAY//UOYNmR01XwNwyfhEWObo2SWfSl1+0tm1u6PhxLwDnfsT/6jB7OUxqFA==}
+    engines: {node: '>= 0.10'}
+
   internal-slot@1.1.0:
     resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
     engines: {node: '>= 0.4'}
 
+  internmap@2.0.3:
+    resolution: {integrity: sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==}
+    engines: {node: '>=12'}
+
   is-array-buffer@3.0.5:
     resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
     engines: {node: '>= 0.4'}
@@ -1998,6 +2119,9 @@
   lodash.merge@4.6.2:
     resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
 
+  lodash@4.17.21:
+    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
+
   loose-envify@1.4.0:
     resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
     hasBin: true
@@ -2202,6 +2326,9 @@
   react-is@16.13.1:
     resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
 
+  react-is@18.3.1:
+    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}
+
   react-remove-scroll-bar@2.3.8:
     resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}
     engines: {node: '>=10'}
@@ -2222,6 +2349,12 @@
       '@types/react':
         optional: true
 
+  react-smooth@4.0.4:
+    resolution: {integrity: sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==}
+    peerDependencies:
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
+      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
+
   react-style-singleton@2.2.3:
     resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}
     engines: {node: '>=10'}
@@ -2232,10 +2365,26 @@
       '@types/react':
         optional: true
 
+  react-transition-group@4.4.5:
+    resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}
+    peerDependencies:
+      react: '>=16.6.0'
+      react-dom: '>=16.6.0'
+
   react@19.1.0:
     resolution: {integrity: sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==}
     engines: {node: '>=0.10.0'}
 
+  recharts-scale@0.4.5:
+    resolution: {integrity: sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==}
+
+  recharts@2.15.3:
+    resolution: {integrity: sha512-EdOPzTwcFSuqtvkDoaM5ws/Km1+WTAO2eizL7rqiG0V2UVhTnz0m7J2i0CjVPUCdEkZImaWvXLbZDS2H5t6GFQ==}
+    engines: {node: '>=14'}
+    peerDependencies:
+      react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
+      react-dom: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
+
   reflect.getprototypeof@1.0.10:
     resolution: {integrity: sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==}
     engines: {node: '>= 0.4'}
@@ -2426,6 +2575,9 @@
     resolution: {integrity: sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==}
     engines: {node: '>=18'}
 
+  tiny-invariant@1.3.3:
+    resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}
+
   tinyglobby@0.2.14:
     resolution: {integrity: sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==}
     engines: {node: '>=12.0.0'}
@@ -2512,6 +2664,9 @@
     peerDependencies:
       react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
 
+  victory-vendor@36.9.2:
+    resolution: {integrity: sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==}
+
   which-boxed-primitive@1.1.1:
     resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
     engines: {node: '>= 0.4'}
@@ -2575,6 +2730,8 @@
       '@jridgewell/gen-mapping': 0.3.8
       '@jridgewell/trace-mapping': 0.3.25
 
+  '@babel/runtime@7.27.6': {}
+
   '@emnapi/core@1.4.3':
     dependencies:
       '@emnapi/wasi-threads': 1.0.2
@@ -3426,6 +3583,30 @@
       tslib: 2.8.1
     optional: true
 
+  '@types/d3-array@3.2.1': {}
+
+  '@types/d3-color@3.1.3': {}
+
+  '@types/d3-ease@3.0.2': {}
+
+  '@types/d3-interpolate@3.0.4':
+    dependencies:
+      '@types/d3-color': 3.1.3
+
+  '@types/d3-path@3.1.1': {}
+
+  '@types/d3-scale@4.0.9':
+    dependencies:
+      '@types/d3-time': 3.0.4
+
+  '@types/d3-shape@3.1.7':
+    dependencies:
+      '@types/d3-path': 3.1.1
+
+  '@types/d3-time@3.0.4': {}
+
+  '@types/d3-timer@3.0.2': {}
+
   '@types/estree@1.0.8': {}
 
   '@types/json-schema@7.0.15': {}
@@ -3444,6 +3625,13 @@
     dependencies:
       csstype: 3.1.3
 
+  '@types/recharts@2.0.1(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':
+    dependencies:
+      recharts: 2.15.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+    transitivePeerDependencies:
+      - react
+      - react-dom
+
   '@typescript-eslint/eslint-plugin@8.34.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)':
     dependencies:
       '@eslint-community/regexpp': 4.12.1
@@ -3782,6 +3970,44 @@
 
   csstype@3.1.3: {}
 
+  d3-array@3.2.4:
+    dependencies:
+      internmap: 2.0.3
+
+  d3-color@3.1.0: {}
+
+  d3-ease@3.0.1: {}
+
+  d3-format@3.1.0: {}
+
+  d3-interpolate@3.0.1:
+    dependencies:
+      d3-color: 3.1.0
+
+  d3-path@3.1.0: {}
+
+  d3-scale@4.0.2:
+    dependencies:
+      d3-array: 3.2.4
+      d3-format: 3.1.0
+      d3-interpolate: 3.0.1
+      d3-time: 3.1.0
+      d3-time-format: 4.1.0
+
+  d3-shape@3.2.0:
+    dependencies:
+      d3-path: 3.1.0
+
+  d3-time-format@4.1.0:
+    dependencies:
+      d3-time: 3.1.0
+
+  d3-time@3.1.0:
+    dependencies:
+      d3-array: 3.2.4
+
+  d3-timer@3.0.1: {}
+
   damerau-levenshtein@1.0.8: {}
 
   data-view-buffer@1.0.2:
@@ -3812,6 +4038,8 @@
     dependencies:
       ms: 2.1.3
 
+  decimal.js-light@2.5.1: {}
+
   deep-is@0.1.4: {}
 
   define-data-property@1.1.4:
@@ -3834,6 +4062,11 @@
     dependencies:
       esutils: 2.0.3
 
+  dom-helpers@5.2.1:
+    dependencies:
+      '@babel/runtime': 7.27.6
+      csstype: 3.1.3
+
   dotenv-cli@8.0.0:
     dependencies:
       cross-spawn: 7.0.6
@@ -4089,6 +4322,12 @@
       string.prototype.matchall: 4.0.12
       string.prototype.repeat: 1.0.0
 
+  eslint-plugin-unused-imports@4.1.4(@typescript-eslint/eslint-plugin@8.34.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2)):
+    dependencies:
+      eslint: 9.29.0(jiti@2.4.2)
+    optionalDependencies:
+      '@typescript-eslint/eslint-plugin': 8.34.0(@typescript-eslint/parser@8.34.0(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3))(eslint@9.29.0(jiti@2.4.2))(typescript@5.8.3)
+
   eslint-scope@8.4.0:
     dependencies:
       esrecurse: 4.3.0
@@ -4158,8 +4397,12 @@
 
   esutils@2.0.3: {}
 
+  eventemitter3@4.0.7: {}
+
   fast-deep-equal@3.1.3: {}
 
+  fast-equals@5.2.2: {}
+
   fast-glob@3.3.1:
     dependencies:
       '@nodelib/fs.stat': 2.0.5
@@ -4309,12 +4552,16 @@
 
   imurmurhash@0.1.4: {}
 
+  install@0.13.0: {}
+
   internal-slot@1.1.0:
     dependencies:
       es-errors: 1.3.0
       hasown: 2.0.2
       side-channel: 1.1.0
 
+  internmap@2.0.3: {}
+
   is-array-buffer@3.0.5:
     dependencies:
       call-bind: 1.0.8
@@ -4533,6 +4780,8 @@
 
   lodash.merge@4.6.2: {}
 
+  lodash@4.17.21: {}
+
   loose-envify@1.4.0:
     dependencies:
       js-tokens: 4.0.0
@@ -4728,6 +4977,8 @@
 
   react-is@16.13.1: {}
 
+  react-is@18.3.1: {}
+
   react-remove-scroll-bar@2.3.8(@types/react@19.1.8)(react@19.1.0):
     dependencies:
       react: 19.1.0
@@ -4747,6 +4998,14 @@
     optionalDependencies:
       '@types/react': 19.1.8
 
+  react-smooth@4.0.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      fast-equals: 5.2.2
+      prop-types: 15.8.1
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+      react-transition-group: 4.4.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+
   react-style-singleton@2.2.3(@types/react@19.1.8)(react@19.1.0):
     dependencies:
       get-nonce: 1.0.1
@@ -4755,8 +5014,34 @@
     optionalDependencies:
       '@types/react': 19.1.8
 
+  react-transition-group@4.4.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      '@babel/runtime': 7.27.6
+      dom-helpers: 5.2.1
+      loose-envify: 1.4.0
+      prop-types: 15.8.1
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+
   react@19.1.0: {}
 
+  recharts-scale@0.4.5:
+    dependencies:
+      decimal.js-light: 2.5.1
+
+  recharts@2.15.3(react-dom@19.1.0(react@19.1.0))(react@19.1.0):
+    dependencies:
+      clsx: 2.1.1
+      eventemitter3: 4.0.7
+      lodash: 4.17.21
+      react: 19.1.0
+      react-dom: 19.1.0(react@19.1.0)
+      react-is: 18.3.1
+      react-smooth: 4.0.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0)
+      recharts-scale: 0.4.5
+      tiny-invariant: 1.3.3
+      victory-vendor: 36.9.2
+
   reflect.getprototypeof@1.0.10:
     dependencies:
       call-bind: 1.0.8
@@ -5014,6 +5299,8 @@
       mkdirp: 3.0.1
       yallist: 5.0.0
 
+  tiny-invariant@1.3.3: {}
+
   tinyglobby@0.2.14:
     dependencies:
       fdir: 6.4.6(picomatch@4.0.2)
@@ -5133,6 +5420,23 @@
     dependencies:
       react: 19.1.0
 
+  victory-vendor@36.9.2:
+    dependencies:
+      '@types/d3-array': 3.2.1
+      '@types/d3-ease': 3.0.2
+      '@types/d3-interpolate': 3.0.4
+      '@types/d3-scale': 4.0.9
+      '@types/d3-shape': 3.1.7
+      '@types/d3-time': 3.0.4
+      '@types/d3-timer': 3.0.2
+      d3-array: 3.2.4
+      d3-ease: 3.0.1
+      d3-interpolate: 3.0.1
+      d3-scale: 4.0.2
+      d3-shape: 3.2.0
+      d3-time: 3.1.0
+      d3-timer: 3.0.1
+
   which-boxed-primitive@1.1.1:
     dependencies:
       is-bigint: 1.1.0
Index: frontend/manager/src/lib/services/store-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/store-service.ts b/frontend/manager/src/lib/services/store-service.ts
new file mode 100644
--- /dev/null	(date 1750228023427)
+++ b/frontend/manager/src/lib/services/store-service.ts	(date 1750228023427)
@@ -0,0 +1,107 @@
+import { apiClient } from '../api-client';
+import { 
+  Store, 
+  CreateStoreDto,
+  UpdateStoreDto,
+  BackendStoreResponse, 
+  BackendPaginatedResponse,
+  transformStoreResponse 
+} from '@/types/api';
+
+class StoreService {
+  /**
+   * Lấy thông tin cửa hàng mặc định
+   */
+  async getDefaultStore(): Promise<Store> {
+    try {
+      const response = await apiClient.get<BackendStoreResponse>('/stores/default');
+      return transformStoreResponse(response);
+    } catch (error) {
+      console.error('Lỗi lấy thông tin cửa hàng mặc định:', error);
+      throw error;
+    }
+  }
+
+  /**
+   * Lấy thông tin cửa hàng theo ID
+   */
+  async getStoreById(id: number): Promise<Store> {
+    try {
+      const response = await apiClient.get<BackendStoreResponse>(`/stores/${id}`);
+      return transformStoreResponse(response);
+    } catch (error) {
+      console.error('Lỗi lấy thông tin cửa hàng:', error);
+      throw error;
+    }
+  }
+
+  /**
+   * Lấy danh sách tất cả cửa hàng với pagination
+   */
+  async getAllStores(page = 1, limit = 10): Promise<{
+    stores: Store[];
+    pagination: {
+      page: number;
+      limit: number;
+      total: number;
+      totalPages: number;
+      hasNext: boolean;
+      hasPrev: boolean;
+    };
+  }> {
+    try {
+      const response = await apiClient.get<BackendPaginatedResponse<BackendStoreResponse>>(
+        '/stores', 
+        { page, limit }
+      );
+      
+      return {
+        stores: response.data.map(transformStoreResponse),
+        pagination: response.pagination,
+      };
+    } catch (error) {
+      console.error('Lỗi lấy danh sách cửa hàng:', error);
+      throw error;
+    }
+  }
+
+  /**
+   * Tạo cửa hàng mới
+   */
+  async createStore(data: CreateStoreDto): Promise<Store> {
+    try {
+      const response = await apiClient.post<BackendStoreResponse>('/stores', data);
+      return transformStoreResponse(response);
+    } catch (error) {
+      console.error('Lỗi tạo cửa hàng:', error);
+      throw error;
+    }
+  }
+
+  /**
+   * Cập nhật thông tin cửa hàng
+   */
+  async updateStore(id: number, data: UpdateStoreDto): Promise<Store> {
+    try {
+      const response = await apiClient.patch<BackendStoreResponse>(`/stores/${id}`, data);
+      return transformStoreResponse(response);
+    } catch (error) {
+      console.error('Lỗi cập nhật cửa hàng:', error);
+      throw error;
+    }
+  }
+
+  /**
+   * Xóa cửa hàng
+   */
+  async deleteStore(id: number): Promise<void> {
+    try {
+      await apiClient.delete(`/stores/${id}`);
+    } catch (error) {
+      console.error('Lỗi xóa cửa hàng:', error);
+      throw error;
+    }
+  }
+}
+
+export const storeService = new StoreService(); 
\ No newline at end of file
Index: frontend/manager/src/lib/services/product-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/product-service.ts b/frontend/manager/src/lib/services/product-service.ts
new file mode 100644
--- /dev/null	(date 1750158974536)
+++ b/frontend/manager/src/lib/services/product-service.ts	(date 1750158974536)
@@ -0,0 +1,196 @@
+import { apiClient } from "@/lib/api-client";
+import { 
+  Product, 
+  ProductPrice,
+  BackendProductResponse,
+  BackendProductPriceResponse,
+  BackendPaginatedResponse,
+  BulkDeleteResponse,
+  transformProductResponse,
+  transformProductPriceResponse,
+  PaginatedResponse 
+} from "@/types/api";
+import { 
+  transformCreateProductFormData, 
+  transformUpdateProductFormData,
+  CreateProductFormData,
+  UpdateProductFormData,
+  CreateProductPriceFormData,
+  UpdateProductPriceFormData,
+  BulkDeleteProductFormData 
+} from "@/lib/validations/product";
+
+/**
+ * Product Service
+ * Xử lý tất cả API calls liên quan đến products
+ */
+export class ProductService {
+  private readonly endpoint = "/products";
+
+  /**
+   * Lấy danh sách products với pagination
+   */
+  async getAll(params?: { 
+    page?: number; 
+    limit?: number;
+    search?: string;
+    category_id?: number;
+    is_signature?: boolean;
+  }): Promise<PaginatedResponse<Product>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendProductResponse>>(
+      this.endpoint, 
+      params
+    );
+    
+    // Transform backend response sang frontend format
+    return {
+      data: backendResponse.data.map(transformProductResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
+  /**
+   * Lấy product theo ID
+   */
+  async getById(id: number): Promise<Product> {
+    const backendResponse = await apiClient.get<BackendProductResponse>(`${this.endpoint}/${id}`);
+    return transformProductResponse(backendResponse);
+  }
+
+  /**
+   * Lấy products theo category ID
+   */
+  async getByCategory(categoryId: number, params?: { 
+    page?: number; 
+    limit?: number;
+    search?: string;
+  }): Promise<PaginatedResponse<Product>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendProductResponse>>(
+      `${this.endpoint}/category/${categoryId}`, 
+      params
+    );
+    
+    // Transform backend response sang frontend format
+    return {
+      data: backendResponse.data.map(transformProductResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
+  /**
+   * Tạo product mới
+   */
+  async create(formData: CreateProductFormData): Promise<Product> {
+    const backendData = transformCreateProductFormData(formData);
+    const backendResponse = await apiClient.post<BackendProductResponse>(this.endpoint, backendData);
+    return transformProductResponse(backendResponse);
+  }
+
+  /**
+   * Cập nhật product
+   */
+  async update(id: number, formData: UpdateProductFormData): Promise<Product> {
+    const backendData = transformUpdateProductFormData(formData);
+    const backendResponse = await apiClient.patch<BackendProductResponse>(`${this.endpoint}/${id}`, backendData);
+    return transformProductResponse(backendResponse);
+  }
+
+  /**
+   * Xóa product
+   */
+  async delete(id: number): Promise<void> {
+    return apiClient.delete<void>(`${this.endpoint}/${id}`);
+  }
+
+  /**
+   * Xóa nhiều products
+   */
+  async bulkDelete(formData: BulkDeleteProductFormData): Promise<BulkDeleteResponse> {
+    return apiClient.delete<BulkDeleteResponse>(`${this.endpoint}/bulk`, formData);
+  }
+
+  /**
+   * Test API connection
+   */
+  async ping(): Promise<{ message: string }> {
+    return apiClient.get<{ message: string }>(`${this.endpoint}/admin/test`);
+  }
+
+  /**
+   * Lấy thống kê products
+   */
+  async getStats(): Promise<{
+    total: number;
+    signature: number;
+    withCategory: number;
+    withoutCategory: number;
+    recentlyCreated: number;
+  }> {
+    return apiClient.get<{
+      total: number;
+      signature: number;
+      withCategory: number;
+      withoutCategory: number;
+      recentlyCreated: number;
+    }>(`${this.endpoint}/stats`);
+  }
+
+  /**
+   * Upload product image
+   */
+  async uploadImage(file: File): Promise<{ image_path: string }> {
+    const formData = new FormData();
+    formData.append('image', file);
+    
+    return apiClient.post<{ image_path: string }>(`${this.endpoint}/upload-image`, formData);
+  }
+
+  // === PRODUCT PRICE MANAGEMENT ===
+
+  /**
+   * Lấy danh sách giá của sản phẩm
+   */
+  async getProductPrices(productId: number): Promise<ProductPrice[]> {
+    const backendResponse = await apiClient.get<BackendProductPriceResponse[]>(`${this.endpoint}/${productId}/prices`);
+    return backendResponse.map(transformProductPriceResponse);
+  }
+
+  /**
+   * Tạo giá mới cho sản phẩm
+   */
+  async createProductPrice(formData: CreateProductPriceFormData): Promise<ProductPrice> {
+    const backendResponse = await apiClient.post<BackendProductPriceResponse>(`${this.endpoint}/prices`, formData);
+    return transformProductPriceResponse(backendResponse);
+  }
+
+  /**
+   * Cập nhật giá sản phẩm
+   */
+  async updateProductPrice(priceId: number, formData: UpdateProductPriceFormData): Promise<ProductPrice> {
+    const backendResponse = await apiClient.patch<BackendProductPriceResponse>(`${this.endpoint}/prices/${priceId}`, formData);
+    return transformProductPriceResponse(backendResponse);
+  }
+
+  /**
+   * Xóa giá sản phẩm
+   */
+  async deleteProductPrice(priceId: number): Promise<void> {
+    return apiClient.delete<void>(`${this.endpoint}/prices/${priceId}`);
+  }
+
+  /**
+   * Xóa nhiều giá sản phẩm
+   */
+  async bulkDeleteProductPrices(priceIds: number[]): Promise<BulkDeleteResponse> {
+    return apiClient.delete<BulkDeleteResponse>(`${this.endpoint}/prices/bulk`, { ids: priceIds });
+  }
+}
+
+// Export singleton instance
+export const productService = new ProductService(); 
\ No newline at end of file
Index: frontend/manager/src/app/users/employees/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { \n  ArrowLeft, \n  Edit, \n  Save, \n  X, \n  User, \n  Mail, \n  Phone, \n  Calendar,\n  Shield,\n  Loader2,\n  ShoppingCart \n} from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { AuthGuard } from \"@/components/auth/auth-guard\";\nimport { useEmployeeStore } from \"@/stores/employees\";\nimport { Employee, Order } from \"@/types/api\";\nimport { apiClient } from \"@/lib/api-client\";\n\n// Schema cho thông tin cá nhân\nconst employeeInfoSchema = z.object({\n  first_name: z.string().min(1, \"Tên là bắt buộc\"),\n  last_name: z.string().min(1, \"Họ là bắt buộc\"),\n  email: z.string().email(\"Email không hợp lệ\"),\n  phone: z.string().min(10, \"Số điện thoại phải có ít nhất 10 số\"),\n  position: z.string().min(1, \"Chức vụ là bắt buộc\"),\n});\n\n// Schema cho thông tin tài khoản\nconst accountInfoSchema = z.object({\n  username: z.string().min(3, \"Tên đăng nhập phải có ít nhất 3 ký tự\").optional().or(z.literal(\"\")),\n  password: z.string().min(6, \"Mật khẩu phải có ít nhất 6 ký tự\").optional().or(z.literal(\"\")),\n});\n\ntype EmployeeInfoFormData = z.infer<typeof employeeInfoSchema>;\ntype AccountInfoFormData = z.infer<typeof accountInfoSchema>;\n\nfunction formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"vi-VN\", {\n    year: \"numeric\",\n    month: \"long\", \n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  }).format(date);\n}\n\nfunction formatCurrency(amount: number): string {\n  return new Intl.NumberFormat(\"vi-VN\", {\n    style: \"currency\",\n    currency: \"VND\",\n  }).format(amount);\n}\n\nexport default function EmployeeDetailPage() {\n  const router = useRouter();\n  const params = useParams();\n  const employeeId = parseInt(params.id as string);\n  \n  const [isEditingInfo, setIsEditingInfo] = useState(false);\n  const [isEditingAccount, setIsEditingAccount] = useState(false);\n  const [isUpdatingInfo, setIsUpdatingInfo] = useState(false);\n  const [isUpdatingAccount, setIsUpdatingAccount] = useState(false);\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [isLoadingOrders, setIsLoadingOrders] = useState(false);\n  \n  const {\n    currentEmployee: employee,\n    isLoading,\n    fetchEmployeeById,\n    updateEmployee,\n  } = useEmployeeStore();\n\n  // Form cho thông tin cá nhân\n  const employeeInfoForm = useForm<EmployeeInfoFormData>({\n    resolver: zodResolver(employeeInfoSchema),\n    defaultValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      phone: \"\",\n      position: \"\",\n    },\n  });\n\n  // Form cho thông tin tài khoản\n  const accountInfoForm = useForm<AccountInfoFormData>({\n    resolver: zodResolver(accountInfoSchema),\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  useEffect(() => {\n    if (employeeId) {\n      fetchEmployeeById(employeeId);\n    }\n  }, [employeeId, fetchEmployeeById]);\n\n  useEffect(() => {\n    if (employee) {\n      // Reset form thông tin cá nhân\n      if (isEditingInfo) {\n        employeeInfoForm.reset({\n          first_name: employee.firstName,\n          last_name: employee.lastName,\n          email: employee.email,\n          phone: employee.phone,\n          position: employee.position || \"\",\n        });\n      }\n      \n      // Reset form thông tin tài khoản\n      if (isEditingAccount) {\n        accountInfoForm.reset({\n          username: employee.username,\n          password: \"\",\n        });\n      }\n\n      // Load orders của nhân viên\n      loadEmployeeOrders();\n    }\n  }, [employee, isEditingInfo, isEditingAccount, employeeInfoForm, accountInfoForm]);\n\n  const loadEmployeeOrders = async () => {\n    if (!employee) return;\n    \n    setIsLoadingOrders(true);\n    try {\n      const response = await apiClient.get(`/orders/employee/${employee.id}`);\n      console.log(\"Orders API response:\", response); // Debug log\n      \n      // Xử lý response dựa trên cấu trúc thực tế từ backend\n      let ordersData: any[] = [];\n      \n      if (Array.isArray(response)) {\n        ordersData = response;\n      } else if (response && Array.isArray((response as any).data)) {\n        ordersData = (response as any).data;\n      } else if (response && (response as any).orders && Array.isArray((response as any).orders)) {\n        ordersData = (response as any).orders;\n      }\n      \n      // Transform data nếu cần thiết\n      const transformedOrders = ordersData.map((order: any) => ({\n        id: order.id || order.order_id,\n        customerName: order.customerName || order.customer_name || order.customer?.name,\n        customerId: order.customerId || order.customer_id,\n        employeeId: order.employeeId || order.employee_id,\n        totalAmount: order.totalAmount || order.total_amount || 0,\n        finalAmount: order.finalAmount || order.final_amount || order.totalAmount || order.total_amount || 0,\n        status: order.status || 'PENDING',\n        paymentMethod: order.paymentMethod || order.payment_method,\n        paymentStatus: order.paymentStatus || order.payment_status,\n        notes: order.notes,\n        createdAt: new Date(order.createdAt || order.created_at),\n        updatedAt: new Date(order.updatedAt || order.updated_at),\n        items: order.items || order.orderItems || []\n      }));\n      \n      setOrders(transformedOrders);\n    } catch (error) {\n      console.error(\"Lỗi tải đơn hàng:\", error);\n      toast.error(\"Không thể tải danh sách đơn hàng\");\n      setOrders([]);\n    } finally {\n      setIsLoadingOrders(false);\n    }\n  };\n\n  const handleEditInfo = () => {\n    setIsEditingInfo(true);\n  };\n\n  const handleCancelEditInfo = () => {\n    setIsEditingInfo(false);\n    employeeInfoForm.reset();\n  };\n\n  const handleEditAccount = () => {\n    setIsEditingAccount(true);\n  };\n\n  const handleCancelEditAccount = () => {\n    setIsEditingAccount(false);\n    accountInfoForm.reset();\n  };\n\n  const handleSaveInfo = async (data: EmployeeInfoFormData) => {\n    if (!employee) return;\n    \n    try {\n      setIsUpdatingInfo(true);\n      \n      // Cập nhật thông tin nhân viên\n      const updateData = {\n        firstName: data.first_name,\n        lastName: data.last_name,\n        email: data.email,\n        phone: data.phone,\n        position: data.position,\n      };\n      \n      await updateEmployee(employee.id, updateData);\n      setIsEditingInfo(false);\n      toast.success(\"Cập nhật thông tin thành công!\");\n    } catch (error) {\n      console.error(\"Lỗi cập nhật thông tin:\", error);\n      toast.error(\"Lỗi khi cập nhật thông tin nhân viên\");\n    } finally {\n      setIsUpdatingInfo(false);\n    }\n  };\n\n  const handleSaveAccount = async (data: AccountInfoFormData) => {\n    if (!employee) return;\n    \n    try {\n      setIsUpdatingAccount(true);\n      \n      // Chỉ gửi dữ liệu nếu có thay đổi\n      const accountUpdateData: any = {};\n      if (data.username && data.username.trim() !== \"\") {\n        accountUpdateData.username = data.username;\n      }\n      if (data.password && data.password.trim() !== \"\") {\n        accountUpdateData.password = data.password;\n      }\n      \n      // Kiểm tra có dữ liệu để cập nhật không\n      if (Object.keys(accountUpdateData).length === 0) {\n        toast.error(\"Vui lòng nhập thông tin cần thay đổi\");\n        return;\n      }\n      \n      // Gọi API cập nhật account\n      await apiClient.patch(`/accounts/${employee.accountId}`, accountUpdateData);\n      \n      // Cập nhật username trong store nếu có thay đổi\n      if (accountUpdateData.username) {\n        // Chỉ cập nhật local state, không gọi API employee nữa\n        const updatedEmployee: Employee = {\n          ...employee,\n          username: accountUpdateData.username,\n          updatedAt: new Date(),\n        };\n        // Cập nhật currentEmployee trong store trực tiếp\n        const { setCurrentEmployee } = useEmployeeStore.getState();\n        setCurrentEmployee(updatedEmployee);\n      }\n      \n      setIsEditingAccount(false);\n      toast.success(\"Cập nhật thông tin tài khoản thành công!\");\n    } catch (error: any) {\n      console.error(\"Lỗi cập nhật thông tin tài khoản:\", error);\n      toast.error(error.message || \"Không thể cập nhật thông tin tài khoản. Vui lòng thử lại.\");\n    } finally {\n      setIsUpdatingAccount(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AuthGuard>\n        <div className=\"flex items-center justify-center h-96\">\n          <div className=\"text-center\">\n            <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n            <p className=\"text-muted-foreground\">Đang tải thông tin nhân viên...</p>\n          </div>\n        </div>\n      </AuthGuard>\n    );\n  }\n\n  if (!employee) {\n    return (\n      <AuthGuard>\n        <div className=\"flex flex-col items-center justify-center h-96 space-y-4\">\n          <h2 className=\"text-2xl font-semibold\">Không tìm thấy nhân viên</h2>\n          <p className=\"text-muted-foreground\">Nhân viên với ID {employeeId} không tồn tại.</p>\n          <Button onClick={() => router.push(\"/users/employees\")}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Quay lại danh sách\n          </Button>\n        </div>\n      </AuthGuard>\n    );\n  }\n\n  return (\n    <AuthGuard>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Button \n              variant=\"outline\" \n              size=\"icon\"\n              onClick={() => router.push(\"/users/employees\")}\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n            </Button>\n            <div>\n              <h1 className=\"text-3xl font-bold\">Chi tiết nhân viên</h1>\n              <p className=\"text-muted-foreground\">\n                Thông tin chi tiết và cài đặt của nhân viên\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-3\">\n          {/* Profile Card */}\n          <Card>\n            <CardHeader className=\"text-center\">\n              <Avatar className=\"w-24 h-24 mx-auto\">\n                <AvatarFallback className=\"text-lg\">\n                  {employee.name ? employee.name.split(' ').map(n => n[0]).join('') : 'NV'}\n                </AvatarFallback>\n              </Avatar>\n              <CardTitle className=\"mt-4\">{employee.name}</CardTitle>\n              <div className=\"flex justify-center\">\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">{employee.email}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">{employee.phone}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <User className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">{employee.position}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">Tham gia {formatDate(employee.createdAt)}</span>\n              </div>\n              {employee.lastLogin && (\n                <div className=\"flex items-center space-x-2\">\n                  <Shield className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Đăng nhập lần cuối {formatDate(employee.lastLogin)}</span>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Information & Orders Tabs */}\n          <div className=\"md:col-span-2\">\n            <Tabs defaultValue=\"info\" className=\"space-y-6\">\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"info\">Thông tin cá nhân</TabsTrigger>\n                <TabsTrigger value=\"orders\">Đơn hàng đã bán</TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"info\" className=\"space-y-6\">\n                {/* Thông tin cá nhân */}\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between\">\n                    <CardTitle>Thông tin cá nhân</CardTitle>\n                    {!isEditingInfo ? (\n                      <Button variant=\"outline\" size=\"sm\" onClick={handleEditInfo}>\n                        <Edit className=\"mr-2 h-4 w-4\" />\n                        Chỉnh sửa\n                      </Button>\n                    ) : (\n                      <div className=\"flex space-x-2\">\n                        <Button variant=\"outline\" size=\"sm\" onClick={handleCancelEditInfo} disabled={isUpdatingInfo}>\n                          <X className=\"mr-2 h-4 w-4\" />\n                          Hủy\n                        </Button>\n                        <Button \n                          size=\"sm\"\n                          onClick={employeeInfoForm.handleSubmit(handleSaveInfo)} \n                          disabled={isUpdatingInfo}\n                        >\n                          {isUpdatingInfo ? (\n                            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                          ) : (\n                            <Save className=\"mr-2 h-4 w-4\" />\n                          )}\n                          Lưu\n                        </Button>\n                      </div>\n                    )}\n                  </CardHeader>\n                  <CardContent>\n                    {isEditingInfo ? (\n                      <Form {...employeeInfoForm}>\n                        <form onSubmit={employeeInfoForm.handleSubmit(handleSaveInfo)} className=\"space-y-4\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            {/* Họ */}\n                            <FormField\n                              control={employeeInfoForm.control}\n                              name=\"last_name\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Họ</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"Ví dụ: Nguyễn\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n\n                            {/* Tên */}\n                            <FormField\n                              control={employeeInfoForm.control}\n                              name=\"first_name\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Tên</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"Ví dụ: Văn An\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          </div>\n\n                          {/* Email */}\n                          <FormField\n                            control={employeeInfoForm.control}\n                            name=\"email\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Email</FormLabel>\n                                <FormControl>\n                                  <Input type=\"email\" placeholder=\"email@example.com\" {...field} />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            {/* Số điện thoại */}\n                            <FormField\n                              control={employeeInfoForm.control}\n                              name=\"phone\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Số điện thoại</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"Ví dụ: 0901234567\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n\n                            {/* Chức vụ */}\n                            <FormField\n                              control={employeeInfoForm.control}\n                              name=\"position\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Chức vụ</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"Ví dụ: Nhân viên bán hàng\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          </div>\n                        </form>\n                      </Form>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div>\n                            <div className=\"text-sm font-medium text-muted-foreground\">Họ</div>\n                            <div className=\"text-sm\">{employee.lastName}</div>\n                          </div>\n                          <div>\n                            <div className=\"text-sm font-medium text-muted-foreground\">Tên</div>\n                            <div className=\"text-sm\">{employee.firstName}</div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm font-medium text-muted-foreground\">Email</div>\n                          <div className=\"text-sm\">{employee.email}</div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div>\n                            <div className=\"text-sm font-medium text-muted-foreground\">Số điện thoại</div>\n                            <div className=\"text-sm\">{employee.phone}</div>\n                          </div>\n                          <div>\n                            <div className=\"text-sm font-medium text-muted-foreground\">Chức vụ</div>\n                            <div className=\"text-sm\">{employee.position}</div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Thông tin tài khoản */}\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between\">\n                    <CardTitle>Thông tin tài khoản</CardTitle>\n                    {!isEditingAccount ? (\n                      <Button variant=\"outline\" size=\"sm\" onClick={handleEditAccount}>\n                        <Edit className=\"mr-2 h-4 w-4\" />\n                        Chỉnh sửa\n                      </Button>\n                    ) : (\n                      <div className=\"flex space-x-2\">\n                        <Button variant=\"outline\" size=\"sm\" onClick={handleCancelEditAccount} disabled={isUpdatingAccount}>\n                          <X className=\"mr-2 h-4 w-4\" />\n                          Hủy\n                        </Button>\n                        <Button \n                          size=\"sm\"\n                          onClick={accountInfoForm.handleSubmit(handleSaveAccount)} \n                          disabled={isUpdatingAccount}\n                        >\n                          {isUpdatingAccount ? (\n                            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                          ) : (\n                            <Save className=\"mr-2 h-4 w-4\" />\n                          )}\n                          Lưu\n                        </Button>\n                      </div>\n                    )}\n                  </CardHeader>\n                  <CardContent>\n                    {isEditingAccount ? (\n                      <Form {...accountInfoForm}>\n                        <form onSubmit={accountInfoForm.handleSubmit(handleSaveAccount)} className=\"space-y-4\">\n                          {/* Username */}\n                          <FormField\n                            control={accountInfoForm.control}\n                            name=\"username\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Tên đăng nhập</FormLabel>\n                                <FormControl>\n                                  <Input placeholder=\"Nhập tên đăng nhập mới\" {...field} />\n                                </FormControl>\n                                <FormDescription>\n                                  Để trống nếu không muốn thay đổi\n                                </FormDescription>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* Password */}\n                          <FormField\n                            control={accountInfoForm.control}\n                            name=\"password\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Mật khẩu mới</FormLabel>\n                                <FormControl>\n                                  <Input type=\"password\" placeholder=\"Nhập mật khẩu mới\" {...field} />\n                                </FormControl>\n                                <FormDescription>\n                                  Để trống nếu không muốn thay đổi mật khẩu\n                                </FormDescription>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                        </form>\n                      </Form>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        <div>\n                          <div className=\"text-sm font-medium text-muted-foreground\">Tên đăng nhập</div>\n                          <div className=\"text-sm\">{employee.username}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm font-medium text-muted-foreground\">Mật khẩu</div>\n                          <div className=\"text-sm\">••••••••</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm font-medium text-muted-foreground\">Trạng thái tài khoản</div>\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"orders\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <ShoppingCart className=\"mr-2 h-5 w-5\" />\n                      Đơn hàng đã bán ({orders.length})\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isLoadingOrders ? (\n                      <div className=\"flex items-center justify-center py-8\">\n                        <Loader2 className=\"h-6 w-6 animate-spin mr-2\" />\n                        <span>Đang tải đơn hàng...</span>\n                      </div>\n                    ) : orders.length === 0 ? (\n                      <div className=\"text-center py-8 text-muted-foreground\">\n                        Nhân viên này chưa bán đơn hàng nào\n                      </div>\n                    ) : (\n                      <Table>\n                        <TableHeader>\n                          <TableRow>\n                            <TableHead>Mã đơn hàng</TableHead>\n                            <TableHead>Khách hàng</TableHead>\n                            <TableHead>Tổng tiền</TableHead>\n                            <TableHead>Trạng thái</TableHead>\n                            <TableHead>Ngày tạo</TableHead>\n                          </TableRow>\n                        </TableHeader>\n                                                 <TableBody>\n                           {Array.isArray(orders) && orders.map((order) => (\n                            <TableRow key={order.id}>\n                              <TableCell className=\"font-medium\">#{order.id}</TableCell>\n                              <TableCell>\n                                {order.customerName || \"Khách lẻ\"}\n                              </TableCell>\n                              <TableCell>\n                                {formatCurrency(order.totalAmount)}\n                              </TableCell>\n                              <TableCell>\n                                <Badge variant={\n                                  order.status === \"COMPLETED\" ? \"default\" :\n                                  order.status === \"PENDING\" ? \"secondary\" :\n                                  order.status === \"CANCELLED\" ? \"destructive\" : \"outline\"\n                                }>\n                                  {order.status === \"COMPLETED\" ? \"Hoàn thành\" :\n                                   order.status === \"PENDING\" ? \"Đang xử lý\" :\n                                   order.status === \"CANCELLED\" ? \"Đã hủy\" : order.status}\n                                </Badge>\n                              </TableCell>\n                              <TableCell>\n                                {formatDate(order.createdAt)}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </AuthGuard>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/employees/[id]/page.tsx b/frontend/manager/src/app/users/employees/[id]/page.tsx
--- a/frontend/manager/src/app/users/employees/[id]/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/employees/[id]/page.tsx	(date 1750128336958)
@@ -24,7 +24,6 @@
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
 import { Badge } from "@/components/ui/badge";
 import { Avatar, AvatarFallback } from "@/components/ui/avatar";
-import { Separator } from "@/components/ui/separator";
 import {
   Form,
   FormControl,
@@ -34,13 +33,8 @@
   FormLabel,
   FormMessage,
 } from "@/components/ui/form";
-import {
-  Select,
-  SelectContent,
-  SelectItem,
-  SelectTrigger,
-  SelectValue,
-} from "@/components/ui/select";
+
+
 import { Input } from "@/components/ui/input";
 import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
 import {
Index: frontend/manager/src/components/forms/create-employee-dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Loader2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  createEmployeeSchema,\n  CreateEmployeeFormData\n} from \"@/lib/validations/employee\";\n\ninterface CreateEmployeeDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSubmit: (data: CreateEmployeeFormData) => Promise<void>;\n  isLoading?: boolean;\n  isSubmitting?: boolean;\n}\n\nexport function CreateEmployeeDialog({ \n  open,\n  onOpenChange,\n  onSubmit, \n  isLoading = false,\n  isSubmitting = false,\n}: CreateEmployeeDialogProps) {\n  \n  const form = useForm<CreateEmployeeFormData>({\n    resolver: zodResolver(createEmployeeSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      position: \"\",\n      username: \"\",\n    },\n  });\n\n  const handleSubmit = async (data: CreateEmployeeFormData) => {\n    try {\n      await onSubmit(data);\n      form.reset();\n    } catch (error) {\n      console.error(\"Lỗi submit form:\", error);\n    }\n  };\n\n  const handleCancel = () => {\n    form.reset();\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[80vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Thêm Nhân Viên Mới</DialogTitle>\n          <DialogDescription>\n            Nhập thông tin để tạo tài khoản nhân viên mới trong hệ thống\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Họ */}\n              <FormField\n                control={form.control}\n                name=\"lastName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>\n                      Họ <span className=\"text-destructive\">*</span>\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        placeholder=\"Ví dụ: Nguyễn\" \n                        {...field} \n                        disabled={isLoading}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Họ của nhân viên\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {/* Tên */}\n              <FormField\n                control={form.control}\n                name=\"firstName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>\n                      Tên <span className=\"text-destructive\">*</span>\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        placeholder=\"Ví dụ: Văn An\" \n                        {...field} \n                        disabled={isLoading}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Tên của nhân viên\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Email */}\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>\n                    Email <span className=\"text-destructive\">*</span>\n                  </FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"email\"\n                      placeholder=\"Ví dụ: nhanvien@cakepos.com\" \n                      {...field} \n                      disabled={isLoading}\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Email liên hệ của nhân viên\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Số điện thoại */}\n              <FormField\n                control={form.control}\n                name=\"phone\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>\n                      Số điện thoại <span className=\"text-destructive\">*</span>\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        type=\"tel\"\n                        placeholder=\"Ví dụ: 0901234567\" \n                        {...field} \n                        disabled={isLoading}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Số điện thoại liên hệ\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {/* Chức vụ */}\n              <FormField\n                control={form.control}\n                name=\"position\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>\n                      Chức vụ <span className=\"text-destructive\">*</span>\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        placeholder=\"Ví dụ: Nhân viên bán hàng\" \n                        {...field} \n                        disabled={isLoading}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Vị trí công việc của nhân viên\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Username */}\n            <FormField\n              control={form.control}\n              name=\"username\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>\n                    Tên đăng nhập <span className=\"text-destructive\">*</span>\n                  </FormLabel>\n                  <FormControl>\n                    <Input \n                      placeholder=\"Ví dụ: nhanvien1\" \n                      {...field} \n                      disabled={isLoading}\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Tên đăng nhập vào hệ thống\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Thông báo mật khẩu mặc định */}\n            <div className=\"rounded-lg border border-blue-200 bg-blue-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-blue-800\">\n                    Thông tin mật khẩu\n                  </h3>\n                  <div className=\"mt-2 text-sm text-blue-700\">\n                    <p>\n                      Mật khẩu mặc định sẽ là <strong>\"12345678\"</strong> - nhân viên có thể đổi sau khi đăng nhập lần đầu.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Buttons */}\n            <DialogFooter>\n              <Button \n                type=\"button\" \n                variant=\"outline\" \n                onClick={handleCancel}\n                disabled={isLoading || isSubmitting}\n              >\n                Hủy\n              </Button>\n              <Button type=\"submit\" disabled={isLoading || isSubmitting}>\n                {(isLoading || isSubmitting) && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Tạo nhân viên\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-employee-dialog.tsx b/frontend/manager/src/components/forms/create-employee-dialog.tsx
--- a/frontend/manager/src/components/forms/create-employee-dialog.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/components/forms/create-employee-dialog.tsx	(date 1750128336958)
@@ -1,6 +1,5 @@
 "use client";
 
-import { useState } from "react";
 import { useForm } from "react-hook-form";
 import { zodResolver } from "@hookform/resolvers/zod";
 import { Loader2 } from "lucide-react";
@@ -247,7 +246,7 @@
                   </h3>
                   <div className="mt-2 text-sm text-blue-700">
                     <p>
-                      Mật khẩu mặc định sẽ là <strong>"12345678"</strong> - nhân viên có thể đổi sau khi đăng nhập lần đầu.
+                      Mật khẩu mặc định sẽ là <strong>&ldquo;12345678&rdquo;</strong> - nhân viên có thể đổi sau khi đăng nhập lần đầu.
                     </p>
                   </div>
                 </div>
Index: frontend/manager/src/app/products/categories/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/categories/[id]/page.tsx b/frontend/manager/src/app/products/categories/[id]/page.tsx
new file mode 100644
--- /dev/null	(date 1750166055992)
+++ b/frontend/manager/src/app/products/categories/[id]/page.tsx	(date 1750166055992)
@@ -0,0 +1,728 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useParams, useRouter } from "next/navigation";
+import { ArrowLeft, Package, Edit, Trash2, Plus, Eye, Save, X, MoreHorizontal, Loader2 } from "lucide-react";
+import { toast } from "sonner";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Skeleton } from "@/components/ui/skeleton";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { Checkbox } from "@/components/ui/checkbox";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import { Form, FormControl, FormField, FormItem, FormMessage } from "@/components/ui/form";
+import { CreateProductDialog } from "@/components/forms/create-product-dialog";
+
+import { Category, Product } from "@/types/api";
+import { categoryService } from "@/lib/services/category-service";
+import { productService } from "@/lib/services/product-service";
+import { updateCategorySchema, UpdateCategoryFormData } from "@/lib/validations/category";
+import { CreateProductFormData } from "@/lib/validations/product";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "long",
+    day: "numeric",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+export default function CategoryDetailPage() {
+  const params = useParams();
+  const router = useRouter();
+  const categoryId = parseInt(params.id as string);
+
+  const [category, setCategory] = useState<Category | null>(null);
+  const [products, setProducts] = useState<Product[]>([]);
+  const [isLoadingCategory, setIsLoadingCategory] = useState(true);
+  const [isLoadingProducts, setIsLoadingProducts] = useState(true);
+  const [isEditing, setIsEditing] = useState(false);
+  const [isUpdating, setIsUpdating] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+  const [isCreateProductDialogOpen, setIsCreateProductDialogOpen] = useState(false);
+  const [isCreatingProduct, setIsCreatingProduct] = useState(false);
+
+  // Bulk delete states
+  const [selectedProductIds, setSelectedProductIds] = useState<Set<number>>(new Set());
+  const [isDeleting, setIsDeleting] = useState(false);
+  const [isBulkDeleteDialogOpen, setIsBulkDeleteDialogOpen] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);
+
+  // Form cho chỉnh sửa
+  const form = useForm<UpdateCategoryFormData>({
+    resolver: zodResolver(updateCategorySchema),
+    defaultValues: {
+      name: "",
+      description: "",
+    },
+  });
+
+  useEffect(() => {
+    loadCategoryDetails();
+    loadCategoryProducts();
+  }, [categoryId]);
+
+  // Reset form khi category thay đổi
+  useEffect(() => {
+    if (category) {
+      form.reset({
+        name: category.name || "",
+        description: category.description || "",
+      });
+    }
+  }, [category, form]);
+
+  const loadCategoryDetails = async () => {
+    try {
+      setIsLoadingCategory(true);
+      setError(null);
+      
+      const categoryData = await categoryService.getById(categoryId);
+      setCategory(categoryData);
+    } catch (error) {
+      console.error("Lỗi tải thông tin danh mục:", error);
+      setError("Không thể tải thông tin danh mục");
+      toast.error("Không thể tải thông tin danh mục");
+    } finally {
+      setIsLoadingCategory(false);
+    }
+  };
+
+  const loadCategoryProducts = async () => {
+    try {
+      setIsLoadingProducts(true);
+      
+      // Gọi API để lấy sản phẩm theo danh mục
+      const response = await productService.getByCategory(categoryId, { page: 1, limit: 50 });
+      setProducts(response.data);
+      
+      // Clear selection khi reload products
+      setSelectedProductIds(new Set());
+    } catch (error) {
+      console.error("Lỗi tải danh sách sản phẩm:", error);
+      toast.error("Không thể tải danh sách sản phẩm");
+    } finally {
+      setIsLoadingProducts(false);
+    }
+  };
+
+  const handleEditCategory = () => {
+    setIsEditing(true);
+  };
+
+  const handleCancelEdit = () => {
+    setIsEditing(false);
+    if (category) {
+      form.reset({
+        name: category.name || "",
+        description: category.description || "",
+      });
+    }
+  };
+
+  const handleSaveCategory = async (data: UpdateCategoryFormData) => {
+    if (!category) return;
+
+    try {
+      setIsUpdating(true);
+
+      // Chỉ gửi những field đã thay đổi
+      const changedData: UpdateCategoryFormData = {};
+      
+      if (data.name !== category.name) {
+        changedData.name = data.name;
+      }
+      
+      if (data.description !== category.description) {
+        changedData.description = data.description;
+      }
+
+      // Nếu không có gì thay đổi
+      if (Object.keys(changedData).length === 0) {
+        setIsEditing(false);
+        toast.info("Không có thay đổi nào để lưu");
+        return;
+      }
+
+      const updatedCategory = await categoryService.update(category.id, changedData);
+      setCategory(updatedCategory);
+      setIsEditing(false);
+      toast.success("Cập nhật danh mục thành công!");
+    } catch (error) {
+      console.error("Lỗi cập nhật danh mục:", error);
+      toast.error("Không thể cập nhật danh mục. Vui lòng thử lại.");
+    } finally {
+      setIsUpdating(false);
+    }
+  };
+
+  const handleDeleteCategory = () => {
+    toast.info("Tính năng xóa danh mục đang phát triển");
+  };
+
+  const handleAddProduct = () => {
+    setIsCreateProductDialogOpen(true);
+  };
+
+  const handleCreateProduct = async (data: {
+    name: string;
+    description?: string;
+    is_signature: boolean;
+    image_path?: string;
+    category_id: number;
+  }) => {
+    try {
+      setIsCreatingProduct(true);
+      
+      // Transform data để tương thích với CreateProductFormData
+      const productData: CreateProductFormData = {
+        ...data,
+        prices: [] // Backend sẽ tạo sản phẩm mà không có prices, sau đó thêm prices riêng
+      };
+      
+      await productService.create(productData);
+      setIsCreateProductDialogOpen(false);
+      toast.success("Tạo sản phẩm thành công!");
+      
+      // Reload danh sách sản phẩm
+      loadCategoryProducts();
+    } catch (error) {
+      console.error("Lỗi tạo sản phẩm:", error);
+      toast.error("Không thể tạo sản phẩm. Vui lòng thử lại.");
+    } finally {
+      setIsCreatingProduct(false);
+    }
+  };
+
+  const handleViewProduct = (productId: number) => {
+    router.push(`/products/${productId}`);
+  };
+
+  // Bulk selection handlers
+  const handleSelectProduct = (productId: number, selected: boolean) => {
+    const newSelected = new Set(selectedProductIds);
+    if (selected) {
+      newSelected.add(productId);
+    } else {
+      newSelected.delete(productId);
+    }
+    setSelectedProductIds(newSelected);
+  };
+
+  const handleSelectAll = (selected: boolean) => {
+    if (selected) {
+      setSelectedProductIds(new Set(products.map(p => p.id)));
+    } else {
+      setSelectedProductIds(new Set());
+    }
+  };
+
+  const clearSelection = () => {
+    setSelectedProductIds(new Set());
+  };
+
+  // Delete handlers
+  const openDeleteDialog = (product: Product) => {
+    setSelectedProduct(product);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const openBulkDeleteDialog = () => {
+    setIsBulkDeleteDialogOpen(true);
+  };
+
+  const handleDeleteProduct = async () => {
+    if (!selectedProduct) return;
+    
+    try {
+      setIsDeleting(true);
+      await productService.delete(selectedProduct.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedProduct(null);
+      toast.success("Xóa sản phẩm thành công!");
+      
+      // Reload products
+      loadCategoryProducts();
+    } catch (error) {
+      console.error("Lỗi xóa sản phẩm:", error);
+      toast.error("Không thể xóa sản phẩm. Vui lòng thử lại.");
+    } finally {
+      setIsDeleting(false);
+    }
+  };
+
+  const handleBulkDelete = async () => {
+    if (selectedProductIds.size === 0) return;
+    
+    try {
+      setIsDeleting(true);
+      const result = await productService.bulkDelete({ ids: Array.from(selectedProductIds) });
+      setIsBulkDeleteDialogOpen(false);
+      
+      if (result.summary.failed > 0) {
+        toast.warning(`Xóa thành công ${result.summary.success} sản phẩm. ${result.summary.failed} sản phẩm không thể xóa.`);
+      } else {
+        toast.success(`Xóa thành công ${result.summary.success} sản phẩm!`);
+      }
+      
+      // Reload products
+      loadCategoryProducts();
+    } catch (error) {
+      console.error("Lỗi xóa nhiều sản phẩm:", error);
+      toast.error("Không thể xóa các sản phẩm đã chọn. Vui lòng thử lại.");
+    } finally {
+      setIsDeleting(false);
+    }
+  };
+
+  const selectedProductsArray = Array.from(selectedProductIds);
+
+  if (error) {
+    return (
+      <div className="space-y-6">
+        <Card>
+          <CardContent className="py-8">
+            <div className="text-center">
+              <p className="text-destructive mb-4">{error}</p>
+              <Button onClick={() => router.back()}>
+                <ArrowLeft className="mr-2 h-4 w-4" />
+                Quay Lại
+              </Button>
+            </div>
+          </CardContent>
+        </Card>
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Header với nút actions */}
+      <div className="flex items-center justify-between">
+        <Button variant="outline" onClick={() => router.back()}>
+          <ArrowLeft className="mr-2 h-4 w-4" />
+          Quay Lại
+        </Button>
+        
+        <div className="flex items-center space-x-2">
+          {isEditing ? (
+            <>
+              <Button 
+                variant="outline" 
+                onClick={handleCancelEdit}
+                disabled={isUpdating}
+              >
+                <X className="mr-2 h-4 w-4" />
+                Hủy
+              </Button>
+              <Button 
+                onClick={form.handleSubmit(handleSaveCategory)}
+                disabled={isUpdating}
+              >
+                {isUpdating ? (
+                  <>
+                    <Save className="mr-2 h-4 w-4 animate-spin" />
+                    Đang lưu...
+                  </>
+                ) : (
+                  <>
+                    <Save className="mr-2 h-4 w-4" />
+                    Lưu
+                  </>
+                )}
+              </Button>
+            </>
+          ) : (
+            <>
+              <Button variant="outline" onClick={handleEditCategory}>
+                <Edit className="mr-2 h-4 w-4" />
+                Chỉnh Sửa
+              </Button>
+              <Button variant="destructive" onClick={handleDeleteCategory}>
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa Danh Mục
+              </Button>
+            </>
+          )}
+        </div>
+      </div>
+
+      {/* Thông tin chi tiết danh mục */}
+      <Card>
+        <CardHeader>
+          <CardTitle className="flex items-center gap-2">
+            <Package className="h-5 w-5" />
+            Thông Tin Danh Mục
+          </CardTitle>
+        </CardHeader>
+        <CardContent>
+          {isLoadingCategory ? (
+            <div className="space-y-4">
+              <Skeleton className="h-8 w-1/3" />
+              <Skeleton className="h-4 w-full" />
+              <Skeleton className="h-4 w-2/3" />
+              <Skeleton className="h-4 w-1/2" />
+            </div>
+          ) : category ? (
+            <Form {...form}>
+              <form className="space-y-6">
+                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
+                  <div className="space-y-4">
+                    {/* Tên Danh Mục */}
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Tên Danh Mục</label>
+                      {isEditing ? (
+                        <FormField
+                          control={form.control}
+                          name="name"
+                          render={({ field }) => (
+                            <FormItem>
+                              <FormControl>
+                                <Input
+                                  placeholder="Ví dụ: Bánh sinh nhật"
+                                  {...field}
+                                  disabled={isUpdating}
+                                />
+                              </FormControl>
+                              <FormMessage />
+                            </FormItem>
+                          )}
+                        />
+                      ) : (
+                        <p className="text-lg font-semibold">{category.name}</p>
+                      )}
+                    </div>
+                    
+                    {/* Mô Tả */}
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Mô Tả</label>
+                      {isEditing ? (
+                        <FormField
+                          control={form.control}
+                          name="description"
+                          render={({ field }) => (
+                            <FormItem>
+                              <FormControl>
+                                <Textarea
+                                  placeholder="Mô tả chi tiết về danh mục..."
+                                  className="min-h-[80px]"
+                                  {...field}
+                                  disabled={isUpdating}
+                                />
+                              </FormControl>
+                              <FormMessage />
+                            </FormItem>
+                          )}
+                        />
+                      ) : (
+                        <p className="text-sm">
+                          {category.description || <span className="text-muted-foreground italic">Không có mô tả</span>}
+                        </p>
+                      )}
+                    </div>
+                  </div>
+                  
+                  <div className="space-y-4">
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">ID Danh Mục</label>
+                      <p className="text-sm font-mono">#{category.id}</p>
+                    </div>
+                    
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Ngày Tạo</label>
+                      <p className="text-sm">{formatDate(category.createdAt)}</p>
+                    </div>
+                    
+                    <div>
+                      <label className="text-sm font-medium text-muted-foreground">Cập Nhật Lần Cuối</label>
+                      <p className="text-sm">{formatDate(category.updatedAt)}</p>
+                    </div>
+                  </div>
+                </div>
+              </form>
+            </Form>
+          ) : null}
+        </CardContent>
+      </Card>
+
+      {/* Bulk Actions Toolbar */}
+      {selectedProductsArray.length > 0 && (
+        <Card className="p-4">
+          <div className="flex items-center justify-between">
+            <div className="flex items-center space-x-2">
+              <span className="text-sm text-muted-foreground">
+                Đã chọn {selectedProductsArray.length} sản phẩm
+              </span>
+              <Button
+                variant="ghost"
+                size="sm"
+                onClick={clearSelection}
+              >
+                <X className="h-4 w-4 mr-1" />
+                Bỏ chọn
+              </Button>
+            </div>
+            <div className="flex items-center space-x-2">
+              <Button
+                variant="destructive"
+                size="sm"
+                onClick={openBulkDeleteDialog}
+                disabled={isDeleting}
+              >
+                <Trash2 className="h-4 w-4 mr-2" />
+                Xóa đã chọn
+              </Button>
+            </div>
+          </div>
+        </Card>
+      )}
+
+      {/* Danh sách sản phẩm */}
+      <Card>
+        <CardHeader>
+          <div className="flex items-center justify-between">
+            <div>
+              <CardTitle>Sản Phẩm Trong Danh Mục</CardTitle>
+              <CardDescription>
+                {isLoadingProducts 
+                  ? "Đang tải danh sách sản phẩm..." 
+                  : `${products.length} sản phẩm`
+                }
+              </CardDescription>
+            </div>
+            <div className="flex items-center space-x-2">
+              {products.length > 0 && (
+                <div className="flex items-center space-x-2 mr-4">
+                  <Checkbox
+                    checked={selectedProductIds.size === products.length}
+                    onCheckedChange={handleSelectAll}
+                  />
+                  <span className="text-sm text-muted-foreground">Chọn tất cả</span>
+                </div>
+              )}
+              <Button onClick={handleAddProduct}>
+                <Plus className="mr-2 h-4 w-4" />
+                Thêm Sản Phẩm
+              </Button>
+            </div>
+          </div>
+        </CardHeader>
+        <CardContent>
+          {isLoadingProducts ? (
+            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
+              {[1, 2, 3, 4, 5, 6].map((i) => (
+                <Card key={i}>
+                  <CardContent className="p-4">
+                    <Skeleton className="h-32 w-full mb-4" />
+                    <Skeleton className="h-4 w-3/4 mb-2" />
+                    <Skeleton className="h-3 w-1/2 mb-2" />
+                    <Skeleton className="h-6 w-1/3" />
+                  </CardContent>
+                </Card>
+              ))}
+            </div>
+          ) : products.length > 0 ? (
+            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
+              {products.map((product) => (
+                <Card key={product.id} className="hover:shadow-md transition-shadow relative">
+                  {/* Checkbox selection */}
+                  <div className="absolute top-2 left-2 z-10">
+                    <Checkbox
+                      checked={selectedProductIds.has(product.id)}
+                      onCheckedChange={(checked) => handleSelectProduct(product.id, !!checked)}
+                    />
+                  </div>
+                  
+                  {/* Actions dropdown */}
+                  <div className="absolute top-2 right-2 z-10">
+                    <DropdownMenu>
+                      <DropdownMenuTrigger asChild>
+                        <Button variant="ghost" size="icon" className="h-8 w-8">
+                          <MoreHorizontal className="h-4 w-4" />
+                        </Button>
+                      </DropdownMenuTrigger>
+                      <DropdownMenuContent align="end">
+                        <DropdownMenuItem onClick={() => handleViewProduct(product.id)}>
+                          <Eye className="mr-2 h-4 w-4" />
+                          Xem Chi Tiết
+                        </DropdownMenuItem>
+                        <DropdownMenuItem 
+                          className="text-destructive"
+                          onClick={() => openDeleteDialog(product)}
+                        >
+                          <Trash2 className="mr-2 h-4 w-4" />
+                          Xóa
+                        </DropdownMenuItem>
+                      </DropdownMenuContent>
+                    </DropdownMenu>
+                  </div>
+
+                  <CardContent className="p-4 pt-8">
+                    {/* Hình ảnh sản phẩm */}
+                    <div className="aspect-square bg-muted rounded-lg mb-4 flex items-center justify-center">
+                      {product.imagePath ? (
+                        <img 
+                          src={product.imagePath} 
+                          alt={product.name}
+                          className="w-full h-full object-cover rounded-lg"
+                        />
+                      ) : (
+                        <Package className="h-12 w-12 text-muted-foreground" />
+                      )}
+                    </div>
+                    
+                    {/* Thông tin sản phẩm */}
+                    <div className="space-y-2">
+                      <h3 className="font-semibold line-clamp-2">{product.name}</h3>
+                      
+                      <p className="text-sm text-muted-foreground line-clamp-2">
+                        {product.description || "Không có mô tả"}
+                      </p>
+                      
+                      {/* Giá sản phẩm */}
+                      <div className="flex items-center justify-between">
+                        <div>
+                          {product.minPrice && product.maxPrice ? (
+                            product.minPrice === product.maxPrice ? (
+                              <span className="font-semibold text-primary">
+                                {formatCurrency(product.minPrice)}
+                              </span>
+                            ) : (
+                              <span className="font-semibold text-primary">
+                                {formatCurrency(product.minPrice)} - {formatCurrency(product.maxPrice)}
+                              </span>
+                            )
+                          ) : (
+                            <span className="text-sm text-muted-foreground">Chưa có giá</span>
+                          )}
+                        </div>
+                        
+                        {product.isSignature && (
+                          <Badge variant="secondary">Đặc trưng</Badge>
+                        )}
+                      </div>
+                      
+                      {/* Product ID */}
+                      <div className="pt-2">
+                        <span className="text-xs text-muted-foreground">
+                          ID: #{product.id}
+                        </span>
+                      </div>
+                    </div>
+                  </CardContent>
+                </Card>
+              ))}
+            </div>
+          ) : (
+            <div className="text-center py-8">
+              <Package className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
+              <p className="text-muted-foreground mb-4">Chưa có sản phẩm nào trong danh mục này</p>
+              <Button onClick={handleAddProduct}>
+                <Plus className="mr-2 h-4 w-4" />
+                Thêm Sản Phẩm Đầu Tiên
+              </Button>
+            </div>
+          )}
+        </CardContent>
+      </Card>
+
+      {/* Create Product Dialog */}
+      <CreateProductDialog
+        open={isCreateProductDialogOpen}
+        onOpenChange={setIsCreateProductDialogOpen}
+        onSubmit={handleCreateProduct}
+        isSubmitting={isCreatingProduct}
+      />
+
+      {/* Delete Single Product Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa sản phẩm <strong>{selectedProduct?.name}</strong>? 
+              Hành động này không thể hoàn tác và sẽ xóa tất cả giá liên quan.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteProduct}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+
+      {/* Bulk Delete Confirmation Dialog */}
+      <AlertDialog open={isBulkDeleteDialogOpen} onOpenChange={setIsBulkDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa nhiều sản phẩm</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa {selectedProductsArray.length} sản phẩm đã chọn khỏi danh mục <strong>{category?.name}</strong>? 
+              Hành động này không thể hoàn tác và sẽ xóa tất cả giá liên quan.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleBulkDelete}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                `Xóa ${selectedProductsArray.length} sản phẩm`
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/lib/services/product-size-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/product-size-service.ts b/frontend/manager/src/lib/services/product-size-service.ts
new file mode 100644
--- /dev/null	(date 1750166274835)
+++ b/frontend/manager/src/lib/services/product-size-service.ts	(date 1750166274835)
@@ -0,0 +1,84 @@
+import { apiClient } from '@/lib/api-client';
+import { ProductSize, BackendPaginatedResponse, BulkDeleteResponse, transformProductSize } from '@/types/api';
+import { 
+  CreateProductSizeFormData, 
+  UpdateProductSizeFormData,
+  BulkDeleteProductSizeFormData 
+} from '@/lib/validations/product-size';
+
+export interface ProductSizeQueryParams {
+  page?: number;
+  limit?: number;
+  search?: string;
+}
+
+export interface PaginatedProductSizeResponse {
+  data: ProductSize[];
+  page: number;
+  limit: number;
+  total: number;
+  totalPages: number;
+}
+
+class ProductSizeService {
+  private readonly baseUrl = '/product-sizes';
+
+  async getAll(params?: ProductSizeQueryParams): Promise<PaginatedProductSizeResponse> {
+    const searchParams = new URLSearchParams();
+    
+    if (params?.page) searchParams.append('page', params.page.toString());
+    if (params?.limit) searchParams.append('limit', params.limit.toString());
+    if (params?.search) searchParams.append('search', params.search);
+
+    const response = await apiClient.get<BackendPaginatedResponse<any>>(
+      `${this.baseUrl}?${searchParams.toString()}`
+    );
+
+    return {
+      data: response.data.map(transformProductSize),
+      page: response.pagination.page,
+      limit: response.pagination.limit,
+      total: response.pagination.total,
+      totalPages: response.pagination.totalPages || Math.ceil(response.pagination.total / response.pagination.limit),
+    };
+  }
+
+  async getById(id: number): Promise<ProductSize> {
+    const response = await apiClient.get<any>(`${this.baseUrl}/${id}`);
+    return transformProductSize(response);
+  }
+
+  async create(data: CreateProductSizeFormData): Promise<ProductSize> {
+    const response = await apiClient.post<any>(this.baseUrl, data);
+    return transformProductSize(response);
+  }
+
+  async update(id: number, data: UpdateProductSizeFormData): Promise<ProductSize> {
+    const response = await apiClient.patch<any>(`${this.baseUrl}/${id}`, data);
+    return transformProductSize(response);
+  }
+
+  async delete(id: number): Promise<void> {
+    await apiClient.delete(`${this.baseUrl}/${id}`);
+  }
+
+  async bulkDelete(data: BulkDeleteProductSizeFormData): Promise<BulkDeleteResponse> {
+    const response = await apiClient.post<BulkDeleteResponse>(`${this.baseUrl}/bulk-delete`, data);
+    return response;
+  }
+
+  async getProductPricesBySize(sizeId: number, params?: ProductSizeQueryParams): Promise<any> {
+    const searchParams = new URLSearchParams();
+    
+    if (params?.page) searchParams.append('page', params.page.toString());
+    if (params?.limit) searchParams.append('limit', params.limit.toString());
+
+    const response = await apiClient.get<BackendPaginatedResponse<any>>(
+      `${this.baseUrl}/${sizeId}/product-prices?${searchParams.toString()}`
+    );
+
+    return response;
+  }
+}
+
+export const productSizeService = new ProductSizeService(); 
\ No newline at end of file
Index: frontend/manager/src/components/layout/header.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport * as React from \"react\";\nimport { usePathname } from \"next/navigation\";\nimport { Search, Bell, User, Settings, LogOut, Menu } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\n\ninterface HeaderProps {\n  onMenuClick?: () => void;\n  className?: string;\n}\n\n// Breadcrumb mapping\nconst breadcrumbMap: Record<string, string> = {\n  \"/dashboard\": \"Dashboard\",\n  \"/users\": \"Quản lý người dùng\",\n  \"/users/managers\": \"Quản lý viên\",\n  \"/users/employees\": \"Nhân viên\",\n  \"/users/customers\": \"Khách hàng\",\n  \"/products\": \"Sản phẩm\",\n  \"/orders\": \"Đơn hàng\",\n  \"/reports\": \"Báo cáo\",\n  \"/settings\": \"Cài đặt\",\n};\n\nfunction generateBreadcrumbs(pathname: string) {\n  const segments = pathname.split(\"/\").filter(Boolean);\n  const breadcrumbs = [];\n\n  // Only add Dashboard if we're not on dashboard or if dashboard is not part of path\n  if (pathname !== \"/dashboard\") {\n    breadcrumbs.push({\n      label: \"Dashboard\",\n      href: \"/dashboard\",\n      isActive: false,\n    });\n  }\n\n  // Build path progressively\n  let currentPath = \"\";\n  for (let i = 0; i < segments.length; i++) {\n    currentPath += `/${segments[i]}`;\n    const label = breadcrumbMap[currentPath];\n    \n    if (label) {\n      breadcrumbs.push({\n        label,\n        href: currentPath,\n        isActive: i === segments.length - 1,\n      });\n    }\n  }\n\n  return breadcrumbs;\n}\n\nexport function Header({ onMenuClick, className }: HeaderProps) {\n  const pathname = usePathname();\n  const breadcrumbs = generateBreadcrumbs(pathname);\n\n  return (\n    <header className={`border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 ${className}`}>\n      <div className=\"flex h-14 items-center px-4 lg:px-6\">\n        {/* Mobile menu button */}\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"md:hidden\"\n          onClick={onMenuClick}\n        >\n          <Menu className=\"h-5 w-5\" />\n        </Button>\n\n        {/* Breadcrumb */}\n        <div className=\"flex-1\">\n          <Breadcrumb>\n            <BreadcrumbList>\n              {breadcrumbs.map((breadcrumb, index) => (\n                <React.Fragment key={`${breadcrumb.href}-${index}`}>\n                  {index > 0 && <BreadcrumbSeparator />}\n                  <BreadcrumbItem>\n                    {breadcrumb.isActive ? (\n                      <BreadcrumbPage>{breadcrumb.label}</BreadcrumbPage>\n                    ) : (\n                      <BreadcrumbLink href={breadcrumb.href}>\n                        {breadcrumb.label}\n                      </BreadcrumbLink>\n                    )}\n                  </BreadcrumbItem>\n                </React.Fragment>\n              ))}\n            </BreadcrumbList>\n          </Breadcrumb>\n        </div>\n\n        {/* Search */}\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"relative hidden md:block\">\n            <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n            <Input\n              type=\"search\"\n              placeholder=\"Tìm kiếm...\"\n              className=\"w-[200px] pl-8 lg:w-[300px]\"\n            />\n          </div>\n\n          {/* Notifications */}\n          <Button variant=\"ghost\" size=\"icon\" className=\"relative\">\n            <Bell className=\"h-4 w-4\" />\n            <Badge \n              variant=\"destructive\" \n              className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 text-xs\"\n            >\n              3\n            </Badge>\n          </Button>\n\n          {/* User menu */}\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\">\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarFallback>QT</AvatarFallback>\n                </Avatar>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n              <DropdownMenuLabel className=\"font-normal\">\n                <div className=\"flex flex-col space-y-1\">\n                  <p className=\"text-sm font-medium leading-none\">Quản trị viên</p>\n                  <p className=\"text-xs leading-none text-muted-foreground\">\n                    admin@banhngotnhalam.com\n                  </p>\n                </div>\n              </DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>\n                <User className=\"mr-2 h-4 w-4\" />\n                <span>Hồ sơ</span>\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <Settings className=\"mr-2 h-4 w-4\" />\n                <span>Cài đặt</span>\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>\n                <LogOut className=\"mr-2 h-4 w-4\" />\n                <span>Đăng xuất</span>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </header>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/layout/header.tsx b/frontend/manager/src/components/layout/header.tsx
--- a/frontend/manager/src/components/layout/header.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/components/layout/header.tsx	(date 1750218082731)
@@ -37,8 +37,15 @@
   "/users/managers": "Quản lý viên",
   "/users/employees": "Nhân viên",
   "/users/customers": "Khách hàng",
+  "/users/membership-types": "Loại thành viên",
   "/products": "Sản phẩm",
+  "/products/categories": "Danh mục sản phẩm",
+  "/products/product-sizes": "Kích thước sản phẩm",
+  "/promotions": "Chương trình khuyến mãi",
   "/orders": "Đơn hàng",
+  "/orders/processing": "Đang Xử Lý",
+  "/orders/completed": "Đã Hoàn Thành",
+  "/orders/cancelled": "Đã Hủy",
   "/reports": "Báo cáo",
   "/settings": "Cài đặt",
 };
@@ -60,7 +67,29 @@
   let currentPath = "";
   for (let i = 0; i < segments.length; i++) {
     currentPath += `/${segments[i]}`;
-    const label = breadcrumbMap[currentPath];
+    let label = breadcrumbMap[currentPath];
+    
+    // Handle dynamic routes
+    if (!label) {
+      // Check for dynamic routes patterns
+      if (currentPath.match(/^\/products\/categories\/\d+$/)) {
+        label = "Chi tiết danh mục";
+      } else if (currentPath.match(/^\/products\/\d+$/)) {
+        label = "Chi tiết sản phẩm";
+      } else if (currentPath.match(/^\/users\/managers\/\d+$/)) {
+        label = "Chi tiết quản lý";
+      } else if (currentPath.match(/^\/users\/employees\/\d+$/)) {
+        label = "Chi tiết nhân viên";
+      } else if (currentPath.match(/^\/users\/customers\/\d+$/)) {
+        label = "Chi tiết khách hàng";
+      } else if (currentPath.match(/^\/users\/membership-types\/\d+$/)) {
+        label = "Chi tiết loại thành viên";
+      } else if (currentPath.match(/^\/promotions\/\d+$/)) {
+        label = "Chi tiết khuyến mãi";
+      } else if (currentPath.match(/^\/orders\/\d+$/)) {
+        label = "Chi tiết đơn hàng";
+      }
+    }
     
     if (label) {
       breadcrumbs.push({
Index: frontend/manager/src/stores/profile.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/profile.ts b/frontend/manager/src/stores/profile.ts
new file mode 100644
--- /dev/null	(date 1750227392905)
+++ b/frontend/manager/src/stores/profile.ts	(date 1750227392905)
@@ -0,0 +1,67 @@
+import { create } from 'zustand';
+import { Profile, UpdateProfileDto } from '@/types/api';
+import { profileService } from '@/lib/services/profile-service';
+
+interface ProfileState {
+  profile: Profile | null;
+  isLoading: boolean;
+  isUpdating: boolean;
+  error: string | null;
+  
+  // Actions
+  fetchProfile: () => Promise<void>;
+  updateProfile: (data: UpdateProfileDto) => Promise<void>;
+  clearProfile: () => void;
+  clearError: () => void;
+}
+
+export const useProfileStore = create<ProfileState>((set, get) => ({
+  profile: null,
+  isLoading: false,
+  isUpdating: false,
+  error: null,
+
+  fetchProfile: async () => {
+    try {
+      set({ isLoading: true, error: null });
+      const profile = await profileService.getProfile();
+      set({ profile, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi fetch profile:', error);
+      set({ 
+        error: 'Không thể tải thông tin profile', 
+        isLoading: false 
+      });
+      throw error;
+    }
+  },
+
+  updateProfile: async (data: UpdateProfileDto) => {
+    try {
+      set({ isUpdating: true, error: null });
+      const updatedProfile = await profileService.updateProfile(data);
+      set({ 
+        profile: updatedProfile, 
+        isUpdating: false 
+      });
+    } catch (error) {
+      console.error('Lỗi update profile:', error);
+      set({ 
+        error: 'Không thể cập nhật thông tin profile', 
+        isUpdating: false 
+      });
+      throw error;
+    }
+  },
+
+  clearProfile: () => {
+    set({ 
+      profile: null, 
+      error: null 
+    });
+  },
+
+  clearError: () => {
+    set({ error: null });
+  },
+})); 
\ No newline at end of file
Index: frontend/manager/src/lib/services/employee-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { apiClient } from \"@/lib/api-client\";\nimport { \n  Employee, \n  BackendEmployeeResponse,\n  BackendPaginatedResponse,\n  BulkDeleteResponse,\n  transformEmployeeResponse,\n  CreateEmployeeDto, \n  UpdateEmployeeDto,\n  BulkDeleteEmployeeDto,\n  PaginatedResponse \n} from \"@/types/api\";\nimport { \n  transformCreateEmployeeFormData, \n  transformUpdateEmployeeFormData,\n  CreateEmployeeFormData,\n  UpdateEmployeeFormData,\n  BulkDeleteEmployeeFormData \n} from \"@/lib/validations/employee\";\n\n/**\n * Employee Service\n * Xử lý tất cả API calls liên quan đến employees\n */\nexport class EmployeeService {\n  private readonly endpoint = \"/employees\";\n\n  /**\n   * Lấy danh sách employees với pagination\n   */\n  async getAll(params?: { \n    page?: number; \n    limit?: number;\n    search?: string;\n    isActive?: boolean;\n  }): Promise<PaginatedResponse<Employee>> {\n    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendEmployeeResponse>>(\n      this.endpoint, \n      params\n    );\n    \n    // Transform backend response sang frontend format\n    return {\n      data: backendResponse.data.map(transformEmployeeResponse),\n      total: backendResponse.pagination.total,\n      page: backendResponse.pagination.page,\n      limit: backendResponse.pagination.limit,\n      totalPages: backendResponse.pagination.totalPages,\n    };\n  }\n\n  /**\n   * Lấy employee theo ID\n   */\n  async getById(id: number): Promise<Employee> {\n    const backendResponse = await apiClient.get<BackendEmployeeResponse>(`${this.endpoint}/${id}`);\n    return transformEmployeeResponse(backendResponse);\n  }\n\n  /**\n   * Lấy employee theo email\n   */\n  async getByEmail(email: string): Promise<Employee> {\n    const backendResponse = await apiClient.get<BackendEmployeeResponse>(`${this.endpoint}/email/${email}`);\n    return transformEmployeeResponse(backendResponse);\n  }\n\n  /**\n   * Tạo employee mới\n   */\n  async create(formData: CreateEmployeeFormData): Promise<Employee> {\n    const backendData = transformCreateEmployeeFormData(formData);\n    const backendResponse = await apiClient.post<BackendEmployeeResponse>(this.endpoint, backendData);\n    return transformEmployeeResponse(backendResponse);\n  }\n\n  /**\n   * Cập nhật employee\n   */\n  async update(id: number, formData: UpdateEmployeeFormData): Promise<Employee> {\n    const backendData = transformUpdateEmployeeFormData(formData);\n    const backendResponse = await apiClient.patch<BackendEmployeeResponse>(`${this.endpoint}/${id}`, backendData);\n    return transformEmployeeResponse(backendResponse);\n  }\n\n  /**\n   * Xóa employee\n   */\n  async delete(id: number): Promise<void> {\n    return apiClient.delete<void>(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Xóa nhiều employees\n   */\n  async bulkDelete(formData: BulkDeleteEmployeeFormData): Promise<BulkDeleteResponse> {\n    return apiClient.delete<BulkDeleteResponse>(`${this.endpoint}/bulk`, formData);\n  }\n\n  /**\n   * Test API connection\n   */\n  async ping(): Promise<{ message: string }> {\n    return apiClient.get<{ message: string }>(`${this.endpoint}/test/ping`);\n  }\n\n  /**\n   * Lấy thống kê employees\n   */\n  async getStats(): Promise<{\n    total: number;\n    active: number;\n    inactive: number;\n    recentlyCreated: number;\n  }> {\n    return apiClient.get<{\n      total: number;\n      active: number;\n      inactive: number;\n      recentlyCreated: number;\n    }>(`${this.endpoint}/stats`);\n  }\n}\n\n// Export singleton instance\nexport const employeeService = new EmployeeService(); 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/employee-service.ts b/frontend/manager/src/lib/services/employee-service.ts
--- a/frontend/manager/src/lib/services/employee-service.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/services/employee-service.ts	(date 1750128336958)
@@ -5,9 +5,6 @@
   BackendPaginatedResponse,
   BulkDeleteResponse,
   transformEmployeeResponse,
-  CreateEmployeeDto, 
-  UpdateEmployeeDto,
-  BulkDeleteEmployeeDto,
   PaginatedResponse 
 } from "@/types/api";
 import { 
Index: frontend/manager/src/app/products/product-sizes/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/product-sizes/page.tsx b/frontend/manager/src/app/products/product-sizes/page.tsx
new file mode 100644
--- /dev/null	(date 1750167879349)
+++ b/frontend/manager/src/app/products/product-sizes/page.tsx	(date 1750167879349)
@@ -0,0 +1,288 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter } from "next/navigation";
+import { Plus, MoreHorizontal, Trash2, Eye, ArrowUpDown, Loader2, Package } from "lucide-react";
+import { ColumnDef } from "@tanstack/react-table";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent } from "@/components/ui/card";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import { Badge } from "@/components/ui/badge";
+import { DataTable } from "@/components/ui/data-table";
+import { CreateProductSizeDialog } from "@/components/forms/create-product-size-dialog";
+import { ProductSize } from "@/types/api";
+import { CreateProductSizeFormData } from "@/lib/validations/product-size";
+import { useProductSizeStore } from "@/stores/product-sizes";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit", 
+    day: "2-digit",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+export default function ProductSizesPage() {
+  const router = useRouter();
+  
+  const {
+    productSizes,
+    isLoading,
+    isCreating,
+    isDeleting,
+    fetchProductSizes,
+    createProductSize,
+    deleteProductSize,
+  } = useProductSizeStore();
+
+  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+  const [selectedProductSize, setSelectedProductSize] = useState<ProductSize | null>(null);
+
+  useEffect(() => {
+    fetchProductSizes();
+  }, [fetchProductSizes]);
+
+  const handleCreateProductSize = async (data: CreateProductSizeFormData) => {
+    try {
+      await createProductSize(data);
+      setIsCreateDialogOpen(false);
+      toast.success("Tạo kích thước sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi tạo kích thước sản phẩm:", error);
+      toast.error("Không thể tạo kích thước sản phẩm. Vui lòng thử lại.");
+    }
+  };
+
+
+
+  const handleDeleteProductSize = async () => {
+    if (!selectedProductSize) return;
+    
+    try {
+      await deleteProductSize(selectedProductSize.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedProductSize(null);
+      toast.success("Xóa kích thước sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa kích thước sản phẩm:", error);
+      toast.error("Không thể xóa kích thước sản phẩm. Vui lòng thử lại.");
+    }
+  };
+
+
+
+  const openDeleteDialog = (productSize: ProductSize) => {
+    setSelectedProductSize(productSize);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const handleViewProductSize = (productSizeId: number) => {
+    router.push(`/products/product-sizes/${productSizeId}`);
+  };
+
+  const columns: ColumnDef<ProductSize>[] = [
+    {
+      accessorKey: "name",
+      header: "Kích Thước",
+      cell: ({ row }) => {
+        const productSize = row.original;
+        return (
+          <div className="flex items-center gap-3">
+            <div className="w-8 h-8 bg-primary/10 rounded-lg flex items-center justify-center">
+              <Package className="h-4 w-4 text-primary" />
+            </div>
+            <div>
+              <div className="font-medium">{productSize.name}</div>
+              <div className="text-sm text-muted-foreground">ID: {productSize.id}</div>
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "unit",
+      header: "Đơn Vị",
+      cell: ({ row }) => {
+        const unit = row.getValue("unit") as string;
+        return <Badge variant="outline">{unit}</Badge>;
+      },
+    },
+    {
+      accessorKey: "quantity",
+      header: ({ column }) => {
+        return (
+          <Button
+            variant="ghost"
+            onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}
+          >
+            Số Lượng
+            <ArrowUpDown className="ml-2 h-4 w-4" />
+          </Button>
+        );
+      },
+      cell: ({ row }) => {
+        const quantity = row.getValue("quantity") as number;
+        return <span className="font-medium">{quantity}</span>;
+      },
+    },
+    {
+      accessorKey: "description",
+      header: "Mô Tả",
+      cell: ({ row }) => {
+        const description = row.original.description;
+        return (
+          <div className="max-w-[200px] truncate text-sm">
+            {description || <span className="text-muted-foreground italic">Không có mô tả</span>}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "createdAt",
+      header: ({ column }) => {
+        return (
+          <Button
+            variant="ghost"
+            onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}
+          >
+            Ngày Tạo
+            <ArrowUpDown className="ml-2 h-4 w-4" />
+          </Button>
+        );
+      },
+      cell: ({ row }) => {
+        const date = row.getValue("createdAt") as Date;
+        return <span className="text-sm">{formatDate(date)}</span>;
+      },
+    },
+    {
+      id: "actions",
+      header: "Thao Tác",
+      cell: ({ row }) => {
+        const productSize = row.original;
+        
+        return (
+          <DropdownMenu>
+            <DropdownMenuTrigger asChild>
+              <Button variant="ghost" size="icon">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem onClick={() => handleViewProductSize(productSize.id)}>
+                <Eye className="mr-2 h-4 w-4" />
+                Xem Chi Tiết
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-destructive"
+                onClick={() => openDeleteDialog(productSize)}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
+        );
+      },
+    },
+  ];
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Kích Thước Sản Phẩm</h1>
+          <p className="text-muted-foreground">
+            Quản lý các kích thước có thể áp dụng cho sản phẩm
+          </p>
+        </div>
+        <Button onClick={() => setIsCreateDialogOpen(true)}>
+          <Plus className="mr-2 h-4 w-4" />
+          Thêm Kích Thước
+        </Button>
+      </div>
+
+      {/* Product Sizes Data Table */}
+      <Card>
+        <CardContent className="p-0">
+          <DataTable 
+            columns={columns} 
+            data={productSizes}
+            searchKey="name"
+            searchPlaceholder="Tìm kiếm theo tên kích thước..."
+          />
+        </CardContent>
+      </Card>
+
+      {/* Create Product Size Dialog */}
+      <CreateProductSizeDialog
+        open={isCreateDialogOpen}
+        onOpenChange={setIsCreateDialogOpen}
+        onSubmit={handleCreateProductSize}
+        isSubmitting={isCreating}
+      />
+
+
+
+      {/* Delete Confirmation Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa kích thước <strong>{selectedProductSize?.name} ({selectedProductSize?.unit})</strong>? 
+              Hành động này không thể hoàn tác và có thể ảnh hưởng đến các sản phẩm đang sử dụng kích thước này.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteProductSize}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/stores/store.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/stores/store.ts b/frontend/manager/src/stores/store.ts
new file mode 100644
--- /dev/null	(date 1750227417961)
+++ b/frontend/manager/src/stores/store.ts	(date 1750227417961)
@@ -0,0 +1,183 @@
+import { create } from 'zustand';
+import { Store, CreateStoreDto, UpdateStoreDto } from '@/types/api';
+import { storeService } from '@/lib/services/store-service';
+
+interface StoreState {
+  defaultStore: Store | null;
+  stores: Store[];
+  isLoading: boolean;
+  isCreating: boolean;
+  isUpdating: boolean;
+  isDeleting: boolean;
+  error: string | null;
+  pagination: {
+    page: number;
+    limit: number;
+    total: number;
+    totalPages: number;
+    hasNext: boolean;
+    hasPrev: boolean;
+  } | null;
+  
+  // Actions
+  fetchDefaultStore: () => Promise<void>;
+  fetchStores: (page?: number, limit?: number) => Promise<void>;
+  fetchStoreById: (id: number) => Promise<Store>;
+  createStore: (data: CreateStoreDto) => Promise<void>;
+  updateStore: (id: number, data: UpdateStoreDto) => Promise<void>;
+  deleteStore: (id: number) => Promise<void>;
+  clearError: () => void;
+}
+
+export const useStoreStore = create<StoreState>((set, get) => ({
+  defaultStore: null,
+  stores: [],
+  isLoading: false,
+  isCreating: false,
+  isUpdating: false,
+  isDeleting: false,
+  error: null,
+  pagination: null,
+
+  fetchDefaultStore: async () => {
+    try {
+      set({ isLoading: true, error: null });
+      const defaultStore = await storeService.getDefaultStore();
+      set({ defaultStore, isLoading: false });
+    } catch (error) {
+      console.error('Lỗi fetch default store:', error);
+      set({ 
+        error: 'Không thể tải thông tin cửa hàng', 
+        isLoading: false 
+      });
+      throw error;
+    }
+  },
+
+  fetchStores: async (page = 1, limit = 10) => {
+    try {
+      set({ isLoading: true, error: null });
+      const result = await storeService.getAllStores(page, limit);
+      set({ 
+        stores: result.stores,
+        pagination: result.pagination,
+        isLoading: false 
+      });
+    } catch (error) {
+      console.error('Lỗi fetch stores:', error);
+      set({ 
+        error: 'Không thể tải danh sách cửa hàng', 
+        isLoading: false 
+      });
+      throw error;
+    }
+  },
+
+  fetchStoreById: async (id: number) => {
+    try {
+      const store = await storeService.getStoreById(id);
+      return store;
+    } catch (error) {
+      console.error('Lỗi fetch store by id:', error);
+      set({ error: 'Không thể tải thông tin cửa hàng' });
+      throw error;
+    }
+  },
+
+  createStore: async (data: CreateStoreDto) => {
+    try {
+      set({ isCreating: true, error: null });
+      const newStore = await storeService.createStore(data);
+      const currentStores = get().stores;
+      set({ 
+        stores: [newStore, ...currentStores],
+        isCreating: false 
+      });
+      
+      // Refresh pagination if needed
+      const { pagination } = get();
+      if (pagination) {
+        set({
+          pagination: {
+            ...pagination,
+            total: pagination.total + 1,
+          }
+        });
+      }
+    } catch (error) {
+      console.error('Lỗi create store:', error);
+      set({ 
+        error: 'Không thể tạo cửa hàng', 
+        isCreating: false 
+      });
+      throw error;
+    }
+  },
+
+  updateStore: async (id: number, data: UpdateStoreDto) => {
+    try {
+      set({ isUpdating: true, error: null });
+      const updatedStore = await storeService.updateStore(id, data);
+      
+      // Update in stores list
+      const currentStores = get().stores;
+      const updatedStores = currentStores.map(store => 
+        store.id === id ? updatedStore : store
+      );
+      set({ stores: updatedStores, isUpdating: false });
+      
+      // Update default store if it's the same
+      const { defaultStore } = get();
+      if (defaultStore && defaultStore.id === id) {
+        set({ defaultStore: updatedStore });
+      }
+    } catch (error) {
+      console.error('Lỗi update store:', error);
+      set({ 
+        error: 'Không thể cập nhật cửa hàng', 
+        isUpdating: false 
+      });
+      throw error;
+    }
+  },
+
+  deleteStore: async (id: number) => {
+    try {
+      set({ isDeleting: true, error: null });
+      await storeService.deleteStore(id);
+      
+      // Remove from stores list
+      const currentStores = get().stores;
+      const filteredStores = currentStores.filter(store => store.id !== id);
+      set({ stores: filteredStores, isDeleting: false });
+      
+      // Update pagination
+      const { pagination } = get();
+      if (pagination) {
+        set({
+          pagination: {
+            ...pagination,
+            total: pagination.total - 1,
+          }
+        });
+      }
+      
+      // Clear default store if it's the deleted one
+      const { defaultStore } = get();
+      if (defaultStore && defaultStore.id === id) {
+        set({ defaultStore: null });
+      }
+    } catch (error) {
+      console.error('Lỗi delete store:', error);
+      set({ 
+        error: 'Không thể xóa cửa hàng', 
+        isDeleting: false 
+      });
+      throw error;
+    }
+  },
+
+  clearError: () => {
+    set({ error: null });
+  },
+})); 
\ No newline at end of file
Index: frontend/manager/src/lib/services/order-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { apiClient } from \"@/lib/api-client\";\nimport { PaginatedResponse } from \"@/types/api\";\n\n// Order từ backend\nexport interface BackendOrderResponse {\n  order_id: number;\n  employee_id?: number;\n  customer_id?: number;\n  total_amount: number;\n  final_amount: number;\n  status: string;\n  customize_note?: string;\n  created_at: string;\n  updated_at: string;\n  customer?: any;\n  employee?: any;\n  order_product?: any[];\n  order_discount?: any[];\n  payment?: any[];\n}\n\n// Frontend Order interface\nexport interface Order {\n  id: number;\n  employeeId?: number;\n  customerId?: number;\n  totalAmount: number;\n  finalAmount: number;\n  status: string;\n  customizeNote?: string;\n  createdAt: Date;\n  updatedAt: Date;\n  customer?: any;\n  employee?: any;\n  products?: any[];\n  discounts?: any[];\n  payments?: any[];\n}\n\n// Transform function\nexport function transformOrderResponse(backendOrder: BackendOrderResponse): Order {\n  return {\n    id: backendOrder.order_id,\n    employeeId: backendOrder.employee_id,\n    customerId: backendOrder.customer_id,\n    totalAmount: backendOrder.total_amount,\n    finalAmount: backendOrder.final_amount,\n    status: backendOrder.status,\n    customizeNote: backendOrder.customize_note,\n    createdAt: new Date(backendOrder.created_at),\n    updatedAt: new Date(backendOrder.updated_at),\n    customer: backendOrder.customer,\n    employee: backendOrder.employee,\n    products: backendOrder.order_product,\n    discounts: backendOrder.order_discount,\n    payments: backendOrder.payment,\n  };\n}\n\n// Backend pagination response structure\ninterface BackendPaginatedResponse<T> {\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrev: boolean;\n  };\n}\n\n/**\n * Order Service\n * Xử lý API calls liên quan đến orders\n */\nexport class OrderService {\n  private readonly endpoint = \"/orders\";\n\n  /**\n   * Lấy danh sách orders theo employee\n   */\n  async getOrdersByEmployee(\n    employeeId: number,\n    params?: { \n      page?: number; \n      limit?: number;\n    }\n  ): Promise<PaginatedResponse<Order>> {\n    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendOrderResponse>>(\n      `${this.endpoint}/employee/${employeeId}`, \n      params\n    );\n    \n    return {\n      data: backendResponse.data.map(transformOrderResponse),\n      total: backendResponse.pagination.total,\n      page: backendResponse.pagination.page,\n      limit: backendResponse.pagination.limit,\n      totalPages: backendResponse.pagination.totalPages,\n    };\n  }\n\n  /**\n   * Lấy order theo ID\n   */\n  async getById(id: number): Promise<Order> {\n    const backendResponse = await apiClient.get<BackendOrderResponse>(`${this.endpoint}/${id}`);\n    return transformOrderResponse(backendResponse);\n  }\n}\n\n// Export singleton instance\nexport const orderService = new OrderService(); 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/order-service.ts b/frontend/manager/src/lib/services/order-service.ts
--- a/frontend/manager/src/lib/services/order-service.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/services/order-service.ts	(date 1750214678492)
@@ -1,74 +1,11 @@
 import { apiClient } from "@/lib/api-client";
-import { PaginatedResponse } from "@/types/api";
-
-// Order từ backend
-export interface BackendOrderResponse {
-  order_id: number;
-  employee_id?: number;
-  customer_id?: number;
-  total_amount: number;
-  final_amount: number;
-  status: string;
-  customize_note?: string;
-  created_at: string;
-  updated_at: string;
-  customer?: any;
-  employee?: any;
-  order_product?: any[];
-  order_discount?: any[];
-  payment?: any[];
-}
-
-// Frontend Order interface
-export interface Order {
-  id: number;
-  employeeId?: number;
-  customerId?: number;
-  totalAmount: number;
-  finalAmount: number;
-  status: string;
-  customizeNote?: string;
-  createdAt: Date;
-  updatedAt: Date;
-  customer?: any;
-  employee?: any;
-  products?: any[];
-  discounts?: any[];
-  payments?: any[];
-}
-
-// Transform function
-export function transformOrderResponse(backendOrder: BackendOrderResponse): Order {
-  return {
-    id: backendOrder.order_id,
-    employeeId: backendOrder.employee_id,
-    customerId: backendOrder.customer_id,
-    totalAmount: backendOrder.total_amount,
-    finalAmount: backendOrder.final_amount,
-    status: backendOrder.status,
-    customizeNote: backendOrder.customize_note,
-    createdAt: new Date(backendOrder.created_at),
-    updatedAt: new Date(backendOrder.updated_at),
-    customer: backendOrder.customer,
-    employee: backendOrder.employee,
-    products: backendOrder.order_product,
-    discounts: backendOrder.order_discount,
-    payments: backendOrder.payment,
-  };
-}
-
-// Backend pagination response structure
-interface BackendPaginatedResponse<T> {
-  data: T[];
-  pagination: {
-    page: number;
-    limit: number;
-    total: number;
-    totalPages: number;
-    hasNext: boolean;
-    hasPrev: boolean;
-  };
-}
+import { 
+  PaginatedResponse, 
+  BackendPaginatedResponse,
+  Order, 
+  BackendOrderResponse, 
+  transformOrderResponse
+} from "@/types/api";
 
 /**
  * Order Service
@@ -77,6 +14,54 @@
 export class OrderService {
   private readonly endpoint = "/orders";
 
+  /**
+   * Lấy danh sách tất cả orders với pagination và filtering
+   */
+  async getOrders(params?: { 
+    page?: number; 
+    limit?: number;
+    customerId?: number;
+    employeeId?: number;
+    status?: 'PROCESSING' | 'CANCELLED' | 'COMPLETED';
+  }): Promise<PaginatedResponse<Order>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendOrderResponse>>(
+      this.endpoint, 
+      params
+    );
+    
+    return {
+      data: backendResponse.data.map(transformOrderResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
+  /**
+   * Lấy danh sách orders theo trạng thái
+   */
+  async getOrdersByStatus(
+    status: 'PROCESSING' | 'CANCELLED' | 'COMPLETED',
+    params?: { 
+      page?: number; 
+      limit?: number;
+    }
+  ): Promise<PaginatedResponse<Order>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendOrderResponse>>(
+      `${this.endpoint}/status/${status}`, 
+      params
+    );
+    
+    return {
+      data: backendResponse.data.map(transformOrderResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
   /**
    * Lấy danh sách orders theo employee
    */
@@ -102,12 +87,52 @@
   }
 
   /**
-   * Lấy order theo ID
+   * Lấy danh sách orders theo customer
+   */
+  async getOrdersByCustomer(
+    customerId: number,
+    params?: { 
+      page?: number; 
+      limit?: number;
+    }
+  ): Promise<PaginatedResponse<Order>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendOrderResponse>>(
+      `${this.endpoint}/customer/${customerId}`, 
+      params
+    );
+    
+    return {
+      data: backendResponse.data.map(transformOrderResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
+  /**
+   * Lấy order theo ID với đầy đủ thông tin
    */
   async getById(id: number): Promise<Order> {
     const backendResponse = await apiClient.get<BackendOrderResponse>(`${this.endpoint}/${id}`);
     return transformOrderResponse(backendResponse);
   }
+
+  /**
+   * Hủy order
+   */
+  async cancelOrder(id: number): Promise<Order> {
+    const backendResponse = await apiClient.patch<BackendOrderResponse>(`${this.endpoint}/${id}/cancel`);
+    return transformOrderResponse(backendResponse);
+  }
+
+  /**
+   * Xóa order (chỉ Manager)
+   */
+  async deleteOrder(id: number): Promise<Order> {
+    const backendResponse = await apiClient.delete<BackendOrderResponse>(`${this.endpoint}/${id}`);
+    return transformOrderResponse(backendResponse);
+  }
 }
 
 // Export singleton instance
Index: frontend/manager/src/lib/validations/product.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/validations/product.ts b/frontend/manager/src/lib/validations/product.ts
new file mode 100644
--- /dev/null	(date 1750159045994)
+++ b/frontend/manager/src/lib/validations/product.ts	(date 1750159045994)
@@ -0,0 +1,187 @@
+import { z } from "zod";
+
+// Schema cho product price trong create product (có thể tạo size mới hoặc chọn size có sẵn)
+export const createProductPriceItemSchema = z.object({
+  size_id: z
+    .number()
+    .int("ID kích thước phải là số nguyên")
+    .min(1, "ID kích thước phải lớn hơn 0")
+    .optional(),
+  
+  size_data: z.object({
+    name: z
+      .string()
+      .min(1, "Tên kích thước không được để trống")
+      .max(50, "Tên kích thước không được vượt quá 50 ký tự"),
+    unit: z
+      .string()
+      .min(1, "Đơn vị không được để trống")
+      .max(20, "Đơn vị không được vượt quá 20 ký tự"),
+    quantity: z
+      .number()
+      .int("Số lượng phải là số nguyên")
+      .min(1, "Số lượng phải lớn hơn 0"),
+    description: z
+      .string()
+      .max(255, "Mô tả không được vượt quá 255 ký tự")
+      .optional(),
+  }).optional(),
+  
+  price: z
+    .number()
+    .int("Giá phải là số nguyên")
+    .min(0, "Giá phải lớn hơn hoặc bằng 0")
+    .max(999999999, "Giá không được vượt quá 999,999,999"),
+  
+  is_active: z
+    .boolean()
+    .default(true),
+}).refine(
+  (data) => {
+    // Phải có size_id HOẶC size_data, không được có cả hai hoặc không có gì
+    const hasSize = Boolean(data.size_id);
+    const hasSizeData = Boolean(data.size_data);
+    return hasSize !== hasSizeData; // XOR: chỉ một trong hai
+  },
+  {
+    message: "Phải chọn kích thước có sẵn HOẶC tạo kích thước mới, không được có cả hai",
+  }
+);
+
+// Schema cho tạo product mới (match với backend CreateProductDto)
+export const createProductSchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên sản phẩm không được để trống")
+    .max(50, "Tên sản phẩm không được vượt quá 50 ký tự"),
+  
+  description: z
+    .string()
+    .max(255, "Mô tả không được vượt quá 255 ký tự")
+    .optional(),
+  
+  is_signature: z
+    .boolean()
+    .default(false),
+  
+  image_path: z
+    .string()
+    .max(255, "Đường dẫn hình ảnh không được vượt quá 255 ký tự")
+    .optional(),
+  
+  category_id: z
+    .number()
+    .int("ID danh mục phải là số nguyên")
+    .min(1, "ID danh mục phải lớn hơn 0"),
+  
+  prices: z
+    .array(createProductPriceItemSchema)
+    .min(1, "Sản phẩm phải có ít nhất một giá"),
+});
+
+// Schema cho cập nhật product (UpdateProductDto)
+export const updateProductSchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên sản phẩm không được để trống")
+    .max(50, "Tên sản phẩm không được vượt quá 50 ký tự")
+    .optional(),
+  
+  description: z
+    .string()
+    .max(255, "Mô tả không được vượt quá 255 ký tự")
+    .optional(),
+  
+  is_signature: z
+    .boolean()
+    .optional(),
+  
+  image_path: z
+    .string()
+    .max(255, "Đường dẫn hình ảnh không được vượt quá 255 ký tự")
+    .optional(),
+  
+  category_id: z
+    .number()
+    .int("ID danh mục phải là số nguyên")
+    .min(1, "ID danh mục phải lớn hơn 0")
+    .optional(),
+});
+
+// Schema cho tạo giá sản phẩm mới (CreateProductPriceDto - chỉ với size có sẵn)
+export const createProductPriceSchema = z.object({
+  product_id: z
+    .number()
+    .int("ID sản phẩm phải là số nguyên")
+    .min(1, "ID sản phẩm phải lớn hơn 0"),
+  
+  size_id: z
+    .number()
+    .int("ID kích thước phải là số nguyên")
+    .min(1, "Vui lòng chọn kích thước"),
+  
+  price: z
+    .number()
+    .int("Giá phải là số nguyên")
+    .min(1000, "Giá phải ít nhất 1,000 VNĐ")
+    .max(10000000, "Giá không được vượt quá 10,000,000 VNĐ"),
+  
+  is_active: z
+    .boolean(),
+});
+
+// Schema cho cập nhật giá sản phẩm (UpdateProductPriceDto)
+export const updateProductPriceSchema = z.object({
+  price: z
+    .number()
+    .int("Giá phải là số nguyên")
+    .min(1000, "Giá phải ít nhất 1,000 VNĐ")
+    .max(10000000, "Giá không được vượt quá 10,000,000 VNĐ"),
+  
+  is_active: z
+    .boolean(),
+});
+
+// Schema cho bulk delete
+export const bulkDeleteProductSchema = z.object({
+  ids: z
+    .array(z.number())
+    .min(1, "Phải chọn ít nhất một sản phẩm để xóa"),
+});
+
+// Types được suy ra từ schemas
+export type CreateProductPriceItemFormData = z.infer<typeof createProductPriceItemSchema>;
+export type CreateProductFormData = z.infer<typeof createProductSchema>;
+export type UpdateProductFormData = z.infer<typeof updateProductSchema>;
+export type CreateProductPriceFormData = z.infer<typeof createProductPriceSchema>;
+export type UpdateProductPriceFormData = z.infer<typeof updateProductPriceSchema>;
+export type BulkDeleteProductFormData = z.infer<typeof bulkDeleteProductSchema>;
+
+// Transform functions để convert form data sang DTO backend
+export function transformCreateProductFormData(formData: CreateProductFormData) {
+  return {
+    name: formData.name,
+    description: formData.description,
+    is_signature: formData.is_signature,
+    image_path: formData.image_path,
+    category_id: formData.category_id,
+    prices: formData.prices.map(price => ({
+      size_id: price.size_id,
+      size_data: price.size_data,
+      price: price.price,
+      is_active: price.is_active,
+    })),
+  };
+}
+
+export function transformUpdateProductFormData(formData: UpdateProductFormData) {
+  const result: Record<string, unknown> = {};
+  
+  if (formData.name !== undefined) result.name = formData.name;
+  if (formData.description !== undefined) result.description = formData.description;
+  if (formData.is_signature !== undefined) result.is_signature = formData.is_signature;
+  if (formData.image_path !== undefined) result.image_path = formData.image_path;
+  if (formData.category_id !== undefined) result.category_id = formData.category_id;
+  
+  return result;
+} 
\ No newline at end of file
Index: frontend/manager/src/components/forms/create-category-dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-category-dialog.tsx b/frontend/manager/src/components/forms/create-category-dialog.tsx
new file mode 100644
--- /dev/null	(date 1750127272736)
+++ b/frontend/manager/src/components/forms/create-category-dialog.tsx	(date 1750127272736)
@@ -0,0 +1,138 @@
+"use client";
+
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { Loader2 } from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogFooter,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { createCategorySchema, CreateCategoryFormData } from "@/lib/validations/category";
+
+interface CreateCategoryDialogProps {
+  open: boolean;
+  onOpenChange: (open: boolean) => void;
+  onSubmit: (data: CreateCategoryFormData) => Promise<void>;
+  isSubmitting: boolean;
+}
+
+export function CreateCategoryDialog({
+  open,
+  onOpenChange,
+  onSubmit,
+  isSubmitting,
+}: CreateCategoryDialogProps) {
+  const form = useForm<CreateCategoryFormData>({
+    resolver: zodResolver(createCategorySchema),
+    defaultValues: {
+      name: "",
+      description: "",
+    },
+  });
+
+  const handleSubmit = async (data: CreateCategoryFormData) => {
+    try {
+      await onSubmit(data);
+      form.reset();
+    } catch {
+      // Error is handled by parent component
+    }
+  };
+
+  const handleCancel = () => {
+    form.reset();
+    onOpenChange(false);
+  };
+
+  return (
+    <Dialog open={open} onOpenChange={onOpenChange}>
+      <DialogContent className="max-w-md">
+        <DialogHeader>
+          <DialogTitle>Thêm Danh Mục Mới</DialogTitle>
+          <DialogDescription>
+            Điền thông tin để tạo danh mục sản phẩm mới
+          </DialogDescription>
+        </DialogHeader>
+
+        <Form {...form}>
+          <form onSubmit={form.handleSubmit(handleSubmit)} className="space-y-4">
+            <FormField
+              control={form.control}
+              name="name"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>
+                    Tên Danh Mục <span className="text-red-500">*</span>
+                  </FormLabel>
+                  <FormControl>
+                    <Input 
+                      placeholder="Ví dụ: Bánh kem, Bánh ngọt..." 
+                      {...field} 
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            <FormField
+              control={form.control}
+              name="description"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Mô Tả</FormLabel>
+                  <FormControl>
+                    <Textarea 
+                      placeholder="Mô tả về danh mục này..."
+                      className="resize-none"
+                      rows={3}
+                      {...field} 
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            <DialogFooter>
+              <Button 
+                type="button" 
+                variant="outline" 
+                onClick={handleCancel}
+                disabled={isSubmitting}
+              >
+                Hủy
+              </Button>
+              <Button type="submit" disabled={isSubmitting}>
+                {isSubmitting ? (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                    Đang tạo...
+                  </>
+                ) : (
+                  "Tạo Danh Mục"
+                )}
+              </Button>
+            </DialogFooter>
+          </form>
+        </Form>
+      </DialogContent>
+    </Dialog>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/profile/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/profile/layout.tsx b/frontend/manager/src/app/profile/layout.tsx
new file mode 100644
--- /dev/null	(date 1750227652373)
+++ b/frontend/manager/src/app/profile/layout.tsx	(date 1750227652373)
@@ -0,0 +1,9 @@
+import { MainLayout } from "@/components/layout/main-layout";
+
+export default function ProfileLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return <MainLayout>{children}</MainLayout>;
+} 
\ No newline at end of file
Index: frontend/pos/src/types/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/src/types/index.ts b/frontend/pos/src/types/index.ts
new file mode 100644
--- /dev/null	(date 1750227145066)
+++ b/frontend/pos/src/types/index.ts	(date 1750227145066)
@@ -0,0 +1,53 @@
+// Re-export API types
+export * from './api';
+
+// Re-export auth types  
+export * from './auth';
+
+// Cart types for POS
+export interface CartItem {
+  product_price_id: number;
+  product: {
+    product_id: number;
+    name: string;
+    image_path?: string;
+  };
+  product_size: {
+    size_id: number;
+    name: string;
+    unit: string;
+  };
+  price: number;
+  quantity: number;
+  total: number;
+}
+
+// Customer types for POS
+export interface POSCustomer {
+  customer_id: number;
+  first_name?: string;
+  last_name?: string;
+  phone: string;
+  current_points?: number;
+  membership_type?: {
+    type: string;
+    discount_value: number;
+  };
+}
+
+// Order types for POS
+export interface CreateOrderRequest {
+  customer_id?: number;
+  items: {
+    product_price_id: number;
+    quantity: number;
+    option?: string;
+  }[];
+  customize_note?: string;
+}
+
+// UI State types
+export interface FormState {
+  isLoading: boolean;
+  error: string | null;
+} 
\ No newline at end of file
Index: frontend/manager/src/app/products/categories/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/categories/page.tsx b/frontend/manager/src/app/products/categories/page.tsx
new file mode 100644
--- /dev/null	(date 1750141426473)
+++ b/frontend/manager/src/app/products/categories/page.tsx	(date 1750141426473)
@@ -0,0 +1,401 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useRouter } from "next/navigation";
+import { Plus, MoreHorizontal, Trash2, Eye, ArrowUpDown, Loader2, X } from "lucide-react";
+import { ColumnDef } from "@tanstack/react-table";
+import { toast } from "sonner";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent } from "@/components/ui/card";
+import { Checkbox } from "@/components/ui/checkbox";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import { Badge } from "@/components/ui/badge";
+import { DataTable } from "@/components/ui/data-table";
+import { CreateCategoryDialog } from "@/components/forms/create-category-dialog";
+import { Category } from "@/types/api";
+import { CreateCategoryFormData } from "@/lib/validations/category";
+import { useCategoriesStore } from "@/stores/categories";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "2-digit", 
+    day: "2-digit",
+  }).format(date);
+}
+
+export default function CategoriesPage() {
+  const router = useRouter();
+  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);
+  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
+  const [isBulkDeleteDialogOpen, setIsBulkDeleteDialogOpen] = useState(false);
+  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null);
+  const [selectedCategories, setSelectedCategories] = useState<number[]>([]);
+
+  const {
+    categories,
+    isLoading,
+    isCreating,
+    isDeleting,
+    fetchCategories,
+    createCategory,
+    deleteCategory,
+    bulkDeleteCategories,
+  } = useCategoriesStore();
+
+  useEffect(() => {
+    fetchCategories();
+  }, [fetchCategories]);
+
+  const handleCreateCategory = async (data: CreateCategoryFormData) => {
+    try {
+      await createCategory(data);
+      setIsCreateDialogOpen(false);
+      toast.success("Tạo danh mục thành công!");
+    } catch (error) {
+      console.error("Lỗi tạo danh mục:", error);
+      toast.error("Không thể tạo danh mục. Vui lòng thử lại.");
+    }
+  };
+
+  const handleDeleteCategory = async () => {
+    if (!selectedCategory) return;
+    
+    try {
+      await deleteCategory(selectedCategory.id);
+      setIsDeleteDialogOpen(false);
+      setSelectedCategory(null);
+      toast.success("Xóa danh mục thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa danh mục:", error);
+      toast.error("Không thể xóa danh mục. Vui lòng thử lại.");
+    }
+  };
+
+  const handleBulkDelete = async () => {
+    if (selectedCategories.length === 0) return;
+    
+    try {
+      const result = await bulkDeleteCategories({ ids: selectedCategories });
+      setIsBulkDeleteDialogOpen(false);
+      setSelectedCategories([]);
+      
+      if (result.summary.failed > 0) {
+        toast.warning(`Xóa thành công ${result.summary.success} danh mục. ${result.summary.failed} danh mục không thể xóa.`);
+      } else {
+        toast.success(`Xóa thành công ${result.summary.success} danh mục!`);
+      }
+    } catch (error) {
+      console.error("Lỗi xóa nhiều danh mục:", error);
+      toast.error("Không thể xóa các danh mục đã chọn. Vui lòng thử lại.");
+    }
+  };
+
+  const openDeleteDialog = (category: Category) => {
+    setSelectedCategory(category);
+    setIsDeleteDialogOpen(true);
+  };
+
+  const openBulkDeleteDialog = () => {
+    setIsBulkDeleteDialogOpen(true);
+  };
+
+  const handleSelectCategory = (categoryId: number, selected: boolean) => {
+    if (selected) {
+      setSelectedCategories([...selectedCategories, categoryId]);
+    } else {
+      setSelectedCategories(selectedCategories.filter(id => id !== categoryId));
+    }
+  };
+
+  const handleSelectAll = (selected: boolean) => {
+    if (selected) {
+      setSelectedCategories(categories.map(c => c.id));
+    } else {
+      setSelectedCategories([]);
+    }
+  };
+
+  const clearSelection = () => {
+    setSelectedCategories([]);
+  };
+
+  const columns: ColumnDef<Category>[] = [
+    {
+      id: "select",
+      header: ({ table }) => (
+        <Checkbox
+          checked={table.getIsAllPageRowsSelected()}
+          onCheckedChange={(value) => {
+            table.toggleAllPageRowsSelected(!!value);
+            handleSelectAll(!!value);
+          }}
+          aria-label="Chọn tất cả"
+        />
+      ),
+      cell: ({ row }) => (
+        <Checkbox
+          checked={selectedCategories.includes(row.original.id)}
+          onCheckedChange={(value) => {
+            row.toggleSelected(!!value);
+            handleSelectCategory(row.original.id, !!value);
+          }}
+          aria-label="Chọn hàng"
+        />
+      ),
+      enableSorting: false,
+      enableHiding: false,
+    },
+    {
+      accessorKey: "name",
+      header: ({ column }) => {
+        return (
+          <Button
+            variant="ghost"
+            onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}
+          >
+            Tên Danh Mục
+            <ArrowUpDown className="ml-2 h-4 w-4" />
+          </Button>
+        );
+      },
+      cell: ({ row }) => {
+        const category = row.original;
+        return (
+          <div className="flex items-center gap-3">
+            <div>
+              <div className="font-medium">{category.name}</div>
+              <div className="text-sm text-muted-foreground">ID: {category.id}</div>
+            </div>
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "description",
+      header: "Mô Tả",
+      cell: ({ row }) => {
+        const description = row.getValue("description") as string;
+        return (
+          <div className="max-w-[300px] truncate">
+            {description || <span className="text-muted-foreground">Không có mô tả</span>}
+          </div>
+        );
+      },
+    },
+    {
+      accessorKey: "isActive",
+      header: "Trạng Thái",
+      cell: ({ row }) => {
+        const isActive = row.getValue("isActive") as boolean;
+        return (
+          <Badge variant={isActive ? "default" : "secondary"}>
+            {isActive ? "Hoạt Động" : "Vô Hiệu Hóa"}
+          </Badge>
+        );
+      },
+    },
+    {
+      accessorKey: "createdAt",
+      header: ({ column }) => {
+        return (
+          <Button
+            variant="ghost"
+            onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}
+          >
+            Ngày Tạo
+            <ArrowUpDown className="ml-2 h-4 w-4" />
+          </Button>
+        );
+      },
+      cell: ({ row }) => {
+        const date = row.getValue("createdAt") as Date;
+        return formatDate(date);
+      },
+    },
+    {
+      id: "actions",
+      header: "Thao Tác",
+      cell: ({ row }) => {
+        const category = row.original;
+        
+        return (
+          <DropdownMenu>
+            <DropdownMenuTrigger asChild>
+              <Button variant="ghost" size="icon">
+                <MoreHorizontal className="h-4 w-4" />
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem onClick={() => router.push(`/products/categories/${category.id}`)}>
+                <Eye className="mr-2 h-4 w-4" />
+                Xem Chi Tiết
+              </DropdownMenuItem>
+              <DropdownMenuItem 
+                className="text-destructive"
+                onClick={() => openDeleteDialog(category)}
+              >
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
+        );
+      },
+    },
+  ];
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Danh Mục Sản Phẩm</h1>
+          <p className="text-muted-foreground">
+            Quản lý danh mục và phân loại sản phẩm
+          </p>
+        </div>
+        <Button onClick={() => setIsCreateDialogOpen(true)}>
+          <Plus className="mr-2 h-4 w-4" />
+          Thêm Danh Mục
+        </Button>
+      </div>
+
+      {/* Bulk Actions Toolbar */}
+      {selectedCategories.length > 0 && (
+        <Card className="p-4">
+          <div className="flex items-center justify-between">
+            <div className="flex items-center space-x-2">
+              <span className="text-sm text-muted-foreground">
+                Đã chọn {selectedCategories.length} danh mục
+              </span>
+              <Button
+                variant="ghost"
+                size="sm"
+                onClick={clearSelection}
+              >
+                <X className="h-4 w-4 mr-1" />
+                Bỏ chọn
+              </Button>
+            </div>
+            <div className="flex items-center space-x-2">
+              <Button
+                variant="destructive"
+                size="sm"
+                onClick={openBulkDeleteDialog}
+                disabled={isDeleting}
+              >
+                <Trash2 className="h-4 w-4 mr-2" />
+                Xóa đã chọn
+              </Button>
+            </div>
+          </div>
+        </Card>
+      )}
+
+      {/* Categories Data Table */}
+      <Card>
+        <CardContent className="p-0">
+          <DataTable 
+            columns={columns} 
+            data={categories}
+            searchKey="name"
+            searchPlaceholder="Tìm kiếm theo tên danh mục..."
+          />
+        </CardContent>
+      </Card>
+
+      {/* Create Category Dialog */}
+      <CreateCategoryDialog
+        open={isCreateDialogOpen}
+        onOpenChange={setIsCreateDialogOpen}
+        onSubmit={handleCreateCategory}
+        isSubmitting={isCreating}
+      />
+
+      {/* Delete Confirmation Dialog */}
+      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa danh mục <strong>{selectedCategory?.name}</strong>? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleDeleteCategory}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+
+      {/* Bulk Delete Confirmation Dialog */}
+      <AlertDialog open={isBulkDeleteDialogOpen} onOpenChange={setIsBulkDeleteDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa nhiều danh mục</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa {selectedCategories.length} danh mục đã chọn? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleBulkDelete}
+              disabled={isDeleting}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeleting ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                `Xóa ${selectedCategories.length} danh mục`
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/.cursorignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.cursorignore b/frontend/pos/.cursorignore
new file mode 100644
--- /dev/null	(date 1750217997633)
+++ b/frontend/pos/.cursorignore	(date 1750217997633)
@@ -0,0 +1,1 @@
+!.env.development
\ No newline at end of file
Index: frontend/manager/src/components/forms/create-product-dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-product-dialog.tsx b/frontend/manager/src/components/forms/create-product-dialog.tsx
new file mode 100644
--- /dev/null	(date 1750164100702)
+++ b/frontend/manager/src/components/forms/create-product-dialog.tsx	(date 1750164100702)
@@ -0,0 +1,271 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { Loader2 } from "lucide-react";
+import { z } from "zod";
+
+import { Button } from "@/components/ui/button";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { Switch } from "@/components/ui/switch";
+import {
+  Select,
+  SelectContent,
+  SelectItem,
+  SelectTrigger,
+  SelectValue,
+} from "@/components/ui/select";
+import { useCategoriesStore } from "@/stores/categories";
+
+// Schema đơn giản cho dialog tạo sản phẩm (không cần prices)
+const createProductDialogSchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên sản phẩm không được để trống")
+    .max(50, "Tên sản phẩm không được vượt quá 50 ký tự"),
+  
+  description: z
+    .string()
+    .max(255, "Mô tả không được vượt quá 255 ký tự")
+    .optional(),
+  
+  is_signature: z
+    .boolean(),
+  
+  image_path: z
+    .string()
+    .max(255, "Đường dẫn hình ảnh không được vượt quá 255 ký tự")
+    .optional(),
+  
+  category_id: z
+    .number()
+    .int("ID danh mục phải là số nguyên")
+    .min(1, "Vui lòng chọn danh mục"),
+});
+
+type CreateProductDialogFormData = z.infer<typeof createProductDialogSchema>;
+
+interface CreateProductDialogProps {
+  open: boolean;
+  onOpenChange: (open: boolean) => void;
+  onSubmit: (data: CreateProductDialogFormData) => Promise<void>;
+  isSubmitting: boolean;
+}
+
+export function CreateProductDialog({
+  open,
+  onOpenChange,
+  onSubmit,
+  isSubmitting,
+}: CreateProductDialogProps) {
+  const { categories, fetchCategories } = useCategoriesStore();
+
+  const form = useForm<CreateProductDialogFormData>({
+    resolver: zodResolver(createProductDialogSchema),
+    defaultValues: {
+      name: "",
+      description: "",
+      image_path: "",
+      category_id: 0,
+      is_signature: false,
+    },
+  });
+
+  useEffect(() => {
+    if (open) {
+      fetchCategories();
+      form.reset();
+    }
+  }, [open, fetchCategories, form]);
+
+  const handleSubmit = async (data: CreateProductDialogFormData) => {
+    try {
+      await onSubmit(data);
+      form.reset();
+    } catch (error) {
+      console.error("Lỗi tạo sản phẩm:", error);
+    }
+  };
+
+  const handleCancel = () => {
+    form.reset();
+    onOpenChange(false);
+  };
+
+  return (
+    <Dialog open={open} onOpenChange={onOpenChange}>
+      <DialogContent className="max-w-2xl">
+        <DialogHeader>
+          <DialogTitle>Thêm Sản Phẩm Mới</DialogTitle>
+          <DialogDescription>
+            Điền thông tin để tạo sản phẩm mới. Bạn sẽ cần thêm ít nhất một giá cho sản phẩm.
+          </DialogDescription>
+        </DialogHeader>
+
+        <Form {...form}>
+          <form onSubmit={form.handleSubmit(handleSubmit)} className="space-y-6">
+            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+              {/* Tên sản phẩm */}
+              <FormField
+                control={form.control}
+                name="name"
+                render={({ field }) => (
+                  <FormItem>
+                    <FormLabel>Tên Sản Phẩm *</FormLabel>
+                    <FormControl>
+                      <Input 
+                        placeholder="Nhập tên sản phẩm" 
+                        {...field} 
+                        disabled={isSubmitting}
+                      />
+                    </FormControl>
+                    <FormMessage />
+                  </FormItem>
+                )}
+              />
+
+              {/* Danh mục */}
+              <FormField
+                control={form.control}
+                name="category_id"
+                render={({ field }) => (
+                  <FormItem>
+                    <FormLabel>Danh Mục *</FormLabel>
+                    <Select 
+                      onValueChange={(value) => field.onChange(parseInt(value))} 
+                      disabled={isSubmitting}
+                    >
+                      <FormControl>
+                        <SelectTrigger>
+                          <SelectValue placeholder="Chọn danh mục" />
+                        </SelectTrigger>
+                      </FormControl>
+                      <SelectContent>
+                        {categories.map((category) => (
+                          <SelectItem key={category.id} value={category.id.toString()}>
+                            {category.name}
+                          </SelectItem>
+                        ))}
+                      </SelectContent>
+                    </Select>
+                    <FormMessage />
+                  </FormItem>
+                )}
+              />
+            </div>
+
+            {/* Mô tả */}
+            <FormField
+              control={form.control}
+              name="description"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Mô Tả</FormLabel>
+                  <FormControl>
+                    <Textarea
+                      placeholder="Nhập mô tả sản phẩm"
+                      className="min-h-[100px]"
+                      {...field}
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Đường dẫn hình ảnh */}
+            <FormField
+              control={form.control}
+              name="image_path"
+              render={({ field }) => (
+                <FormItem>
+                  <FormLabel>Đường Dẫn Hình Ảnh</FormLabel>
+                  <FormControl>
+                    <Input 
+                      placeholder="https://example.com/image.jpg" 
+                      {...field} 
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                  <FormMessage />
+                </FormItem>
+              )}
+            />
+
+            {/* Sản phẩm đặc trưng */}
+            <FormField
+              control={form.control}
+              name="is_signature"
+              render={({ field }) => (
+                <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
+                  <div className="space-y-0.5">
+                    <FormLabel className="text-base">
+                      Sản Phẩm Đặc Trưng
+                    </FormLabel>
+                    <div className="text-sm text-muted-foreground">
+                      Đánh dấu sản phẩm này là đặc trưng của cửa hàng
+                    </div>
+                  </div>
+                  <FormControl>
+                    <Switch
+                      checked={field.value}
+                      onCheckedChange={field.onChange}
+                      disabled={isSubmitting}
+                    />
+                  </FormControl>
+                </FormItem>
+              )}
+            />
+
+            <div className="bg-muted/50 p-4 rounded-lg">
+              <p className="text-sm text-muted-foreground">
+                <strong>Lưu ý:</strong> Sau khi tạo sản phẩm, bạn cần thêm giá cho các kích thước khác nhau 
+                trong trang chi tiết sản phẩm.
+              </p>
+            </div>
+
+            {/* Action buttons */}
+            <div className="flex justify-end space-x-2">
+              <Button
+                type="button"
+                variant="outline"
+                onClick={handleCancel}
+                disabled={isSubmitting}
+              >
+                Hủy
+              </Button>
+              <Button type="submit" disabled={isSubmitting}>
+                {isSubmitting ? (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                    Đang tạo...
+                  </>
+                ) : (
+                  "Tạo Sản Phẩm"
+                )}
+              </Button>
+            </div>
+          </form>
+        </Form>
+      </DialogContent>
+    </Dialog>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/store-info/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/store-info/layout.tsx b/frontend/manager/src/app/store-info/layout.tsx
new file mode 100644
--- /dev/null	(date 1750227641447)
+++ b/frontend/manager/src/app/store-info/layout.tsx	(date 1750227641447)
@@ -0,0 +1,9 @@
+import { MainLayout } from "@/components/layout/main-layout";
+
+export default function StoreInfoLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return <MainLayout>{children}</MainLayout>;
+} 
\ No newline at end of file
Index: frontend/manager/src/app/store-info/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/store-info/page.tsx b/frontend/manager/src/app/store-info/page.tsx
new file mode 100644
--- /dev/null	(date 1750227602414)
+++ b/frontend/manager/src/app/store-info/page.tsx	(date 1750227602414)
@@ -0,0 +1,498 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { z } from "zod";
+import { toast } from "sonner";
+import { 
+  Store as StoreIcon, 
+  MapPin, 
+  Phone, 
+  Mail, 
+  Clock, 
+  Calendar,
+  FileText,
+  Save, 
+  X, 
+  Edit,
+  Loader2 
+} from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { Input } from "@/components/ui/input";
+import { Label } from "@/components/ui/label";
+import { Textarea } from "@/components/ui/textarea";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { useStoreStore } from "@/stores/store";
+import { UpdateStoreDto } from "@/types/api";
+
+// Validation schema
+const storeInfoSchema = z.object({
+  name: z.string().min(1, "Tên cửa hàng không được để trống"),
+  address: z.string().min(1, "Địa chỉ không được để trống"),
+  phone: z.string().min(10, "Số điện thoại không hợp lệ"),
+  email: z.string().email("Email không hợp lệ"),
+  opening_time: z.string().regex(/^([01]\d|2[0-3]):([0-5]\d)(:([0-5]\d))?$/, "Định dạng thời gian không hợp lệ (HH:mm)"),
+  closing_time: z.string().regex(/^([01]\d|2[0-3]):([0-5]\d)(:([0-5]\d))?$/, "Định dạng thời gian không hợp lệ (HH:mm)"),
+  opening_date: z.string().regex(/^\d{4}-\d{2}-\d{2}$/, "Định dạng ngày không hợp lệ (YYYY-MM-DD)"),
+  tax_code: z.string().min(1, "Mã số thuế không được để trống"),
+});
+
+type StoreInfoFormData = z.infer<typeof storeInfoSchema>;
+
+export default function StoreInfoPage() {
+  const [isEditing, setIsEditing] = useState(false);
+
+  const {
+    defaultStore,
+    isLoading,
+    isUpdating,
+    error,
+    fetchDefaultStore,
+    updateStore,
+    clearError,
+  } = useStoreStore();
+
+  const form = useForm<StoreInfoFormData>({
+    resolver: zodResolver(storeInfoSchema),
+    defaultValues: {
+      name: "",
+      address: "",
+      phone: "",
+      email: "",
+      opening_time: "",
+      closing_time: "",
+      opening_date: "",
+      tax_code: "",
+    },
+  });
+
+  useEffect(() => {
+    fetchDefaultStore();
+  }, [fetchDefaultStore]);
+
+  useEffect(() => {
+    if (defaultStore) {
+      form.reset({
+        name: defaultStore.name,
+        address: defaultStore.address,
+        phone: defaultStore.phone,
+        email: defaultStore.email,
+        opening_time: defaultStore.openingTime,
+        closing_time: defaultStore.closingTime,
+        opening_date: defaultStore.openingDate.toISOString().split('T')[0],
+        tax_code: defaultStore.taxCode,
+      });
+    }
+  }, [defaultStore, form]);
+
+  useEffect(() => {
+    if (error) {
+      toast.error(error);
+      clearError();
+    }
+  }, [error, clearError]);
+
+  const handleUpdate = async (data: StoreInfoFormData) => {
+    if (!defaultStore) return;
+
+    try {
+      const updateData: UpdateStoreDto = {
+        name: data.name,
+        address: data.address,
+        phone: data.phone,
+        email: data.email,
+        opening_time: data.opening_time,
+        closing_time: data.closing_time,
+        opening_date: data.opening_date,
+        tax_code: data.tax_code,
+      };
+
+      await updateStore(defaultStore.id, updateData);
+      toast.success("Cập nhật thông tin cửa hàng thành công!");
+      setIsEditing(false);
+    } catch (error) {
+      console.error("Lỗi cập nhật thông tin cửa hàng:", error);
+    }
+  };
+
+  const cancelEdit = () => {
+    setIsEditing(false);
+    if (defaultStore) {
+      form.reset({
+        name: defaultStore.name,
+        address: defaultStore.address,
+        phone: defaultStore.phone,
+        email: defaultStore.email,
+        opening_time: defaultStore.openingTime,
+        closing_time: defaultStore.closingTime,
+        opening_date: defaultStore.openingDate.toISOString().split('T')[0],
+        tax_code: defaultStore.taxCode,
+      });
+    }
+  };
+
+  const formatTime = (timeString: string) => {
+    try {
+      return new Date(`1970-01-01T${timeString}`).toLocaleTimeString('vi-VN', {
+        hour: '2-digit',
+        minute: '2-digit',
+      });
+    } catch {
+      return timeString;
+    }
+  };
+
+  const formatDate = (date: Date) => {
+    return new Intl.DateTimeFormat("vi-VN", {
+      year: "numeric",
+      month: "long",
+      day: "numeric",
+    }).format(date);
+  };
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  if (!defaultStore) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <p className="text-muted-foreground">Không thể tải thông tin cửa hàng</p>
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Thông Tin Cửa Hàng</h1>
+          <p className="text-muted-foreground">
+            Quản lý thông tin chi tiết của cửa hàng
+          </p>
+        </div>
+        {!isEditing && (
+          <Button onClick={() => setIsEditing(true)}>
+            <Edit className="h-4 w-4 mr-2" />
+            Chỉnh Sửa
+          </Button>
+        )}
+      </div>
+
+      <div className="grid gap-6 md:grid-cols-2">
+        {/* Store Overview */}
+        <Card className="md:col-span-2">
+          <CardHeader>
+            <CardTitle className="flex items-center gap-2">
+              <StoreIcon className="h-5 w-5" />
+              Tổng Quan Cửa Hàng
+            </CardTitle>
+          </CardHeader>
+          <CardContent>
+            <div className="grid gap-4 md:grid-cols-3">
+              <div className="flex items-center gap-3">
+                <div className="flex h-10 w-10 items-center justify-center rounded-lg bg-primary/10">
+                  <StoreIcon className="h-5 w-5 text-primary" />
+                </div>
+                <div>
+                  <p className="text-sm font-medium">Tên Cửa Hàng</p>
+                  <p className="text-lg font-semibold">{defaultStore.name}</p>
+                </div>
+              </div>
+              <div className="flex items-center gap-3">
+                <div className="flex h-10 w-10 items-center justify-center rounded-lg bg-primary/10">
+                  <Calendar className="h-5 w-5 text-primary" />
+                </div>
+                <div>
+                  <p className="text-sm font-medium">Ngày Khai Trương</p>
+                  <p className="text-lg font-semibold">{formatDate(defaultStore.openingDate)}</p>
+                </div>
+              </div>
+              <div className="flex items-center gap-3">
+                <div className="flex h-10 w-10 items-center justify-center rounded-lg bg-primary/10">
+                  <Clock className="h-5 w-5 text-primary" />
+                </div>
+                <div>
+                  <p className="text-sm font-medium">Giờ Hoạt Động</p>
+                  <p className="text-lg font-semibold">
+                    {formatTime(defaultStore.openingTime)} - {formatTime(defaultStore.closingTime)}
+                  </p>
+                </div>
+              </div>
+            </div>
+          </CardContent>
+        </Card>
+
+        {/* Store Information Form/Display */}
+        <Card className="md:col-span-2">
+          <CardHeader>
+            <CardTitle className="flex items-center gap-2">
+              <FileText className="h-5 w-5" />
+              Thông Tin Chi Tiết
+            </CardTitle>
+          </CardHeader>
+          <CardContent>
+            {isEditing ? (
+              <Form {...form}>
+                <form onSubmit={form.handleSubmit(handleUpdate)} className="space-y-6">
+                  <div className="grid gap-4 md:grid-cols-2">
+                    <FormField
+                      control={form.control}
+                      name="name"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Tên Cửa Hàng</FormLabel>
+                          <FormControl>
+                            <Input {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                    
+                    <FormField
+                      control={form.control}
+                      name="tax_code"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Mã Số Thuế</FormLabel>
+                          <FormControl>
+                            <Input {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                  </div>
+
+                  <FormField
+                    control={form.control}
+                    name="address"
+                    render={({ field }) => (
+                      <FormItem>
+                        <FormLabel>Địa Chỉ</FormLabel>
+                        <FormControl>
+                          <Textarea {...field} rows={3} />
+                        </FormControl>
+                        <FormMessage />
+                      </FormItem>
+                    )}
+                  />
+
+                  <div className="grid gap-4 md:grid-cols-2">
+                    <FormField
+                      control={form.control}
+                      name="phone"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Số Điện Thoại</FormLabel>
+                          <FormControl>
+                            <Input {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                    
+                    <FormField
+                      control={form.control}
+                      name="email"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Email</FormLabel>
+                          <FormControl>
+                            <Input type="email" {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                  </div>
+
+                  <div className="grid gap-4 md:grid-cols-3">
+                    <FormField
+                      control={form.control}
+                      name="opening_time"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Giờ Mở Cửa</FormLabel>
+                          <FormControl>
+                            <Input 
+                              type="time" 
+                              {...field} 
+                              placeholder="HH:mm"
+                            />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                    
+                    <FormField
+                      control={form.control}
+                      name="closing_time"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Giờ Đóng Cửa</FormLabel>
+                          <FormControl>
+                            <Input 
+                              type="time" 
+                              {...field} 
+                              placeholder="HH:mm"
+                            />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                    
+                    <FormField
+                      control={form.control}
+                      name="opening_date"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Ngày Khai Trương</FormLabel>
+                          <FormControl>
+                            <Input type="date" {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                  </div>
+
+                  <div className="flex gap-2">
+                    <Button 
+                      type="submit" 
+                      disabled={isUpdating}
+                    >
+                      {isUpdating ? (
+                        <>
+                          <Loader2 className="h-4 w-4 mr-2 animate-spin" />
+                          Đang lưu...
+                        </>
+                      ) : (
+                        <>
+                          <Save className="h-4 w-4 mr-2" />
+                          Lưu Thay Đổi
+                        </>
+                      )}
+                    </Button>
+                    <Button 
+                      type="button" 
+                      variant="outline"
+                      onClick={cancelEdit}
+                      disabled={isUpdating}
+                    >
+                      <X className="h-4 w-4 mr-2" />
+                      Hủy
+                    </Button>
+                  </div>
+                </form>
+              </Form>
+            ) : (
+              <div className="space-y-6">
+                <div className="grid gap-4 md:grid-cols-2">
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <StoreIcon className="h-4 w-4" />
+                      Tên Cửa Hàng
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {defaultStore.name}
+                    </p>
+                  </div>
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <FileText className="h-4 w-4" />
+                      Mã Số Thuế
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {defaultStore.taxCode}
+                    </p>
+                  </div>
+                </div>
+
+                <div>
+                  <Label className="text-sm font-medium flex items-center gap-2">
+                    <MapPin className="h-4 w-4" />
+                    Địa Chỉ
+                  </Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    {defaultStore.address}
+                  </p>
+                </div>
+
+                <div className="grid gap-4 md:grid-cols-2">
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <Phone className="h-4 w-4" />
+                      Số Điện Thoại
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {defaultStore.phone}
+                    </p>
+                  </div>
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <Mail className="h-4 w-4" />
+                      Email
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {defaultStore.email}
+                    </p>
+                  </div>
+                </div>
+
+                <div className="grid gap-4 md:grid-cols-3">
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <Clock className="h-4 w-4" />
+                      Giờ Mở Cửa
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {formatTime(defaultStore.openingTime)}
+                    </p>
+                  </div>
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <Clock className="h-4 w-4" />
+                      Giờ Đóng Cửa
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {formatTime(defaultStore.closingTime)}
+                    </p>
+                  </div>
+                  <div>
+                    <Label className="text-sm font-medium flex items-center gap-2">
+                      <Calendar className="h-4 w-4" />
+                      Ngày Khai Trương
+                    </Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {formatDate(defaultStore.openingDate)}
+                    </p>
+                  </div>
+                </div>
+              </div>
+            )}
+          </CardContent>
+        </Card>
+      </div>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/profile/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/profile/page.tsx b/frontend/manager/src/app/profile/page.tsx
new file mode 100644
--- /dev/null	(date 1750227538879)
+++ b/frontend/manager/src/app/profile/page.tsx	(date 1750227538879)
@@ -0,0 +1,572 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { z } from "zod";
+import { toast } from "sonner";
+import { 
+  User, 
+  Mail, 
+  Phone, 
+  Lock, 
+  Save, 
+  X, 
+  Edit,
+  Loader2,
+  UserCircle 
+} from "lucide-react";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
+import { Input } from "@/components/ui/input";
+import { Label } from "@/components/ui/label";
+import {
+  Select,
+  SelectContent,
+  SelectItem,
+  SelectTrigger,
+  SelectValue,
+} from "@/components/ui/select";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "@/components/ui/form";
+import { Separator } from "@/components/ui/separator";
+import { Badge } from "@/components/ui/badge";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import { useProfileStore } from "@/stores/profile";
+import { UpdateProfileDto } from "@/types/api";
+
+// Validation schemas
+const accountInfoSchema = z.object({
+  username: z.string().min(3, "Tên đăng nhập phải có ít nhất 3 ký tự").optional(),
+  password: z.string().min(8, "Mật khẩu phải có ít nhất 8 ký tự").optional().or(z.literal("")),
+});
+
+const personalInfoSchema = z.object({
+  first_name: z.string().min(1, "Tên không được để trống"),
+  last_name: z.string().min(1, "Họ không được để trống"),
+  gender: z.enum(["MALE", "FEMALE", "OTHER"]).optional(),
+  phone: z.string().min(10, "Số điện thoại không hợp lệ"),
+  email: z.string().email("Email không hợp lệ").optional(),
+  position: z.string().optional(), // Chỉ cho employee
+});
+
+type AccountInfoFormData = z.infer<typeof accountInfoSchema>;
+type PersonalInfoFormData = z.infer<typeof personalInfoSchema>;
+
+export default function ProfilePage() {
+  const [isEditingAccount, setIsEditingAccount] = useState(false);
+  const [isEditingPersonal, setIsEditingPersonal] = useState(false);
+
+  const {
+    profile,
+    isLoading,
+    isUpdating,
+    error,
+    fetchProfile,
+    updateProfile,
+    clearError,
+  } = useProfileStore();
+
+  // Account info form
+  const accountForm = useForm<AccountInfoFormData>({
+    resolver: zodResolver(accountInfoSchema),
+    defaultValues: {
+      username: "",
+      password: "",
+    },
+  });
+
+  // Personal info form
+  const personalForm = useForm<PersonalInfoFormData>({
+    resolver: zodResolver(personalInfoSchema),
+    defaultValues: {
+      first_name: "",
+      last_name: "",
+      gender: undefined,
+      phone: "",
+      email: "",
+      position: "",
+    },
+  });
+
+  useEffect(() => {
+    fetchProfile();
+  }, [fetchProfile]);
+
+  useEffect(() => {
+    if (profile) {
+      // Set account form values
+      accountForm.reset({
+        username: profile.username,
+        password: "",
+      });
+
+      // Set personal form values
+      if (profile.profile) {
+        personalForm.reset({
+          first_name: profile.profile.firstName,
+          last_name: profile.profile.lastName,
+          gender: profile.profile.gender,
+          phone: profile.profile.phone,
+          email: profile.profile.email || "",
+          position: profile.profile.position || "",
+        });
+      }
+    }
+  }, [profile, accountForm, personalForm]);
+
+  useEffect(() => {
+    if (error) {
+      toast.error(error);
+      clearError();
+    }
+  }, [error, clearError]);
+
+  const handleUpdateAccount = async (data: AccountInfoFormData) => {
+    try {
+      const updateData: UpdateProfileDto = {};
+      
+      if (data.username && data.username !== profile?.username) {
+        updateData.username = data.username;
+      }
+      
+      if (data.password && data.password.trim() !== "") {
+        updateData.password = data.password;
+      }
+
+      if (Object.keys(updateData).length > 0) {
+        await updateProfile(updateData);
+        toast.success("Cập nhật thông tin tài khoản thành công!");
+      }
+      
+      setIsEditingAccount(false);
+      accountForm.setValue("password", ""); // Clear password field
+    } catch (error) {
+      console.error("Lỗi cập nhật tài khoản:", error);
+    }
+  };
+
+  const handleUpdatePersonal = async (data: PersonalInfoFormData) => {
+    try {
+      const updateData: UpdateProfileDto = {
+        first_name: data.first_name,
+        last_name: data.last_name,
+        gender: data.gender,
+        phone: data.phone,
+        email: data.email || undefined,
+        position: data.position || undefined,
+      };
+
+      await updateProfile(updateData);
+      toast.success("Cập nhật thông tin cá nhân thành công!");
+      setIsEditingPersonal(false);
+    } catch (error) {
+      console.error("Lỗi cập nhật thông tin cá nhân:", error);
+    }
+  };
+
+  const cancelAccountEdit = () => {
+    setIsEditingAccount(false);
+    accountForm.reset({
+      username: profile?.username,
+      password: "",
+    });
+  };
+
+  const cancelPersonalEdit = () => {
+    setIsEditingPersonal(false);
+    if (profile?.profile) {
+      personalForm.reset({
+        first_name: profile.profile.firstName,
+        last_name: profile.profile.lastName,
+        gender: profile.profile.gender,
+        phone: profile.profile.phone,
+        email: profile.profile.email || "",
+        position: profile.profile.position || "",
+      });
+    }
+  };
+
+  if (isLoading) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <Loader2 className="h-8 w-8 animate-spin" />
+      </div>
+    );
+  }
+
+  if (!profile) {
+    return (
+      <div className="flex items-center justify-center h-96">
+        <p className="text-muted-foreground">Không thể tải thông tin profile</p>
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Page Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h1 className="text-3xl font-bold">Thông Tin Cá Nhân</h1>
+          <p className="text-muted-foreground">
+            Quản lý thông tin tài khoản và thông tin cá nhân của bạn
+          </p>
+        </div>
+      </div>
+
+      <div className="grid gap-6 md:grid-cols-2">
+        {/* Profile Overview */}
+        <Card className="md:col-span-2">
+          <CardHeader>
+            <CardTitle className="flex items-center gap-2">
+              <UserCircle className="h-5 w-5" />
+              Tổng Quan
+            </CardTitle>
+          </CardHeader>
+          <CardContent>
+            <div className="flex items-center gap-4">
+              <Avatar className="h-20 w-20">
+                <AvatarImage src="" alt={profile.profile?.name} />
+                <AvatarFallback className="text-lg">
+                  {profile.profile?.name
+                    ? profile.profile.name.split(' ').map(n => n[0]).join('')
+                    : 'U'}
+                </AvatarFallback>
+              </Avatar>
+              <div className="space-y-1">
+                <h3 className="text-xl font-semibold">
+                  {profile.profile?.name || profile.username}
+                </h3>
+                <div className="flex items-center gap-2">
+                  <Badge variant="outline">
+                    {profile.roleName}
+                  </Badge>
+                  <Badge variant={profile.isActive ? "default" : "secondary"}>
+                    {profile.isActive ? "Hoạt Động" : "Vô Hiệu Hóa"}
+                  </Badge>
+                  {profile.isLocked && (
+                    <Badge variant="destructive">Bị Khóa</Badge>
+                  )}
+                </div>
+                <p className="text-sm text-muted-foreground">
+                  Đăng nhập lần cuối: {profile.lastLogin 
+                    ? new Intl.DateTimeFormat("vi-VN", {
+                        year: "numeric",
+                        month: "2-digit",
+                        day: "2-digit",
+                        hour: "2-digit",
+                        minute: "2-digit",
+                      }).format(profile.lastLogin)
+                    : "Chưa từng đăng nhập"}
+                </p>
+              </div>
+            </div>
+          </CardContent>
+        </Card>
+
+        {/* Account Information */}
+        <Card>
+          <CardHeader>
+            <div className="flex items-center justify-between">
+              <CardTitle className="flex items-center gap-2">
+                <Lock className="h-5 w-5" />
+                Thông Tin Tài Khoản
+              </CardTitle>
+              {!isEditingAccount && (
+                <Button
+                  variant="outline"
+                  size="sm"
+                  onClick={() => setIsEditingAccount(true)}
+                >
+                  <Edit className="h-4 w-4 mr-2" />
+                  Chỉnh Sửa
+                </Button>
+              )}
+            </div>
+          </CardHeader>
+          <CardContent>
+            {isEditingAccount ? (
+              <Form {...accountForm}>
+                <form onSubmit={accountForm.handleSubmit(handleUpdateAccount)} className="space-y-4">
+                  <FormField
+                    control={accountForm.control}
+                    name="username"
+                    render={({ field }) => (
+                      <FormItem>
+                        <FormLabel>Tên Đăng Nhập</FormLabel>
+                        <FormControl>
+                          <Input {...field} />
+                        </FormControl>
+                        <FormMessage />
+                      </FormItem>
+                    )}
+                  />
+                  
+                  <FormField
+                    control={accountForm.control}
+                    name="password"
+                    render={({ field }) => (
+                      <FormItem>
+                        <FormLabel>Mật Khẩu Mới (để trống nếu không đổi)</FormLabel>
+                        <FormControl>
+                          <Input type="password" {...field} />
+                        </FormControl>
+                        <FormMessage />
+                      </FormItem>
+                    )}
+                  />
+
+                  <div className="flex gap-2">
+                    <Button 
+                      type="submit" 
+                      size="sm"
+                      disabled={isUpdating}
+                    >
+                      {isUpdating ? (
+                        <>
+                          <Loader2 className="h-4 w-4 mr-2 animate-spin" />
+                          Đang lưu...
+                        </>
+                      ) : (
+                        <>
+                          <Save className="h-4 w-4 mr-2" />
+                          Lưu
+                        </>
+                      )}
+                    </Button>
+                    <Button 
+                      type="button" 
+                      variant="outline" 
+                      size="sm"
+                      onClick={cancelAccountEdit}
+                      disabled={isUpdating}
+                    >
+                      <X className="h-4 w-4 mr-2" />
+                      Hủy
+                    </Button>
+                  </div>
+                </form>
+              </Form>
+            ) : (
+              <div className="space-y-4">
+                <div>
+                  <Label className="text-sm font-medium">Tên Đăng Nhập</Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    {profile.username}
+                  </p>
+                </div>
+                <div>
+                  <Label className="text-sm font-medium">Mật Khẩu</Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    ••••••••
+                  </p>
+                </div>
+              </div>
+            )}
+          </CardContent>
+        </Card>
+
+        {/* Personal Information */}
+        <Card>
+          <CardHeader>
+            <div className="flex items-center justify-between">
+              <CardTitle className="flex items-center gap-2">
+                <User className="h-5 w-5" />
+                Thông Tin Cá Nhân
+              </CardTitle>
+              {!isEditingPersonal && (
+                <Button
+                  variant="outline"
+                  size="sm"
+                  onClick={() => setIsEditingPersonal(true)}
+                >
+                  <Edit className="h-4 w-4 mr-2" />
+                  Chỉnh Sửa
+                </Button>
+              )}
+            </div>
+          </CardHeader>
+          <CardContent>
+            {isEditingPersonal ? (
+              <Form {...personalForm}>
+                <form onSubmit={personalForm.handleSubmit(handleUpdatePersonal)} className="space-y-4">
+                  <div className="grid grid-cols-2 gap-4">
+                    <FormField
+                      control={personalForm.control}
+                      name="last_name"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Họ</FormLabel>
+                          <FormControl>
+                            <Input {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                    
+                    <FormField
+                      control={personalForm.control}
+                      name="first_name"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Tên</FormLabel>
+                          <FormControl>
+                            <Input {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                  </div>
+
+                  <FormField
+                    control={personalForm.control}
+                    name="gender"
+                    render={({ field }) => (
+                      <FormItem>
+                        <FormLabel>Giới Tính</FormLabel>
+                        <Select onValueChange={field.onChange} value={field.value}>
+                          <FormControl>
+                            <SelectTrigger>
+                              <SelectValue placeholder="Chọn giới tính" />
+                            </SelectTrigger>
+                          </FormControl>
+                          <SelectContent>
+                            <SelectItem value="MALE">Nam</SelectItem>
+                            <SelectItem value="FEMALE">Nữ</SelectItem>
+                            <SelectItem value="OTHER">Khác</SelectItem>
+                          </SelectContent>
+                        </Select>
+                        <FormMessage />
+                      </FormItem>
+                    )}
+                  />
+
+                  <FormField
+                    control={personalForm.control}
+                    name="phone"
+                    render={({ field }) => (
+                      <FormItem>
+                        <FormLabel>Số Điện Thoại</FormLabel>
+                        <FormControl>
+                          <Input {...field} />
+                        </FormControl>
+                        <FormMessage />
+                      </FormItem>
+                    )}
+                  />
+
+                  <FormField
+                    control={personalForm.control}
+                    name="email"
+                    render={({ field }) => (
+                      <FormItem>
+                        <FormLabel>Email</FormLabel>
+                        <FormControl>
+                          <Input type="email" {...field} />
+                        </FormControl>
+                        <FormMessage />
+                      </FormItem>
+                    )}
+                  />
+
+                  {profile.roleName === 'STAFF' && (
+                    <FormField
+                      control={personalForm.control}
+                      name="position"
+                      render={({ field }) => (
+                        <FormItem>
+                          <FormLabel>Chức Vụ</FormLabel>
+                          <FormControl>
+                            <Input {...field} />
+                          </FormControl>
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
+                  )}
+
+                  <div className="flex gap-2">
+                    <Button 
+                      type="submit" 
+                      size="sm"
+                      disabled={isUpdating}
+                    >
+                      {isUpdating ? (
+                        <>
+                          <Loader2 className="h-4 w-4 mr-2 animate-spin" />
+                          Đang lưu...
+                        </>
+                      ) : (
+                        <>
+                          <Save className="h-4 w-4 mr-2" />
+                          Lưu
+                        </>
+                      )}
+                    </Button>
+                    <Button 
+                      type="button" 
+                      variant="outline" 
+                      size="sm"
+                      onClick={cancelPersonalEdit}
+                      disabled={isUpdating}
+                    >
+                      <X className="h-4 w-4 mr-2" />
+                      Hủy
+                    </Button>
+                  </div>
+                </form>
+              </Form>
+            ) : (
+              <div className="space-y-4">
+                <div>
+                  <Label className="text-sm font-medium">Họ và Tên</Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    {profile.profile?.name || "Chưa cập nhật"}
+                  </p>
+                </div>
+                <div>
+                  <Label className="text-sm font-medium">Giới Tính</Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    {profile.profile?.gender === 'MALE' ? 'Nam' : 
+                     profile.profile?.gender === 'FEMALE' ? 'Nữ' :
+                     profile.profile?.gender === 'OTHER' ? 'Khác' : 'Chưa cập nhật'}
+                  </p>
+                </div>
+                <div>
+                  <Label className="text-sm font-medium">Số Điện Thoại</Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    {profile.profile?.phone || "Chưa cập nhật"}
+                  </p>
+                </div>
+                <div>
+                  <Label className="text-sm font-medium">Email</Label>
+                  <p className="text-sm text-muted-foreground mt-1">
+                    {profile.profile?.email || "Chưa cập nhật"}
+                  </p>
+                </div>
+                {profile.roleName === 'STAFF' && (
+                  <div>
+                    <Label className="text-sm font-medium">Chức Vụ</Label>
+                    <p className="text-sm text-muted-foreground mt-1">
+                      {profile.profile?.position || "Chưa cập nhật"}
+                    </p>
+                  </div>
+                )}
+              </div>
+            )}
+          </CardContent>
+        </Card>
+      </div>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/app/products/layout.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/layout.tsx b/frontend/manager/src/app/products/layout.tsx
new file mode 100644
--- /dev/null	(date 1750139987082)
+++ b/frontend/manager/src/app/products/layout.tsx	(date 1750139987082)
@@ -0,0 +1,17 @@
+import { MainLayout } from "@/components/layout/main-layout";
+import { Toaster } from "@/components/ui/sonner";
+
+interface ProductsLayoutProps {
+  children: React.ReactNode;
+}
+
+export default function ProductsLayout({ children }: ProductsLayoutProps) {
+  return (
+    <>
+      <MainLayout>
+        {children}
+      </MainLayout>
+      <Toaster richColors />
+    </>
+  );
+} 
\ No newline at end of file
Index: frontend/pos/.env.development
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pos/.env.development b/frontend/pos/.env.development
new file mode 100644
--- /dev/null	(date 1750224858308)
+++ b/frontend/pos/.env.development	(date 1750224858308)
@@ -0,0 +1,2 @@
+PORT=4810
+NEXT_PUBLIC_API_URL=https://localhost:4653/api/v1
\ No newline at end of file
Index: frontend/manager/src/lib/services/category-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/category-service.ts b/frontend/manager/src/lib/services/category-service.ts
new file mode 100644
--- /dev/null	(date 1750127575592)
+++ b/frontend/manager/src/lib/services/category-service.ts	(date 1750127575592)
@@ -0,0 +1,114 @@
+import { apiClient } from "@/lib/api-client";
+import { 
+  Category, 
+  BackendCategoryResponse,
+  BackendPaginatedResponse,
+  BulkDeleteResponse,
+  transformCategoryResponse,
+  PaginatedResponse 
+} from "@/types/api";
+import { 
+  transformCreateCategoryFormData, 
+  transformUpdateCategoryFormData,
+  CreateCategoryFormData,
+  UpdateCategoryFormData,
+  BulkDeleteCategoryFormData 
+} from "@/lib/validations/category";
+
+/**
+ * Category Service
+ * Xử lý tất cả API calls liên quan đến categories
+ */
+export class CategoryService {
+  private readonly endpoint = "/categories";
+
+  /**
+   * Lấy danh sách categories với pagination
+   */
+  async getAll(params?: { 
+    page?: number; 
+    limit?: number;
+    search?: string;
+  }): Promise<PaginatedResponse<Category>> {
+    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendCategoryResponse>>(
+      this.endpoint, 
+      params
+    );
+    
+    // Transform backend response sang frontend format
+    return {
+      data: backendResponse.data.map(transformCategoryResponse),
+      total: backendResponse.pagination.total,
+      page: backendResponse.pagination.page,
+      limit: backendResponse.pagination.limit,
+      totalPages: backendResponse.pagination.totalPages,
+    };
+  }
+
+  /**
+   * Lấy category theo ID
+   */
+  async getById(id: number): Promise<Category> {
+    const backendResponse = await apiClient.get<BackendCategoryResponse>(`${this.endpoint}/${id}`);
+    return transformCategoryResponse(backendResponse);
+  }
+
+  /**
+   * Tạo category mới
+   */
+  async create(formData: CreateCategoryFormData): Promise<Category> {
+    const backendData = transformCreateCategoryFormData(formData);
+    const backendResponse = await apiClient.post<BackendCategoryResponse>(this.endpoint, backendData);
+    return transformCategoryResponse(backendResponse);
+  }
+
+  /**
+   * Cập nhật category
+   */
+  async update(id: number, formData: UpdateCategoryFormData): Promise<Category> {
+    const backendData = transformUpdateCategoryFormData(formData);
+    const backendResponse = await apiClient.patch<BackendCategoryResponse>(`${this.endpoint}/${id}`, backendData);
+    return transformCategoryResponse(backendResponse);
+  }
+
+  /**
+   * Xóa category
+   */
+  async delete(id: number): Promise<void> {
+    return apiClient.delete<void>(`${this.endpoint}/${id}`);
+  }
+
+  /**
+   * Xóa nhiều categories
+   */
+  async bulkDelete(formData: BulkDeleteCategoryFormData): Promise<BulkDeleteResponse> {
+    return apiClient.delete<BulkDeleteResponse>(`${this.endpoint}/bulk`, formData);
+  }
+
+  /**
+   * Test API connection
+   */
+  async ping(): Promise<{ message: string }> {
+    return apiClient.get<{ message: string }>(`${this.endpoint}/admin/test`);
+  }
+
+  /**
+   * Lấy thống kê categories
+   */
+  async getStats(): Promise<{
+    total: number;
+    withProducts: number;
+    withoutProducts: number;
+    recentlyCreated: number;
+  }> {
+    return apiClient.get<{
+      total: number;
+      withProducts: number;
+      withoutProducts: number;
+      recentlyCreated: number;
+    }>(`${this.endpoint}/stats`);
+  }
+}
+
+// Export singleton instance
+export const categoryService = new CategoryService(); 
\ No newline at end of file
Index: frontend/manager/src/lib/validations/category.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/validations/category.ts b/frontend/manager/src/lib/validations/category.ts
new file mode 100644
--- /dev/null	(date 1750127579976)
+++ b/frontend/manager/src/lib/validations/category.ts	(date 1750127579976)
@@ -0,0 +1,59 @@
+import { z } from "zod";
+
+// Schema cho tạo category mới (match với backend CreateCategoryDto)
+export const createCategorySchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên danh mục không được để trống")
+    .max(100, "Tên danh mục không được vượt quá 100 ký tự")
+    .regex(/^[a-zA-ZÀ-ỹ0-9\s]+$/, "Tên danh mục chỉ được chứa chữ cái, số và khoảng trắng"),
+  
+  description: z
+    .string()
+    .max(1000, "Mô tả không được vượt quá 1000 ký tự")
+    .optional(),
+});
+
+// Schema cho cập nhật category (UpdateCategoryDto extends PartialType(CreateCategoryDto))
+export const updateCategorySchema = z.object({
+  name: z
+    .string()
+    .min(1, "Tên danh mục không được để trống")
+    .max(100, "Tên danh mục không được vượt quá 100 ký tự")
+    .regex(/^[a-zA-ZÀ-ỹ0-9\s]+$/, "Tên danh mục chỉ được chứa chữ cái, số và khoảng trắng")
+    .optional(),
+  
+  description: z
+    .string()
+    .max(1000, "Mô tả không được vượt quá 1000 ký tự")
+    .optional(),
+});
+
+// Schema cho bulk delete
+export const bulkDeleteCategorySchema = z.object({
+  ids: z
+    .array(z.number())
+    .min(1, "Phải chọn ít nhất một danh mục để xóa"),
+});
+
+// Types được suy ra từ schemas
+export type CreateCategoryFormData = z.infer<typeof createCategorySchema>;
+export type UpdateCategoryFormData = z.infer<typeof updateCategorySchema>;
+export type BulkDeleteCategoryFormData = z.infer<typeof bulkDeleteCategorySchema>;
+
+// Transform functions để convert form data sang DTO backend
+export function transformCreateCategoryFormData(formData: CreateCategoryFormData) {
+  return {
+    name: formData.name,
+    description: formData.description,
+  };
+}
+
+export function transformUpdateCategoryFormData(formData: UpdateCategoryFormData) {
+  const result: Record<string, unknown> = {};
+  
+  if (formData.name !== undefined) result.name = formData.name;
+  if (formData.description !== undefined) result.description = formData.description;
+  
+  return result;
+} 
\ No newline at end of file
Index: frontend/manager/src/app/products/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/products/[id]/page.tsx b/frontend/manager/src/app/products/[id]/page.tsx
new file mode 100644
--- /dev/null	(date 1750159047816)
+++ b/frontend/manager/src/app/products/[id]/page.tsx	(date 1750159047816)
@@ -0,0 +1,886 @@
+"use client";
+
+import { useEffect, useState } from "react";
+import { useParams, useRouter } from "next/navigation";
+import { ArrowLeft, Package, Edit, Trash2, Plus, Eye, Star, Badge as BadgeIcon, Save, X, MoreHorizontal, Loader2 } from "lucide-react";
+import { toast } from "sonner";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+
+import { Button } from "@/components/ui/button";
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { Badge } from "@/components/ui/badge";
+import { Skeleton } from "@/components/ui/skeleton";
+import { Separator } from "@/components/ui/separator";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { Switch } from "@/components/ui/switch";
+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
+import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from "@/components/ui/dropdown-menu";
+import {
+  AlertDialog,
+  AlertDialogAction,
+  AlertDialogCancel,
+  AlertDialogContent,
+  AlertDialogDescription,
+  AlertDialogFooter,
+  AlertDialogHeader,
+  AlertDialogTitle,
+} from "@/components/ui/alert-dialog";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogFooter,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+
+import { Product, ProductPrice, Category, ProductSize } from "@/types/api";
+import { productService } from "@/lib/services/product-service";
+import { categoryService } from "@/lib/services/category-service";
+import { productSizeService } from "@/lib/services/product-size-service";
+import { 
+  updateProductSchema, 
+  UpdateProductFormData,
+  createProductPriceSchema,
+  CreateProductPriceFormData,
+  updateProductPriceSchema,
+  UpdateProductPriceFormData
+} from "@/lib/validations/product";
+
+function formatDate(date: Date): string {
+  return new Intl.DateTimeFormat("vi-VN", {
+    year: "numeric",
+    month: "long",
+    day: "numeric",
+    hour: "2-digit",
+    minute: "2-digit",
+  }).format(date);
+}
+
+function formatCurrency(amount: number): string {
+  return new Intl.NumberFormat("vi-VN", {
+    style: "currency",
+    currency: "VND",
+  }).format(amount);
+}
+
+export default function ProductDetailPage() {
+  const params = useParams();
+  const router = useRouter();
+  const productId = parseInt(params.id as string);
+
+  const [product, setProduct] = useState<Product | null>(null);
+  const [categories, setCategories] = useState<Category[]>([]);
+  const [productSizes, setProductSizes] = useState<ProductSize[]>([]);
+  const [isLoading, setIsLoading] = useState(true);
+  const [isLoadingData, setIsLoadingData] = useState(true);
+  const [isEditing, setIsEditing] = useState(false);
+  const [isUpdating, setIsUpdating] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+  
+  // Price management states
+  const [isAddPriceDialogOpen, setIsAddPriceDialogOpen] = useState(false);
+  const [isEditPriceDialogOpen, setIsEditPriceDialogOpen] = useState(false);
+  const [isDeletePriceDialogOpen, setIsDeletePriceDialogOpen] = useState(false);
+  const [selectedPrice, setSelectedPrice] = useState<ProductPrice | null>(null);
+  const [isCreatingPrice, setIsCreatingPrice] = useState(false);
+  const [isUpdatingPrice, setIsUpdatingPrice] = useState(false);
+  const [isDeletingPrice, setIsDeletingPrice] = useState(false);
+
+  // Form cho chỉnh sửa product
+  const form = useForm<UpdateProductFormData>({
+    resolver: zodResolver(updateProductSchema),
+    defaultValues: {
+      name: "",
+      description: "",
+      is_signature: false,
+      category_id: undefined,
+    },
+  });
+
+  // Form cho thêm giá mới
+  const addPriceForm = useForm<CreateProductPriceFormData>({
+    resolver: zodResolver(createProductPriceSchema),
+    defaultValues: {
+      product_id: productId,
+      size_id: 1,
+      price: 0,
+      is_active: true,
+    },
+  });
+
+  // Form cho chỉnh sửa giá
+  const editPriceForm = useForm<UpdateProductPriceFormData>({
+    resolver: zodResolver(updateProductPriceSchema),
+    defaultValues: {
+      price: 0,
+      is_active: true,
+    },
+  });
+
+  useEffect(() => {
+    loadProductDetails();
+    loadCategories();
+    loadProductSizes();
+  }, [productId]);
+
+  // Reset form khi product thay đổi
+  useEffect(() => {
+    if (product) {
+      form.reset({
+        name: product.name || "",
+        description: product.description || "",
+        is_signature: product.isSignature || false,
+        category_id: product.category?.id || undefined,
+      });
+    }
+  }, [product, form]);
+
+  const loadProductDetails = async () => {
+    try {
+      setIsLoading(true);
+      setError(null);
+      
+      const productData = await productService.getById(productId);
+      setProduct(productData);
+    } catch (error) {
+      console.error("Lỗi tải thông tin sản phẩm:", error);
+      setError("Không thể tải thông tin sản phẩm");
+      toast.error("Không thể tải thông tin sản phẩm");
+    } finally {
+      setIsLoading(false);
+    }
+  };
+
+  const loadCategories = async () => {
+    try {
+      const response = await categoryService.getAll();
+      setCategories(response.data);
+    } catch (error) {
+      console.error("Lỗi tải danh sách danh mục:", error);
+    }
+  };
+
+  const loadProductSizes = async () => {
+    try {
+      setIsLoadingData(true);
+      const response = await productSizeService.getAll();
+      setProductSizes(response.data);
+    } catch (error) {
+      console.error("Lỗi tải danh sách kích thước:", error);
+    } finally {
+      setIsLoadingData(false);
+    }
+  };
+
+  const handleEditToggle = () => {
+    if (isEditing) {
+      // Hủy chỉnh sửa - reset form về giá trị ban đầu
+      if (product) {
+        form.reset({
+          name: product.name || "",
+          description: product.description || "",
+          is_signature: product.isSignature || false,
+          category_id: product.category?.id || undefined,
+        });
+      }
+      setIsEditing(false);
+    } else {
+      setIsEditing(true);
+    }
+  };
+
+  const handleUpdateProduct = async (formData: UpdateProductFormData) => {
+    if (!product) return;
+
+    try {
+      setIsUpdating(true);
+      const updatedProduct = await productService.update(product.id, formData);
+      setProduct(updatedProduct);
+      setIsEditing(false);
+      toast.success("Cập nhật sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi cập nhật sản phẩm:", error);
+      toast.error("Không thể cập nhật sản phẩm. Vui lòng thử lại.");
+    } finally {
+      setIsUpdating(false);
+    }
+  };
+
+  const handleDeleteProduct = () => {
+    toast.info("Tính năng xóa sản phẩm đang phát triển");
+  };
+
+  // === PRICE MANAGEMENT HANDLERS ===
+
+  const handleAddPrice = () => {
+    addPriceForm.reset({
+      product_id: productId,
+      size_id: productSizes.length > 0 ? productSizes[0].id : 1,
+      price: 0,
+      is_active: true,
+    });
+    setIsAddPriceDialogOpen(true);
+  };
+
+  const handleCreatePrice = async (formData: CreateProductPriceFormData) => {
+    try {
+      setIsCreatingPrice(true);
+      await productService.createProductPrice(formData);
+      await loadProductDetails(); // Reload để cập nhật danh sách giá
+      setIsAddPriceDialogOpen(false);
+      toast.success("Thêm giá sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi tạo giá sản phẩm:", error);
+      toast.error("Không thể thêm giá sản phẩm. Vui lòng thử lại.");
+    } finally {
+      setIsCreatingPrice(false);
+    }
+  };
+
+  const handleEditPrice = (price: ProductPrice) => {
+    setSelectedPrice(price);
+    editPriceForm.reset({
+      price: price.price,
+      is_active: price.isActive,
+    });
+    setIsEditPriceDialogOpen(true);
+  };
+
+  const handleUpdatePrice = async (formData: UpdateProductPriceFormData) => {
+    if (!selectedPrice) return;
+
+    try {
+      setIsUpdatingPrice(true);
+      await productService.updateProductPrice(selectedPrice.id, formData);
+      await loadProductDetails(); // Reload để cập nhật danh sách giá
+      setIsEditPriceDialogOpen(false);
+      setSelectedPrice(null);
+      toast.success("Cập nhật giá sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi cập nhật giá sản phẩm:", error);
+      toast.error("Không thể cập nhật giá sản phẩm. Vui lòng thử lại.");
+    } finally {
+      setIsUpdatingPrice(false);
+    }
+  };
+
+  const handleDeletePrice = (price: ProductPrice) => {
+    setSelectedPrice(price);
+    setIsDeletePriceDialogOpen(true);
+  };
+
+  const handleConfirmDeletePrice = async () => {
+    if (!selectedPrice) return;
+
+    try {
+      setIsDeletingPrice(true);
+      await productService.deleteProductPrice(selectedPrice.id);
+      await loadProductDetails(); // Reload để cập nhật danh sách giá
+      setIsDeletePriceDialogOpen(false);
+      setSelectedPrice(null);
+      toast.success("Xóa giá sản phẩm thành công!");
+    } catch (error) {
+      console.error("Lỗi xóa giá sản phẩm:", error);
+      toast.error("Không thể xóa giá sản phẩm. Vui lòng thử lại.");
+    } finally {
+      setIsDeletingPrice(false);
+    }
+  };
+
+  if (error) {
+    return (
+      <div className="space-y-6">
+        <Card>
+          <CardContent className="py-8">
+            <div className="text-center">
+              <p className="text-destructive mb-4">{error}</p>
+              <Button onClick={() => router.back()}>
+                <ArrowLeft className="mr-2 h-4 w-4" />
+                Quay Lại
+              </Button>
+            </div>
+          </CardContent>
+        </Card>
+      </div>
+    );
+  }
+
+  return (
+    <div className="space-y-6">
+      {/* Header với nút actions */}
+      <div className="flex items-center justify-between">
+        <Button variant="outline" onClick={() => router.back()}>
+          <ArrowLeft className="mr-2 h-4 w-4" />
+          Quay Lại
+        </Button>
+        
+        <div className="flex items-center space-x-2">
+          {isEditing ? (
+            <>
+              <Button
+                variant="outline"
+                onClick={handleEditToggle}
+                disabled={isUpdating}
+              >
+                <X className="mr-2 h-4 w-4" />
+                Hủy
+              </Button>
+              <Button
+                onClick={form.handleSubmit(handleUpdateProduct)}
+                disabled={isUpdating}
+              >
+                {isUpdating ? (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                    Đang lưu...
+                  </>
+                ) : (
+                  <>
+                    <Save className="mr-2 h-4 w-4" />
+                    Lưu
+                  </>
+                )}
+              </Button>
+            </>
+          ) : (
+            <>
+              <Button variant="outline" onClick={handleEditToggle}>
+                <Edit className="mr-2 h-4 w-4" />
+                Chỉnh Sửa
+              </Button>
+              <Button variant="destructive" onClick={handleDeleteProduct}>
+                <Trash2 className="mr-2 h-4 w-4" />
+                Xóa Sản Phẩm
+              </Button>
+            </>
+          )}
+        </div>
+      </div>
+
+      {isLoading ? (
+        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
+          {/* Hình ảnh sản phẩm */}
+          <Card>
+            <CardContent className="p-6">
+              <Skeleton className="aspect-square w-full" />
+            </CardContent>
+          </Card>
+
+          {/* Thông tin sản phẩm */}
+          <Card>
+            <CardHeader>
+              <Skeleton className="h-8 w-3/4" />
+              <Skeleton className="h-4 w-1/2" />
+            </CardHeader>
+            <CardContent className="space-y-4">
+              <Skeleton className="h-4 w-full" />
+              <Skeleton className="h-4 w-3/4" />
+              <Skeleton className="h-6 w-1/3" />
+              <Separator />
+              <Skeleton className="h-4 w-1/2" />
+              <Skeleton className="h-4 w-1/3" />
+            </CardContent>
+          </Card>
+        </div>
+      ) : product ? (
+        <>
+          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
+            {/* Hình ảnh sản phẩm */}
+            <Card>
+              <CardContent className="p-6">
+                <div className="aspect-square bg-muted rounded-lg flex items-center justify-center overflow-hidden">
+                  {product.imagePath ? (
+                    <img 
+                      src={product.imagePath} 
+                      alt={product.name}
+                      className="w-full h-full object-cover"
+                    />
+                  ) : (
+                    <Package className="h-24 w-24 text-muted-foreground" />
+                  )}
+                </div>
+              </CardContent>
+            </Card>
+
+            {/* Thông tin sản phẩm */}
+            <Card>
+              <CardHeader>
+                <CardTitle className="flex items-center gap-2">
+                  <Package className="h-5 w-5" />
+                  Thông Tin Sản Phẩm
+                </CardTitle>
+              </CardHeader>
+              <CardContent>
+                <Form {...form}>
+                  <form className="space-y-6">
+                    <div className="space-y-4">
+                      {/* Tên Sản Phẩm */}
+                      <div>
+                        <label className="text-sm font-medium text-muted-foreground">Tên Sản Phẩm</label>
+                        {isEditing ? (
+                          <FormField
+                            control={form.control}
+                            name="name"
+                            render={({ field }) => (
+                              <FormItem>
+                                <FormControl>
+                                  <Input
+                                    placeholder="Ví dụ: Bánh kem chocolate"
+                                    {...field}
+                                    disabled={isUpdating}
+                                  />
+                                </FormControl>
+                                <FormMessage />
+                              </FormItem>
+                            )}
+                          />
+                        ) : (
+                          <div className="flex items-center gap-2">
+                            <p className="text-lg font-semibold">{product.name}</p>
+                            {product.isSignature && (
+                              <Badge variant="secondary" className="text-xs">
+                                <Star className="mr-1 h-3 w-3" />
+                                Đặc Trưng
+                              </Badge>
+                            )}
+                          </div>
+                        )}
+                      </div>
+                      
+                      {/* Mô Tả */}
+                      <div>
+                        <label className="text-sm font-medium text-muted-foreground">Mô Tả</label>
+                        {isEditing ? (
+                          <FormField
+                            control={form.control}
+                            name="description"
+                            render={({ field }) => (
+                              <FormItem>
+                                <FormControl>
+                                  <Textarea
+                                    placeholder="Mô tả chi tiết về sản phẩm..."
+                                    className="min-h-[80px]"
+                                    {...field}
+                                    disabled={isUpdating}
+                                  />
+                                </FormControl>
+                                <FormMessage />
+                              </FormItem>
+                            )}
+                          />
+                        ) : (
+                          <p className="text-sm">
+                            {product.description || <span className="text-muted-foreground italic">Không có mô tả</span>}
+                          </p>
+                        )}
+                      </div>
+
+                      {/* Danh Mục */}
+                      <div>
+                        <label className="text-sm font-medium text-muted-foreground">Danh Mục</label>
+                        {isEditing ? (
+                          <FormField
+                            control={form.control}
+                            name="category_id"
+                            render={({ field }) => (
+                              <FormItem>
+                                <Select
+                                  onValueChange={(value) => field.onChange(parseInt(value))}
+                                  value={field.value?.toString()}
+                                  disabled={isUpdating}
+                                >
+                                  <FormControl>
+                                    <SelectTrigger>
+                                      <SelectValue placeholder="Chọn danh mục" />
+                                    </SelectTrigger>
+                                  </FormControl>
+                                  <SelectContent>
+                                    {categories.map((category) => (
+                                      <SelectItem key={category.id} value={category.id.toString()}>
+                                        {category.name}
+                                      </SelectItem>
+                                    ))}
+                                  </SelectContent>
+                                </Select>
+                                <FormMessage />
+                              </FormItem>
+                            )}
+                          />
+                        ) : (
+                          <p className="text-sm">
+                            {product.category?.name ? (
+                              <Badge variant="outline">{product.category.name}</Badge>
+                            ) : (
+                              <span className="text-muted-foreground italic">Chưa phân loại</span>
+                            )}
+                          </p>
+                        )}
+                      </div>
+
+                      {/* Sản Phẩm Đặc Trưng */}
+                      {isEditing && (
+                        <FormField
+                          control={form.control}
+                          name="is_signature"
+                          render={({ field }) => (
+                            <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
+                              <div className="space-y-0.5">
+                                <FormLabel className="text-base flex items-center gap-2">
+                                  <Star className="h-4 w-4 text-yellow-500" />
+                                  Sản phẩm đặc trưng
+                                </FormLabel>
+                                <div className="text-sm text-muted-foreground">
+                                  Đánh dấu sản phẩm này là đặc trưng của cửa hàng
+                                </div>
+                              </div>
+                              <FormControl>
+                                <Switch
+                                  checked={field.value}
+                                  onCheckedChange={field.onChange}
+                                  disabled={isUpdating}
+                                />
+                              </FormControl>
+                            </FormItem>
+                          )}
+                        />
+                      )}
+
+                      {/* Thông tin thời gian */}
+                      <div className="grid grid-cols-2 gap-4 text-sm">
+                        <div>
+                          <label className="font-medium text-muted-foreground">Ngày Tạo</label>
+                          <p>{formatDate(product.createdAt)}</p>
+                        </div>
+                        <div>
+                          <label className="font-medium text-muted-foreground">Cập Nhật</label>
+                          <p>{formatDate(product.updatedAt)}</p>
+                        </div>
+                      </div>
+                    </div>
+                  </form>
+                </Form>
+              </CardContent>
+            </Card>
+          </div>
+
+          {/* Bảng giá theo size */}
+          <Card>
+            <CardHeader>
+              <div className="flex items-center justify-between">
+                <div>
+                  <CardTitle>Giá Theo Kích Thước</CardTitle>
+                  <CardDescription>
+                    Danh sách giá sản phẩm theo từng kích thước
+                  </CardDescription>
+                </div>
+                <Button onClick={handleAddPrice}>
+                  <Plus className="mr-2 h-4 w-4" />
+                  Thêm Giá
+                </Button>
+              </div>
+            </CardHeader>
+            <CardContent>
+              {product.productPrices && product.productPrices.length > 0 ? (
+                <div className="space-y-4">
+                  {product.productPrices.map((price) => (
+                    <div key={price.id} className="flex items-center justify-between p-4 border rounded-lg">
+                      <div className="flex items-center space-x-4">
+                        <div>
+                          <p className="font-medium">
+                            {price.productSize?.name} {price.productSize?.unit}
+                          </p>
+                          <p className="text-sm text-muted-foreground">
+                            Số lượng: {price.productSize?.quantity}
+                          </p>
+                        </div>
+                        <Badge variant={price.isActive ? "default" : "secondary"}>
+                          {price.isActive ? "Đang Bán" : "Ngừng Bán"}
+                        </Badge>
+                      </div>
+                      
+                      <div className="flex items-center space-x-4">
+                        <div className="text-right">
+                          <p className="font-semibold text-lg">
+                            {formatCurrency(price.price)}
+                          </p>
+                          <p className="text-xs text-muted-foreground">
+                            ID: #{price.id}
+                          </p>
+                        </div>
+                        
+                        <DropdownMenu>
+                          <DropdownMenuTrigger asChild>
+                            <Button variant="ghost" size="icon">
+                              <MoreHorizontal className="h-4 w-4" />
+                            </Button>
+                          </DropdownMenuTrigger>
+                          <DropdownMenuContent align="end">
+                            <DropdownMenuItem onClick={() => handleEditPrice(price)}>
+                              <Edit className="mr-2 h-4 w-4" />
+                              Chỉnh Sửa
+                            </DropdownMenuItem>
+                            <DropdownMenuItem 
+                              className="text-destructive"
+                              onClick={() => handleDeletePrice(price)}
+                            >
+                              <Trash2 className="mr-2 h-4 w-4" />
+                              Xóa
+                            </DropdownMenuItem>
+                          </DropdownMenuContent>
+                        </DropdownMenu>
+                      </div>
+                    </div>
+                  ))}
+                </div>
+              ) : (
+                <div className="text-center py-8">
+                  <Package className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
+                  <p className="text-muted-foreground">Chưa có giá nào được thiết lập</p>
+                </div>
+              )}
+            </CardContent>
+          </Card>
+        </>
+      ) : null}
+
+      {/* Add Price Dialog */}
+      <Dialog open={isAddPriceDialogOpen} onOpenChange={setIsAddPriceDialogOpen}>
+        <DialogContent>
+          <DialogHeader>
+            <DialogTitle>Thêm Giá Sản Phẩm</DialogTitle>
+            <DialogDescription>
+              Thêm giá mới cho sản phẩm với kích thước cụ thể
+            </DialogDescription>
+          </DialogHeader>
+          <Form {...addPriceForm}>
+            <form onSubmit={addPriceForm.handleSubmit(handleCreatePrice)} className="space-y-4">
+              {/* Size Selection */}
+                             <FormField
+                 control={addPriceForm.control}
+                 name="size_id"
+                 render={({ field }) => (
+                   <FormItem>
+                     <FormLabel>Kích thước *</FormLabel>
+                     <Select
+                       onValueChange={(value) => field.onChange(parseInt(value))}
+                       value={field.value?.toString()}
+                       disabled={isCreatingPrice || isLoadingData}
+                     >
+                       <FormControl>
+                         <SelectTrigger>
+                           <SelectValue placeholder="Chọn kích thước" />
+                         </SelectTrigger>
+                       </FormControl>
+                       <SelectContent>
+                         {productSizes.map((size) => (
+                           <SelectItem key={size.id} value={size.id.toString()}>
+                             <div className="flex items-center gap-2">
+                               <Badge variant="outline">{size.name}</Badge>
+                               <span>{size.quantity} {size.unit}</span>
+                             </div>
+                           </SelectItem>
+                         ))}
+                       </SelectContent>
+                     </Select>
+                     <FormMessage />
+                   </FormItem>
+                 )}
+               />
+
+              {/* Price */}
+              <FormField
+                control={addPriceForm.control}
+                name="price"
+                render={({ field }) => (
+                  <FormItem>
+                    <FormLabel>Giá (VNĐ) *</FormLabel>
+                    <FormControl>
+                      <Input
+                        type="number"
+                        placeholder="0"
+                        {...field}
+                        onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}
+                        disabled={isCreatingPrice}
+                      />
+                    </FormControl>
+                    <FormMessage />
+                  </FormItem>
+                )}
+              />
+
+              {/* Active Status */}
+              <FormField
+                control={addPriceForm.control}
+                name="is_active"
+                render={({ field }) => (
+                  <FormItem className="flex flex-row items-center justify-between rounded-lg border p-3">
+                    <div className="space-y-0.5">
+                      <FormLabel className="text-sm">Kích hoạt giá này</FormLabel>
+                      <div className="text-xs text-muted-foreground">
+                        Giá này sẽ hiển thị cho khách hàng
+                      </div>
+                    </div>
+                    <FormControl>
+                      <Switch
+                        checked={field.value}
+                        onCheckedChange={field.onChange}
+                        disabled={isCreatingPrice}
+                      />
+                    </FormControl>
+                  </FormItem>
+                )}
+              />
+
+              <DialogFooter>
+                <Button
+                  type="button"
+                  variant="outline"
+                  onClick={() => setIsAddPriceDialogOpen(false)}
+                  disabled={isCreatingPrice}
+                >
+                  Hủy
+                </Button>
+                <Button
+                  type="submit"
+                  disabled={isCreatingPrice}
+                >
+                  {isCreatingPrice ? (
+                    <>
+                      <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                      Đang thêm...
+                    </>
+                  ) : (
+                    "Thêm giá"
+                  )}
+                </Button>
+              </DialogFooter>
+            </form>
+          </Form>
+        </DialogContent>
+      </Dialog>
+
+      {/* Edit Price Dialog */}
+      <Dialog open={isEditPriceDialogOpen} onOpenChange={setIsEditPriceDialogOpen}>
+        <DialogContent>
+          <DialogHeader>
+            <DialogTitle>Chỉnh Sửa Giá Sản Phẩm</DialogTitle>
+            <DialogDescription>
+              Cập nhật thông tin giá sản phẩm
+            </DialogDescription>
+          </DialogHeader>
+          <Form {...editPriceForm}>
+            <form onSubmit={editPriceForm.handleSubmit(handleUpdatePrice)} className="space-y-4">
+              {/* Price */}
+              <FormField
+                control={editPriceForm.control}
+                name="price"
+                render={({ field }) => (
+                  <FormItem>
+                    <FormLabel>Giá (VNĐ)</FormLabel>
+                    <FormControl>
+                                             <Input
+                         type="number"
+                         placeholder="0"
+                         {...field}
+                         onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}
+                         disabled={isUpdatingPrice}
+                       />
+                    </FormControl>
+                    <FormMessage />
+                  </FormItem>
+                )}
+              />
+
+              {/* Active Status */}
+              <FormField
+                control={editPriceForm.control}
+                name="is_active"
+                render={({ field }) => (
+                  <FormItem className="flex flex-row items-center justify-between rounded-lg border p-3">
+                    <div className="space-y-0.5">
+                      <FormLabel className="text-sm">Kích hoạt giá này</FormLabel>
+                      <div className="text-xs text-muted-foreground">
+                        Giá này sẽ hiển thị cho khách hàng
+                      </div>
+                    </div>
+                    <FormControl>
+                      <Switch
+                        checked={field.value}
+                        onCheckedChange={field.onChange}
+                        disabled={isUpdatingPrice}
+                      />
+                    </FormControl>
+                  </FormItem>
+                )}
+              />
+
+              <DialogFooter>
+                <Button
+                  type="button"
+                  variant="outline"
+                  onClick={() => setIsEditPriceDialogOpen(false)}
+                  disabled={isUpdatingPrice}
+                >
+                  Hủy
+                </Button>
+                <Button
+                  type="submit"
+                  disabled={isUpdatingPrice}
+                >
+                  {isUpdatingPrice ? (
+                    <>
+                      <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                      Đang cập nhật...
+                    </>
+                  ) : (
+                    "Cập nhật"
+                  )}
+                </Button>
+              </DialogFooter>
+            </form>
+          </Form>
+        </DialogContent>
+      </Dialog>
+
+      {/* Delete Price Confirmation Dialog */}
+      <AlertDialog open={isDeletePriceDialogOpen} onOpenChange={setIsDeletePriceDialogOpen}>
+        <AlertDialogContent>
+          <AlertDialogHeader>
+            <AlertDialogTitle>Xác nhận xóa giá</AlertDialogTitle>
+            <AlertDialogDescription>
+              Bạn có chắc chắn muốn xóa giá <strong>{formatCurrency(selectedPrice?.price || 0)}</strong> 
+              cho kích thước <strong>{selectedPrice?.productSize?.name}</strong>? 
+              Hành động này không thể hoàn tác.
+            </AlertDialogDescription>
+          </AlertDialogHeader>
+          <AlertDialogFooter>
+            <AlertDialogCancel>Hủy</AlertDialogCancel>
+            <AlertDialogAction 
+              onClick={handleConfirmDeletePrice}
+              disabled={isDeletingPrice}
+              className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
+            >
+              {isDeletingPrice ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Đang xóa...
+                </>
+              ) : (
+                "Xóa"
+              )}
+            </AlertDialogAction>
+          </AlertDialogFooter>
+        </AlertDialogContent>
+      </AlertDialog>
+    </div>
+  );
+} 
\ No newline at end of file
Index: frontend/manager/src/components/forms/create-customer-dialog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Plus, Loader2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { createCustomerSchema, CreateCustomerFormData } from \"@/lib/validations/customer\";\nimport { useCustomerStore } from \"@/stores/customers\";\nimport { toast } from \"sonner\";\n\ninterface CreateCustomerDialogProps {\n  children?: React.ReactNode;\n}\n\nexport function CreateCustomerDialog({ children }: CreateCustomerDialogProps) {\n  const [open, setOpen] = useState(false);\n  const { createCustomer, isCreating } = useCustomerStore();\n\n  const form = useForm<CreateCustomerFormData>({\n    resolver: zodResolver(createCustomerSchema),\n    defaultValues: {\n      lastName: \"\",\n      firstName: \"\",\n      phone: \"\",\n      gender: \"MALE\",\n      username: \"\",\n    },\n  });\n\n  async function onSubmit(data: CreateCustomerFormData) {\n    try {\n      const result = await createCustomer(data);\n      if (result) {\n        toast.success(\"Tạo khách hàng thành công\");\n        form.reset();\n        setOpen(false);\n      }\n    } catch (error) {\n      toast.error(\"Có lỗi xảy ra khi tạo khách hàng\");\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {children || (\n          <Button>\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Thêm khách hàng\n          </Button>\n        )}\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>Thêm khách hàng mới</DialogTitle>\n          <DialogDescription>\n            Tạo khách hàng mới cho hệ thống. Số điện thoại là bắt buộc.\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            {/* Thông báo tự động gán membership */}\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Lưu ý:</strong> Hệ thống sẽ tự động gán loại thành viên có điểm yêu cầu thấp nhất và đặt điểm tích lũy tương ứng cho khách hàng mới.\n              </p>\n            </div>\n\n            {/* Phone - Required */}\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>\n                    Số điện thoại <span className=\"text-red-500\">*</span>\n                  </FormLabel>\n                  <FormControl>\n                    <Input \n                      placeholder=\"0901234567 hoặc +84901234567\" \n                      {...field} \n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Name fields */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"lastName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Họ và tên đệm</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Nguyễn Văn\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"firstName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Tên</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"An\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Gender */}\n            <FormField\n              control={form.control}\n              name=\"gender\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Giới tính</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value || \"\"}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Chọn giới tính\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"MALE\">Nam</SelectItem>\n                      <SelectItem value=\"FEMALE\">Nữ</SelectItem>\n                      <SelectItem value=\"OTHER\">Khác</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Username - Optional */}\n            <FormField\n              control={form.control}\n              name=\"username\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Tên đăng nhập (tùy chọn)</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"customer_username\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <DialogFooter>\n              <Button \n                type=\"button\" \n                variant=\"outline\" \n                onClick={() => setOpen(false)}\n                disabled={isCreating}\n              >\n                Hủy\n              </Button>\n              <Button type=\"submit\" disabled={isCreating}>\n                {isCreating && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                {isCreating ? \"Đang tạo...\" : \"Tạo khách hàng\"}\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-customer-dialog.tsx b/frontend/manager/src/components/forms/create-customer-dialog.tsx
--- a/frontend/manager/src/components/forms/create-customer-dialog.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/components/forms/create-customer-dialog.tsx	(date 1750128336958)
@@ -1,6 +1,6 @@
 "use client";
 
-import { useState, useEffect } from "react";
+import { useState } from "react";
 import { useForm } from "react-hook-form";
 import { zodResolver } from "@hookform/resolvers/zod";
 import { Plus, Loader2 } from "lucide-react";
@@ -25,7 +25,6 @@
 } from "@/components/ui/form";
 import { Input } from "@/components/ui/input";
 import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
-import { Badge } from "@/components/ui/badge";
 import { createCustomerSchema, CreateCustomerFormData } from "@/lib/validations/customer";
 import { useCustomerStore } from "@/stores/customers";
 import { toast } from "sonner";
Index: frontend/manager/src/lib/services/customer-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { apiClient } from \"@/lib/api-client\";\nimport { \n  Customer, \n  BackendCustomerResponse,\n  BackendPaginatedResponse,\n  transformCustomerResponse,\n  CreateCustomerDto, \n  UpdateCustomerDto,\n  BulkDeleteCustomerDto,\n  PaginatedResponse \n} from \"@/types/api\";\nimport { \n  transformCreateCustomerFormData, \n  transformUpdateCustomerFormData,\n  CreateCustomerFormData,\n  UpdateCustomerFormData,\n  BulkDeleteCustomerFormData \n} from \"@/lib/validations/customer\";\n\n/**\n * Customer Service\n * Xử lý tất cả API calls liên quan đến customers\n */\nexport class CustomerService {\n  private readonly endpoint = \"/customers\";\n\n  /**\n   * Lấy danh sách customers với pagination\n   */\n  async getAll(params?: { \n    page?: number; \n    limit?: number;\n    search?: string;\n  }): Promise<PaginatedResponse<Customer>> {\n    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendCustomerResponse>>(\n      this.endpoint, \n      params\n    );\n    \n    // Transform backend response sang frontend format\n    return {\n      data: backendResponse.data.map(transformCustomerResponse),\n      total: backendResponse.pagination.total,\n      page: backendResponse.pagination.page,\n      limit: backendResponse.pagination.limit,\n      totalPages: backendResponse.pagination.totalPages,\n    };\n  }\n\n  /**\n   * Lấy customer theo ID\n   */\n  async getById(id: number): Promise<Customer> {\n    const backendResponse = await apiClient.get<BackendCustomerResponse>(`${this.endpoint}/${id}`);\n    return transformCustomerResponse(backendResponse);\n  }\n\n  /**\n   * Lấy customer theo phone\n   */\n  async getByPhone(phone: string): Promise<Customer> {\n    const backendResponse = await apiClient.get<BackendCustomerResponse>(`${this.endpoint}/phone/${phone}`);\n    return transformCustomerResponse(backendResponse);\n  }\n\n  /**\n   * Lấy customers theo membership type\n   */\n  async getByMembershipType(membershipTypeId: number, params?: {\n    page?: number;\n    limit?: number;\n  }): Promise<PaginatedResponse<Customer>> {\n    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendCustomerResponse>>(\n      `${this.endpoint}/membership-type/${membershipTypeId}`,\n      params\n    );\n    \n    return {\n      data: backendResponse.data.map(transformCustomerResponse),\n      total: backendResponse.pagination.total,\n      page: backendResponse.pagination.page,\n      limit: backendResponse.pagination.limit,\n      totalPages: backendResponse.pagination.totalPages,\n    };\n  }\n\n  /**\n   * Tạo customer mới\n   */\n  async create(formData: CreateCustomerFormData): Promise<Customer> {\n    const backendData = transformCreateCustomerFormData(formData);\n    const backendResponse = await apiClient.post<BackendCustomerResponse>(this.endpoint, backendData);\n    return transformCustomerResponse(backendResponse);\n  }\n\n  /**\n   * Cập nhật customer\n   */\n  async update(id: number, formData: UpdateCustomerFormData): Promise<Customer> {\n    const backendData = transformUpdateCustomerFormData(formData);\n    const backendResponse = await apiClient.patch<BackendCustomerResponse>(`${this.endpoint}/${id}`, backendData);\n    return transformCustomerResponse(backendResponse);\n  }\n\n  /**\n   * Xóa customer\n   */\n  async delete(id: number): Promise<void> {\n    await apiClient.delete(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Bulk delete customers\n   */\n  async bulkDelete(formData: BulkDeleteCustomerFormData): Promise<{\n    deleted: number[];\n    failed: { id: number; reason: string }[];\n    summary: { total: number; success: number; failed: number };\n  }> {\n    return await apiClient.delete(`${this.endpoint}/bulk`, { ids: formData.ids });\n  }\n\n  /**\n   * Test customer controller\n   */\n  async test(): Promise<{ message: string }> {\n    return await apiClient.get(`${this.endpoint}/test/ping`);\n  }\n}\n\n// Export singleton instance\nexport const customerService = new CustomerService(); 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/customer-service.ts b/frontend/manager/src/lib/services/customer-service.ts
--- a/frontend/manager/src/lib/services/customer-service.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/services/customer-service.ts	(date 1750128336958)
@@ -4,9 +4,6 @@
   BackendCustomerResponse,
   BackendPaginatedResponse,
   transformCustomerResponse,
-  CreateCustomerDto, 
-  UpdateCustomerDto,
-  BulkDeleteCustomerDto,
   PaginatedResponse 
 } from "@/types/api";
 import { 
Index: frontend/manager/src/lib/services/membership-type-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { apiClient } from \"@/lib/api-client\";\nimport { \n  MembershipType, \n  BackendMembershipTypeResponse,\n  BackendPaginatedResponse,\n  transformMembershipTypeResponse,\n  CreateMembershipTypeDto, \n  UpdateMembershipTypeDto,\n  PaginatedResponse \n} from \"@/types/api\";\nimport { \n  transformCreateMembershipTypeFormData, \n  transformUpdateMembershipTypeFormData,\n  CreateMembershipTypeFormData,\n  UpdateMembershipTypeFormData \n} from \"@/lib/validations/membership-type\";\n\n/**\n * MembershipType Service\n * Xử lý tất cả API calls liên quan đến membership types\n */\nexport class MembershipTypeService {\n  private readonly endpoint = \"/membership-types\";\n\n  /**\n   * Lấy danh sách membership types với pagination\n   */\n  async getAll(params?: { \n    page?: number; \n    limit?: number;\n  }): Promise<PaginatedResponse<MembershipType>> {\n    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendMembershipTypeResponse>>(\n      this.endpoint, \n      params\n    );\n    \n    // Transform backend response sang frontend format\n    return {\n      data: backendResponse.data.map(transformMembershipTypeResponse),\n      total: backendResponse.pagination.total,\n      page: backendResponse.pagination.page,\n      limit: backendResponse.pagination.limit,\n      totalPages: backendResponse.pagination.totalPages,\n    };\n  }\n\n  /**\n   * Lấy membership type theo ID\n   */\n  async getById(id: number, includeCustomers?: boolean): Promise<MembershipType> {\n    const params = includeCustomers ? { includeCustomers: true } : undefined;\n    const backendResponse = await apiClient.get<BackendMembershipTypeResponse>(`${this.endpoint}/${id}`, params);\n    return transformMembershipTypeResponse(backendResponse);\n  }\n\n  /**\n   * Lấy membership type theo type name\n   */\n  async getByType(type: string, includeCustomers?: boolean): Promise<MembershipType> {\n    const params = includeCustomers ? { includeCustomers: true } : undefined;\n    const backendResponse = await apiClient.get<BackendMembershipTypeResponse>(`${this.endpoint}/by-type/${type}`, params);\n    return transformMembershipTypeResponse(backendResponse);\n  }\n\n  /**\n   * Tạo membership type mới\n   */\n  async create(formData: CreateMembershipTypeFormData): Promise<MembershipType> {\n    const backendData = transformCreateMembershipTypeFormData(formData);\n    const backendResponse = await apiClient.post<BackendMembershipTypeResponse>(this.endpoint, backendData);\n    return transformMembershipTypeResponse(backendResponse);\n  }\n\n  /**\n   * Cập nhật membership type\n   */\n  async update(id: number, formData: UpdateMembershipTypeFormData): Promise<MembershipType> {\n    const backendData = transformUpdateMembershipTypeFormData(formData);\n    const backendResponse = await apiClient.patch<BackendMembershipTypeResponse>(`${this.endpoint}/${id}`, backendData);\n    return transformMembershipTypeResponse(backendResponse);\n  }\n\n  /**\n   * Xóa membership type\n   */\n  async delete(id: number): Promise<void> {\n    await apiClient.delete(`${this.endpoint}/${id}`);\n  }\n}\n\n// Export singleton instance\nexport const membershipTypeService = new MembershipTypeService(); 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/membership-type-service.ts b/frontend/manager/src/lib/services/membership-type-service.ts
--- a/frontend/manager/src/lib/services/membership-type-service.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/services/membership-type-service.ts	(date 1750128336958)
@@ -4,8 +4,6 @@
   BackendMembershipTypeResponse,
   BackendPaginatedResponse,
   transformMembershipTypeResponse,
-  CreateMembershipTypeDto, 
-  UpdateMembershipTypeDto,
   PaginatedResponse 
 } from "@/types/api";
 import { 
Index: frontend/manager/src/app/login/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Metadata } from \"next\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nimport { LoginForm } from \"@/components/forms/login-form\";\n\nexport const metadata: Metadata = {\n  title: \"Đăng nhập | Hệ thống quản lý Cake POS\",\n  description: \"Đăng nhập vào hệ thống quản lý cửa hàng bánh - Dành cho quản lý và nhân viên\",\n};\n\nexport default function LoginPage() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-20 w-20 bg-primary rounded-full flex items-center justify-center mb-6\">\n            <span className=\"text-3xl font-bold text-primary-foreground\">\uD83C\uDF82</span>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n            Cake POS Manager\n          </h1>\n          <p className=\"mt-3 text-lg text-gray-600 dark:text-gray-400\">\n            Đăng nhập vào hệ thống quản lý\n          </p>\n        </div>\n\n        {/* Login Form */}\n        <div className=\"mt-8\">\n          <LoginForm />\n        </div>\n\n        {/* Footer */}\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            Dành cho quản lý và nhân viên cửa hàng\n          </p>\n          <div className=\"mt-4 text-xs text-gray-400 dark:text-gray-500\">\n            <p>\n              Bằng việc đăng nhập, bạn đồng ý với{\" \"}\n              <Link href=\"/terms\" className=\"text-primary hover:underline\">\n                Điều khoản dịch vụ\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/login/page.tsx b/frontend/manager/src/app/login/page.tsx
--- a/frontend/manager/src/app/login/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/login/page.tsx	(date 1750128336958)
@@ -1,5 +1,4 @@
 import { Metadata } from "next";
-import Image from "next/image";
 import Link from "next/link";
 
 import { LoginForm } from "@/components/forms/login-form";
Index: frontend/manager/src/app/users/managers/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Plus, MoreHorizontal, Edit, Trash2, Eye, ArrowUpDown, Loader2, X } from \"lucide-react\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { CreateManagerForm } from \"@/components/forms/create-manager-form\";\nimport { Manager } from \"@/types/api\";\nimport { CreateManagerFormData } from \"@/lib/validations/manager\";\nimport { useManagersStore } from \"@/stores/managers\";\nimport { useUIStore } from \"@/stores/ui\";\n\nfunction formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"vi-VN\", {\n    year: \"numeric\",\n    month: \"2-digit\", \n    day: \"2-digit\",\n  }).format(date);\n}\n\nexport default function ManagersPage() {\n  const router = useRouter();\n  \n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isBulkDeleteDialogOpen, setIsBulkDeleteDialogOpen] = useState(false);\n  const [selectedManager, setSelectedManager] = useState<Manager | null>(null);\n  const [selectedManagers, setSelectedManagers] = useState<number[]>([]);\n\n  const {\n    managers,\n    isLoading,\n    isCreating,\n    isDeleting,\n    fetchManagers,\n    createManager,\n    deleteManager,\n    bulkDeleteManagers,\n  } = useManagersStore();\n\n\n\n  useEffect(() => {\n    fetchManagers();\n  }, [fetchManagers]);\n\n  const handleCreateManager = async (data: CreateManagerFormData) => {\n    try {\n      await createManager(data);\n      setIsCreateDialogOpen(false);\n      toast.success(\"Tạo quản lý thành công!\");\n    } catch (error) {\n      console.error(\"Lỗi tạo quản lý:\", error);\n      toast.error(\"Không thể tạo quản lý. Vui lòng thử lại.\");\n    }\n  };\n\n  const handleDeleteManager = async () => {\n    if (!selectedManager) return;\n    \n    try {\n      await deleteManager(selectedManager.id);\n      setIsDeleteDialogOpen(false);\n      setSelectedManager(null);\n      toast.success(\"Xóa quản lý thành công!\");\n    } catch (error) {\n      console.error(\"Lỗi xóa quản lý:\", error);\n      toast.error(\"Không thể xóa quản lý. Vui lòng thử lại.\");\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (selectedManagers.length === 0) return;\n    \n    try {\n      const result = await bulkDeleteManagers(selectedManagers);\n      setIsBulkDeleteDialogOpen(false);\n      setSelectedManagers([]);\n      \n      if (result.summary.failed > 0) {\n        toast.warning(`Xóa thành công ${result.summary.success} quản lý. ${result.summary.failed} quản lý không thể xóa.`);\n      } else {\n        toast.success(`Xóa thành công ${result.summary.success} quản lý!`);\n      }\n    } catch (error) {\n      console.error(\"Lỗi xóa nhiều quản lý:\", error);\n      toast.error(\"Không thể xóa các quản lý đã chọn. Vui lòng thử lại.\");\n    }\n  };\n\n  const openDeleteDialog = (manager: Manager) => {\n    setSelectedManager(manager);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const openBulkDeleteDialog = () => {\n    setIsBulkDeleteDialogOpen(true);\n  };\n\n  const handleSelectManager = (managerId: number, selected: boolean) => {\n    if (selected) {\n      setSelectedManagers([...selectedManagers, managerId]);\n    } else {\n      setSelectedManagers(selectedManagers.filter(id => id !== managerId));\n    }\n  };\n\n  const handleSelectAll = (selected: boolean) => {\n    if (selected) {\n      setSelectedManagers(managers.map(m => m.id));\n    } else {\n      setSelectedManagers([]);\n    }\n  };\n\n  const clearSelection = () => {\n    setSelectedManagers([]);\n  };\n\n  const columns: ColumnDef<Manager>[] = [\n    {\n      id: \"select\",\n      header: ({ table }) => (\n        <Checkbox\n          checked={table.getIsAllPageRowsSelected()}\n          onCheckedChange={(value) => {\n            table.toggleAllPageRowsSelected(!!value);\n            handleSelectAll(!!value);\n          }}\n          aria-label=\"Chọn tất cả\"\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={selectedManagers.includes(row.original.id)}\n          onCheckedChange={(value) => {\n            row.toggleSelected(!!value);\n            handleSelectManager(row.original.id, !!value);\n          }}\n          aria-label=\"Chọn hàng\"\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n      accessorKey: \"name\",\n      header: \"Quản Lý\",\n      cell: ({ row }) => {\n        const manager = row.original;\n        return (\n          <div className=\"flex items-center gap-3\">\n            <Avatar className=\"h-8 w-8\">\n              <AvatarImage src={manager.avatar} alt={manager.name} />\n              <AvatarFallback>\n                {manager.name ? manager.name.split(' ').map(n => n[0]).join('') : 'N/A'}\n              </AvatarFallback>\n            </Avatar>\n            <div>\n              <div className=\"font-medium\">{manager.name}</div>\n              <div className=\"text-sm text-muted-foreground\">ID: {manager.id}</div>\n            </div>\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: \"email\",\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Email\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        );\n      },\n    },\n    {\n      accessorKey: \"phone\",\n      header: \"Số điện thoại\",\n    },\n    {\n      accessorKey: \"isActive\",\n      header: \"Trạng Thái\",\n      cell: ({ row }) => {\n        const isActive = row.getValue(\"isActive\") as boolean;\n        return (\n          <Badge variant={isActive ? \"default\" : \"secondary\"}>\n            {isActive ? \"Hoạt Động\" : \"Vô Hiệu Hóa\"}\n          </Badge>\n        );\n      },\n    },\n    {\n      accessorKey: \"createdAt\",\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Ngày Tạo\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        );\n      },\n      cell: ({ row }) => {\n        const date = row.getValue(\"createdAt\") as Date;\n        return formatDate(date);\n      },\n    },\n    {\n      id: \"actions\",\n      header: \"Thao Tác\",\n      cell: ({ row }) => {\n        const manager = row.original;\n        \n        return (\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\">\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem onClick={() => router.push(`/users/managers/${manager.id}`)}>\n                <Eye className=\"mr-2 h-4 w-4\" />\n                Xem Chi Tiết\n              </DropdownMenuItem>\n              <DropdownMenuItem \n                className=\"text-destructive\"\n                onClick={() => openDeleteDialog(manager)}\n              >\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                Xóa\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        );\n      },\n    },\n  ];\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Page Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Quản Lý</h1>\n          <p className=\"text-muted-foreground\">\n            Quản lý thông tin và quyền hạn của các quản lý viên\n          </p>\n        </div>\n        <Button onClick={() => setIsCreateDialogOpen(true)}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          Thêm Quản Lý\n        </Button>\n      </div>\n\n      {/* Bulk Actions Toolbar */}\n      {selectedManagers.length > 0 && (\n        <Card className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-muted-foreground\">\n                Đã chọn {selectedManagers.length} quản lý\n              </span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={clearSelection}\n              >\n                <X className=\"h-4 w-4 mr-1\" />\n                Bỏ chọn\n              </Button>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"destructive\"\n                size=\"sm\"\n                onClick={openBulkDeleteDialog}\n                disabled={isDeleting}\n              >\n                <Trash2 className=\"h-4 w-4 mr-2\" />\n                Xóa đã chọn\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Managers Data Table */}\n      <Card>\n        <CardContent className=\"p-0\">\n          <DataTable \n            columns={columns} \n            data={managers}\n            searchKey=\"name\"\n            searchPlaceholder=\"Tìm kiếm theo tên hoặc email...\"\n          />\n        </CardContent>\n      </Card>\n\n      {/* Create Manager Dialog */}\n      <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Thêm Quản Lý Mới</DialogTitle>\n            <DialogDescription>\n              Điền thông tin để tạo tài khoản quản lý mới\n            </DialogDescription>\n          </DialogHeader>\n          <CreateManagerForm \n            onSubmit={handleCreateManager}\n            isSubmitting={isCreating}\n            onCancel={() => setIsCreateDialogOpen(false)}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Xác nhận xóa</AlertDialogTitle>\n            <AlertDialogDescription>\n              Bạn có chắc chắn muốn xóa quản lý <strong>{selectedManager?.name}</strong>? \n              Hành động này không thể hoàn tác.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Hủy</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleDeleteManager}\n              disabled={isDeleting}\n              className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n            >\n              {isDeleting ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Đang xóa...\n                </>\n              ) : (\n                \"Xóa\"\n              )}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Bulk Delete Confirmation Dialog */}\n      <AlertDialog open={isBulkDeleteDialogOpen} onOpenChange={setIsBulkDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Xác nhận xóa nhiều quản lý</AlertDialogTitle>\n            <AlertDialogDescription>\n              Bạn có chắc chắn muốn xóa {selectedManagers.length} quản lý đã chọn? \n              Hành động này không thể hoàn tác.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Hủy</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleBulkDelete}\n              disabled={isDeleting}\n              className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n            >\n              {isDeleting ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Đang xóa...\n                </>\n              ) : (\n                `Xóa ${selectedManagers.length} quản lý`\n              )}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/managers/page.tsx b/frontend/manager/src/app/users/managers/page.tsx
--- a/frontend/manager/src/app/users/managers/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/managers/page.tsx	(date 1750127289857)
@@ -2,7 +2,7 @@
 
 import { useEffect, useState } from "react";
 import { useRouter } from "next/navigation";
-import { Plus, MoreHorizontal, Edit, Trash2, Eye, ArrowUpDown, Loader2, X } from "lucide-react";
+import { Plus, MoreHorizontal, Trash2, Eye, ArrowUpDown, Loader2, X } from "lucide-react";
 import { ColumnDef } from "@tanstack/react-table";
 import { toast } from "sonner";
 
@@ -39,7 +39,6 @@
 import { Manager } from "@/types/api";
 import { CreateManagerFormData } from "@/lib/validations/manager";
 import { useManagersStore } from "@/stores/managers";
-import { useUIStore } from "@/stores/ui";
 
 function formatDate(date: Date): string {
   return new Intl.DateTimeFormat("vi-VN", {
Index: frontend/manager/src/app/users/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Users, \n  User, \n  UserCheck, \n  UserX,\n  ArrowRight,\n  Plus\n} from \"lucide-react\";\nimport Link from \"next/link\";\n\nconst userCategories = [\n  {\n    title: \"Quản Lý\",\n    description: \"Quản lý thông tin và quyền hạn của các quản lý viên\",\n    icon: User,\n    href: \"/users/managers\",\n    count: 3,\n    color: \"text-blue-600\"\n  },\n  {\n    title: \"Nhân Viên\", \n    description: \"Quản lý thông tin nhân viên trong hệ thống\",\n    icon: UserCheck,\n    href: \"/users/employees\",\n    count: 12,\n    color: \"text-green-600\"\n  },\n  {\n    title: \"Khách Hàng\",\n    description: \"Quản lý thông tin khách hàng và lịch sử mua hàng\",\n    icon: UserX,\n    href: \"/users/customers\", \n    count: 248,\n    color: \"text-purple-600\"\n  }\n];\n\nexport default function UsersPage() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Page Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Người Dùng</h1>\n          <p className=\"text-muted-foreground\">\n            Quản lý tất cả người dùng trong hệ thống\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\">\n            <Plus className=\"mr-2 h-4 w-4\" />\n            Thêm Khách Hàng\n          </Button>\n          <Button>\n            <Plus className=\"mr-2 h-4 w-4\" />\n            Thêm Nhân Viên\n          </Button>\n        </div>\n      </div>\n\n      {/* Statistics Overview */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        {userCategories.map((category) => {\n          const Icon = category.icon;\n          return (\n            <Card key={category.title}>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">\n                  {category.title}\n                </CardTitle>\n                <Icon className={`h-4 w-4 ${category.color}`} />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{category.count}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Tổng số {category.title.toLowerCase()}\n                </p>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* User Categories */}\n      <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-3\">\n        {userCategories.map((category) => {\n          const Icon = category.icon;\n          return (\n            <Card key={category.title} className=\"group hover:shadow-md transition-shadow\">\n              <CardHeader>\n                <div className=\"flex items-center gap-3\">\n                  <div className={`p-2 rounded-lg bg-muted ${category.color}`}>\n                    <Icon className=\"h-6 w-6\" />\n                  </div>\n                  <div>\n                    <CardTitle className=\"text-lg\">{category.title}</CardTitle>\n                    <CardDescription className=\"text-sm\">\n                      {category.count} người dùng\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-sm text-muted-foreground mb-4\">\n                  {category.description}\n                </p>\n                <Button asChild variant=\"outline\" className=\"w-full group-hover:bg-primary group-hover:text-primary-foreground transition-colors\">\n                  <Link href={category.href}>\n                    Quản lý {category.title}\n                    <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Link>\n                </Button>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Recent Activities */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Hoạt Động Gần Đây</CardTitle>\n          <CardDescription>\n            Các hoạt động liên quan đến người dùng trong 7 ngày qua\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-4 p-3 bg-muted/50 rounded-lg\">\n              <div className=\"p-2 bg-green-100 rounded-full\">\n                <UserCheck className=\"h-4 w-4 text-green-600\" />\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Nhân viên mới được thêm</p>\n                <p className=\"text-xs text-muted-foreground\">Phạm Thị Lan - Kế Toán</p>\n              </div>\n              <span className=\"text-xs text-muted-foreground\">2 giờ trước</span>\n            </div>\n            \n            <div className=\"flex items-center gap-4 p-3 bg-muted/50 rounded-lg\">\n              <div className=\"p-2 bg-purple-100 rounded-full\">\n                <UserX className=\"h-4 w-4 text-purple-600\" />\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Khách hàng mới đăng ký</p>\n                <p className=\"text-xs text-muted-foreground\">Nguyễn Thị Mai - VIP Member</p>\n              </div>\n              <span className=\"text-xs text-muted-foreground\">5 giờ trước</span>\n            </div>\n            \n            <div className=\"flex items-center gap-4 p-3 bg-muted/50 rounded-lg\">\n              <div className=\"p-2 bg-blue-100 rounded-full\">\n                <User className=\"h-4 w-4 text-blue-600\" />\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Cập nhật quyền hạn quản lý</p>\n                <p className=\"text-xs text-muted-foreground\">Trần Thị Bình - Thêm quyền báo cáo</p>\n              </div>\n              <span className=\"text-xs text-muted-foreground\">1 ngày trước</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/page.tsx b/frontend/manager/src/app/users/page.tsx
--- a/frontend/manager/src/app/users/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/page.tsx	(date 1750127312306)
@@ -1,7 +1,6 @@
 import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
 import { Button } from "@/components/ui/button";
 import { 
-  Users, 
   User, 
   UserCheck, 
   UserX,
Index: frontend/manager/eslint.config.mjs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { dirname } from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { FlatCompat } from \"@eslint/eslintrc\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconst compat = new FlatCompat({\n  baseDirectory: __dirname,\n});\n\nconst eslintConfig = [\n  ...compat.extends(\"next/core-web-vitals\", \"next/typescript\"),\n];\n\nexport default eslintConfig;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/eslint.config.mjs b/frontend/manager/eslint.config.mjs
--- a/frontend/manager/eslint.config.mjs	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/eslint.config.mjs	(date 1750128284898)
@@ -1,6 +1,7 @@
 import { dirname } from "path";
 import { fileURLToPath } from "url";
 import { FlatCompat } from "@eslint/eslintrc";
+import unusedImports from "eslint-plugin-unused-imports";
 
 const __filename = fileURLToPath(import.meta.url);
 const __dirname = dirname(__filename);
@@ -11,6 +12,26 @@
 
 const eslintConfig = [
   ...compat.extends("next/core-web-vitals", "next/typescript"),
+  {
+    plugins: {
+      "unused-imports": unusedImports,
+    },
+  },
+  {
+    rules: {
+      "no-unused-vars": "off",
+      "unused-imports/no-unused-imports": "error",
+      "unused-imports/no-unused-vars": [
+          "warn",
+          {
+              "vars": "all",
+              "varsIgnorePattern": "^_",
+              "args": "after-used",
+              "argsIgnorePattern": "^_",
+          },
+      ]
+  }
+  },
 ];
 
 export default eslintConfig;
Index: frontend/manager/src/components/forms/create-manager-form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Eye, EyeOff, Loader2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { \n  createManagerSchema,\n  CreateManagerFormData\n} from \"@/lib/validations/manager\";\n\ninterface CreateManagerFormProps {\n  onSubmit: (data: CreateManagerFormData) => Promise<void>;\n  onCancel?: () => void;\n  isLoading?: boolean;\n  isSubmitting?: boolean;\n  defaultValues?: Partial<CreateManagerFormData>;\n  isEdit?: boolean;\n}\n\nexport function CreateManagerForm({ \n  onSubmit, \n  onCancel, \n  isLoading = false,\n  isSubmitting = false,\n  defaultValues,\n  isEdit = false\n}: CreateManagerFormProps) {\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const form = useForm<CreateManagerFormData>({\n    resolver: zodResolver(createManagerSchema),\n    defaultValues: {\n      first_name: defaultValues?.first_name || \"\",\n      last_name: defaultValues?.last_name || \"\",\n      email: defaultValues?.email || \"\",\n      phone: defaultValues?.phone || \"\",\n      gender: defaultValues?.gender || undefined,\n      username: defaultValues?.username || \"\",\n    },\n  });\n\n  const handleSubmit = async (data: CreateManagerFormData) => {\n    try {\n      await onSubmit(data);\n    } catch (error) {\n      console.error(\"Lỗi submit form:\", error);\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Họ */}\n          <FormField\n            control={form.control}\n            name=\"last_name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>\n                  Họ <span className=\"text-destructive\">*</span>\n                </FormLabel>\n                <FormControl>\n                  <Input \n                    placeholder=\"Ví dụ: Nguyễn\" \n                    {...field} \n                    disabled={isLoading}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Họ của quản lý viên\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Tên */}\n          <FormField\n            control={form.control}\n            name=\"first_name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>\n                  Tên <span className=\"text-destructive\">*</span>\n                </FormLabel>\n                <FormControl>\n                  <Input \n                    placeholder=\"Ví dụ: Văn An\" \n                    {...field} \n                    disabled={isLoading}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Tên của quản lý viên\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Email */}\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                Email <span className=\"text-destructive\">*</span>\n              </FormLabel>\n              <FormControl>\n                <Input \n                  type=\"email\"\n                  placeholder=\"Ví dụ: an.nguyen@company.com\" \n                  {...field} \n                  disabled={isLoading}\n                />\n              </FormControl>\n              <FormDescription>\n                Email liên hệ của quản lý viên\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Số điện thoại */}\n          <FormField\n            control={form.control}\n            name=\"phone\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>\n                  Số điện thoại <span className=\"text-destructive\">*</span>\n                </FormLabel>\n                <FormControl>\n                  <Input \n                    type=\"tel\"\n                    placeholder=\"Ví dụ: 0901234567\" \n                    {...field} \n                    disabled={isLoading}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Số điện thoại liên hệ\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Giới tính */}\n          <FormField\n            control={form.control}\n            name=\"gender\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Giới tính</FormLabel>\n                <FormControl>\n                  <select \n                    className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    {...field} \n                    disabled={isLoading}\n                  >\n                    <option value=\"\">Chọn giới tính</option>\n                    <option value=\"MALE\">Nam</option>\n                    <option value=\"FEMALE\">Nữ</option>\n                  </select>\n                </FormControl>\n                <FormDescription>\n                  Giới tính của quản lý viên (tùy chọn)\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Username */}\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                Tên đăng nhập <span className=\"text-destructive\">*</span>\n              </FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"Ví dụ: manager1\" \n                  {...field} \n                  disabled={isLoading}\n                />\n              </FormControl>\n              <FormDescription>\n                Tên đăng nhập vào hệ thống\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Thông báo mật khẩu mặc định */}\n        <div className=\"rounded-lg border border-blue-200 bg-blue-50 p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-blue-800\">\n                Thông tin mật khẩu\n              </h3>\n              <div className=\"mt-2 text-sm text-blue-700\">\n                <p>\n                  Mật khẩu mặc định sẽ là <strong>\"12345678\"</strong> - quản lý có thể đổi sau khi đăng nhập lần đầu.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Buttons */}\n        <div className=\"flex justify-end space-x-4\">\n          {onCancel && (\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={onCancel}\n              disabled={isLoading || isSubmitting}\n            >\n              Hủy\n            </Button>\n          )}\n          <Button type=\"submit\" disabled={isLoading || isSubmitting}>\n            {(isLoading || isSubmitting) && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n            {isEdit ? \"Cập nhật quản lý\" : \"Tạo quản lý\"}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/create-manager-form.tsx b/frontend/manager/src/components/forms/create-manager-form.tsx
--- a/frontend/manager/src/components/forms/create-manager-form.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/components/forms/create-manager-form.tsx	(date 1750127897365)
@@ -3,7 +3,7 @@
 import { useState } from "react";
 import { useForm } from "react-hook-form";
 import { zodResolver } from "@hookform/resolvers/zod";
-import { Eye, EyeOff, Loader2 } from "lucide-react";
+import { Loader2 } from "lucide-react";
 
 import { Button } from "@/components/ui/button";
 import {
@@ -16,7 +16,7 @@
   FormMessage,
 } from "@/components/ui/form";
 import { Input } from "@/components/ui/input";
-import { Checkbox } from "@/components/ui/checkbox";
+
 import { 
   createManagerSchema,
   CreateManagerFormData
@@ -230,7 +230,7 @@
               </h3>
               <div className="mt-2 text-sm text-blue-700">
                 <p>
-                  Mật khẩu mặc định sẽ là <strong>"12345678"</strong> - quản lý có thể đổi sau khi đăng nhập lần đầu.
+                  Mật khẩu mặc định sẽ là <strong>&ldquo;12345678&rdquo;</strong> - quản lý có thể đổi sau khi đăng nhập lần đầu.
                 </p>
               </div>
             </div>
Index: frontend/manager/src/app/users/customers/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Plus, MoreHorizontal, Edit, Trash2, Eye, ArrowUpDown, Phone, CreditCard, Calendar, Users, Crown, Trash } from \"lucide-react\";\nimport { ColumnDef } from \"@tanstack/react-table\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { AuthGuard } from \"@/components/auth/auth-guard\";\nimport { CreateCustomerDialog } from \"@/components/forms/create-customer-dialog\";\nimport { CreateMembershipTypeDialog } from \"@/components/forms/create-membership-type-dialog\";\nimport { Customer, MembershipType } from \"@/types/api\";\nimport { useCustomerStore } from \"@/stores/customers\";\nimport { useMembershipTypeStore } from \"@/stores/membership-types\";\nimport { toast } from \"sonner\";\n\n\n\nfunction formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"vi-VN\", {\n    year: \"numeric\",\n    month: \"2-digit\", \n    day: \"2-digit\",\n  }).format(date);\n}\n\nfunction formatCurrency(amount: number): string {\n  return new Intl.NumberFormat(\"vi-VN\", {\n    style: \"currency\",\n    currency: \"VND\",\n  }).format(amount);\n}\n\nfunction getGenderLabel(gender?: string): string {\n  switch (gender) {\n    case 'MALE': return 'Nam';\n    case 'FEMALE': return 'Nữ';\n    case 'OTHER': return 'Khác';\n    default: return 'Không xác định';\n  }\n}\n\n// Customer columns function\nconst createCustomerColumns = (\n  router: any, \n  membershipTypes: MembershipType[],\n  selectedIds: Set<number>,\n  onSelectCustomer: (id: number) => void,\n  onDeselectCustomer: (id: number) => void\n): ColumnDef<Customer>[] => [\n  {\n    id: \"select\",\n    header: ({ table }) => {\n      const allRowsSelected = table.getRowModel().rows.every(row => selectedIds.has(row.original.id));\n      const someRowsSelected = table.getRowModel().rows.some(row => selectedIds.has(row.original.id));\n      \n      return (\n        <Checkbox\n          checked={allRowsSelected}\n          onCheckedChange={(value) => {\n            if (value) {\n              table.getRowModel().rows.forEach(row => onSelectCustomer(row.original.id));\n            } else {\n              table.getRowModel().rows.forEach(row => onDeselectCustomer(row.original.id));\n            }\n          }}\n          aria-label=\"Chọn tất cả\"\n        />\n      );\n    },\n    cell: ({ row }) => (\n      <Checkbox\n        checked={selectedIds.has(row.original.id)}\n        onCheckedChange={(value) => {\n          if (value) {\n            onSelectCustomer(row.original.id);\n          } else {\n            onDeselectCustomer(row.original.id);\n          }\n        }}\n        aria-label=\"Chọn hàng\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"name\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Khách Hàng\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n      const customer = row.original;\n      return (\n        <div className=\"flex items-center gap-3\">\n          <div className=\"h-8 w-8 rounded-full bg-primary/10 flex items-center justify-center\">\n            <Users className=\"h-4 w-4\" />\n          </div>\n          <div>\n            <div className=\"font-medium\">{customer.name}</div>\n            <div className=\"text-sm text-muted-foreground\">ID: {customer.id}</div>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"phone\",\n    header: \"Điện Thoại\",\n    cell: ({ row }) => {\n      const phone = row.getValue(\"phone\") as string;\n      return (\n        <div className=\"flex items-center gap-2\">\n          <Phone className=\"h-4 w-4 text-muted-foreground\" />\n          <span>{phone}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"membershipTypeId\",\n    header: \"Loại Thành Viên\",\n    cell: ({ row }) => {\n      const membershipTypeId = row.original.membershipTypeId;\n      const membershipType = membershipTypes.find(mt => mt.id === membershipTypeId);\n      \n      if (!membershipType) return <span className=\"text-muted-foreground\">Chưa có</span>;\n      \n      return (\n        <div className=\"flex items-center gap-2\">\n          <Crown className=\"h-4 w-4 text-yellow-600\" />\n          <Badge variant=\"secondary\">\n            {membershipType.type}\n          </Badge>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"currentPoints\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Điểm Tích Lũy\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n      const points = row.getValue(\"currentPoints\") as number;\n      return (\n        <div className=\"flex items-center gap-2\">\n          <CreditCard className=\"h-4 w-4 text-blue-600\" />\n          <span className=\"font-medium\">{points || 0} điểm</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"gender\",\n    header: \"Giới Tính\",\n    cell: ({ row }) => {\n      const gender = row.getValue(\"gender\") as string;\n      return <Badge variant=\"outline\">{getGenderLabel(gender)}</Badge>;\n    },\n  },\n  {\n    accessorKey: \"createdAt\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Ngày Tạo\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n      const date = row.getValue(\"createdAt\") as Date;\n      return (\n        <div className=\"flex items-center gap-2\">\n          <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n          {formatDate(date)}\n        </div>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    header: \"Thao Tác\",\n    cell: ({ row }) => {\n      const customer = row.original;\n      \n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" size=\"icon\">\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuItem onClick={() => router.push(`/users/customers/${customer.id}`)}>\n              <Eye className=\"mr-2 h-4 w-4\" />\n              Xem Chi Tiết\n            </DropdownMenuItem>\n            <DropdownMenuItem className=\"text-destructive\">\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Xóa\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\n// Membership Type columns function  \nconst createMembershipTypeColumns = (router: any): ColumnDef<MembershipType>[] => [\n  {\n    accessorKey: \"type\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Loại Thành Viên\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n      const type = row.getValue(\"type\") as string;\n      return (\n        <div className=\"flex items-center gap-2\">\n          <Crown className=\"h-4 w-4 text-yellow-600\" />\n          <span className=\"font-medium\">{type}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"discountValue\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Giảm Giá\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n      const discount = row.getValue(\"discountValue\") as number;\n      return (\n        <Badge variant=\"secondary\">\n          {discount}%\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"requiredPoint\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Điểm Yêu Cầu\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n      const points = row.getValue(\"requiredPoint\") as number;\n      return (\n        <div className=\"flex items-center gap-2\">\n          <CreditCard className=\"h-4 w-4 text-blue-600\" />\n          <span>{points} điểm</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"description\",\n    header: \"Mô Tả\",\n    cell: ({ row }) => {\n      const description = row.getValue(\"description\") as string;\n      return description ? (\n        <span className=\"max-w-[200px] truncate block\" title={description}>\n          {description}\n        </span>\n      ) : (\n        <span className=\"text-muted-foreground\">Không có mô tả</span>\n      );\n    },\n  },\n  {\n    accessorKey: \"isActive\",\n    header: \"Trạng Thái\",\n    cell: ({ row }) => {\n      const isActive = row.getValue(\"isActive\") as boolean;\n      return (\n        <Badge variant={isActive ? \"default\" : \"secondary\"}>\n          {isActive ? \"Hoạt Động\" : \"Vô Hiệu Hóa\"}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"validUntil\",\n    header: \"Có Hiệu Lực Đến\",\n    cell: ({ row }) => {\n      const validUntil = row.getValue(\"validUntil\") as Date;\n      return validUntil ? (\n        <div className=\"flex items-center gap-2\">\n          <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n          {formatDate(validUntil)}\n        </div>\n      ) : (\n        <span className=\"text-muted-foreground\">Vĩnh viễn</span>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    header: \"Thao Tác\",\n    cell: ({ row }) => {\n      const membershipType = row.original;\n      \n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" size=\"icon\">\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuItem onClick={() => router.push(`/users/membership-types/${membershipType.id}`)}>\n              <Eye className=\"mr-2 h-4 w-4\" />\n              Xem Chi Tiết\n            </DropdownMenuItem>\n            <DropdownMenuItem className=\"text-destructive\">\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Xóa\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\nexport default function CustomersPage() {\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [showBulkDeleteDialog, setShowBulkDeleteDialog] = useState(false);\n  \n  const { \n    customers, \n    currentPage: customerPage,\n    totalPages: customerTotalPages,\n    totalItems: customerTotal,\n    selectedIds,\n    fetchCustomers,\n    isLoading: customersLoading,\n    isDeleting,\n    selectCustomer,\n    deselectCustomer,\n    selectAllCustomers,\n    deselectAllCustomers,\n    bulkDeleteCustomers\n  } = useCustomerStore();\n  \n  const { \n    membershipTypes, \n    currentPage: membershipPage,\n    totalPages: membershipTotalPages,\n    totalItems: membershipTotal,\n    fetchMembershipTypes,\n    isLoading: membershipTypesLoading \n  } = useMembershipTypeStore();\n\n  // Load data when component mounts\n  useEffect(() => {\n    if (activeTab === \"customers\") {\n      fetchCustomers();\n    } else if (activeTab === \"membership-types\") {\n      fetchMembershipTypes();\n    }\n  }, [activeTab, fetchCustomers, fetchMembershipTypes]);\n\n  // Bulk delete handler\n  const handleBulkDelete = async () => {\n    const selectedArray = Array.from(selectedIds);\n    if (selectedArray.length === 0) return;\n\n    try {\n      await bulkDeleteCustomers({ ids: selectedArray });\n      setShowBulkDeleteDialog(false);\n      deselectAllCustomers();\n    } catch (error) {\n      // Error is handled in store\n    }\n  };\n\n  return (\n    <AuthGuard>\n      <div className=\"space-y-6\">\n        {/* Page Header */}\n        <div>\n          <h1 className=\"text-3xl font-bold\">Quản Lý Khách Hàng</h1>\n          <p className=\"text-muted-foreground\">\n            Quản lý thông tin khách hàng và loại thành viên\n          </p>\n        </div>\n\n        {/* Statistics Cards */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Tổng Khách Hàng</CardTitle>\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n                         <CardContent>\n               <div className=\"text-2xl font-bold\">{customerTotal}</div>\n               <p className=\"text-xs text-muted-foreground\">\n                 Trang {customerPage}/{customerTotalPages}\n               </p>\n             </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Loại Thành Viên</CardTitle>\n              <Crown className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n                         <CardContent>\n               <div className=\"text-2xl font-bold\">{membershipTotal}</div>\n               <p className=\"text-xs text-muted-foreground\">\n                 {membershipTypes.filter(mt => mt.isActive).length} đang hoạt động\n               </p>\n             </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Điểm Tích Lũy</CardTitle>\n              <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {customers.reduce((acc, c) => acc + (c.currentPoints || 0), 0)}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Tổng điểm của tất cả khách hàng\n              </p>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Trung Bình</CardTitle>\n              <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {customers.length > 0 \n                  ? Math.round(customers.reduce((acc, c) => acc + (c.currentPoints || 0), 0) / customers.length)\n                  : 0\n                }\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Điểm tích lũy/khách hàng\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Tabs */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n          <TabsList>\n            <TabsTrigger value=\"customers\">Khách Hàng</TabsTrigger>\n            <TabsTrigger value=\"membership-types\">Loại Thành Viên</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"customers\" className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-xl font-semibold\">Danh Sách Khách Hàng</h2>\n                <p className=\"text-sm text-muted-foreground\">\n                  Quản lý thông tin và lịch sử của khách hàng\n                </p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {selectedIds.size > 0 && (\n                  <AlertDialog open={showBulkDeleteDialog} onOpenChange={setShowBulkDeleteDialog}>\n                    <AlertDialogTrigger asChild>\n                      <Button variant=\"destructive\" size=\"sm\">\n                        <Trash className=\"mr-2 h-4 w-4\" />\n                        Xóa ({selectedIds.size})\n                      </Button>\n                    </AlertDialogTrigger>\n                    <AlertDialogContent>\n                      <AlertDialogHeader>\n                        <AlertDialogTitle>Xác nhận xóa khách hàng</AlertDialogTitle>\n                        <AlertDialogDescription>\n                          Bạn có chắc chắn muốn xóa {selectedIds.size} khách hàng đã chọn? \n                          Hành động này không thể hoàn tác.\n                        </AlertDialogDescription>\n                      </AlertDialogHeader>\n                      <AlertDialogFooter>\n                        <AlertDialogCancel>Hủy</AlertDialogCancel>\n                        <AlertDialogAction\n                          onClick={handleBulkDelete}\n                          disabled={isDeleting}\n                          className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n                        >\n                          {isDeleting ? \"Đang xóa...\" : \"Xóa\"}\n                        </AlertDialogAction>\n                      </AlertDialogFooter>\n                    </AlertDialogContent>\n                  </AlertDialog>\n                )}\n                <CreateCustomerDialog>\n                  <Button>\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    Thêm Khách Hàng\n                  </Button>\n                </CreateCustomerDialog>\n              </div>\n            </div>\n\n            <Card>\n              <CardContent className=\"p-0\">\n                                                 <DataTable \n                  columns={createCustomerColumns(router, membershipTypes, selectedIds, selectCustomer, deselectCustomer)} \n                  data={customers}\n                  searchKey=\"name\"\n                  searchPlaceholder=\"Tìm kiếm theo tên hoặc số điện thoại...\"\n                />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"membership-types\" className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-xl font-semibold\">Loại Thành Viên</h2>\n                <p className=\"text-sm text-muted-foreground\">\n                  Quản lý các loại thành viên và quyền lợi\n                </p>\n              </div>\n              <CreateMembershipTypeDialog>\n                <Button>\n                  <Plus className=\"mr-2 h-4 w-4\" />\n                  Thêm Loại Thành Viên\n                </Button>\n              </CreateMembershipTypeDialog>\n            </div>\n\n            <Card>\n              <CardContent className=\"p-0\">\n                                                 <DataTable \n                  columns={createMembershipTypeColumns(router)} \n                  data={membershipTypes}\n                  searchKey=\"type\"\n                  searchPlaceholder=\"Tìm kiếm theo tên loại thành viên...\"\n                />\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </AuthGuard>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/customers/page.tsx b/frontend/manager/src/app/users/customers/page.tsx
--- a/frontend/manager/src/app/users/customers/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/customers/page.tsx	(date 1750128336958)
@@ -2,11 +2,11 @@
 
 import { useEffect, useState } from "react";
 import { useRouter } from "next/navigation";
-import { Plus, MoreHorizontal, Edit, Trash2, Eye, ArrowUpDown, Phone, CreditCard, Calendar, Users, Crown, Trash } from "lucide-react";
+import { Plus, MoreHorizontal, Trash2, Eye, ArrowUpDown, Phone, CreditCard, Calendar, Users, Crown, Trash } from "lucide-react";
 import { ColumnDef } from "@tanstack/react-table";
 
 import { Button } from "@/components/ui/button";
-import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
 import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
 import {
   DropdownMenu,
@@ -27,7 +27,6 @@
 } from "@/components/ui/alert-dialog";
 import { Checkbox } from "@/components/ui/checkbox";
 import { Badge } from "@/components/ui/badge";
-import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
 import { DataTable } from "@/components/ui/data-table";
 import { AuthGuard } from "@/components/auth/auth-guard";
 import { CreateCustomerDialog } from "@/components/forms/create-customer-dialog";
@@ -35,7 +34,6 @@
 import { Customer, MembershipType } from "@/types/api";
 import { useCustomerStore } from "@/stores/customers";
 import { useMembershipTypeStore } from "@/stores/membership-types";
-import { toast } from "sonner";
 
 
 
Index: frontend/manager/src/app/users/employees/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { \n  Plus, \n  Search, \n  MoreHorizontal, \n  Trash2, \n  Users, \n  Eye,\n  ArrowUpDown,\n  Loader2,\n  X\n} from \"lucide-react\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { AuthGuard } from \"@/components/auth/auth-guard\";\nimport { CreateEmployeeDialog } from \"@/components/forms/create-employee-dialog\";\nimport { useEmployeeStore } from \"@/stores/employees\";\nimport { Employee } from \"@/types/api\";\nimport { CreateEmployeeFormData } from \"@/lib/validations/employee\";\n\nfunction formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"vi-VN\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  }).format(date);\n}\n\nexport default function EmployeesPage() {\n  const router = useRouter();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isBulkDeleteDialogOpen, setIsBulkDeleteDialogOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null);\n  const [selectedEmployees, setSelectedEmployees] = useState<number[]>([]);\n  \n  const {\n    employees,\n    totalItems,\n    isLoading,\n    error,\n    currentPage,\n    totalPages,\n    fetchEmployees,\n    createEmployee,\n    deleteEmployee,\n    bulkDeleteEmployees,\n    isCreating,\n    isDeleting,\n  } = useEmployeeStore();\n\n  useEffect(() => {\n    fetchEmployees({ page: 1, limit: 10 });\n  }, [fetchEmployees]);\n\n  const handleCreateEmployee = async (data: CreateEmployeeFormData) => {\n    try {\n      await createEmployee(data);\n      setShowCreateDialog(false);\n      toast.success(\"Tạo nhân viên thành công!\");\n    } catch (error) {\n      console.error(\"Lỗi tạo nhân viên:\", error);\n      toast.error(\"Lỗi khi tạo nhân viên. Vui lòng thử lại.\");\n    }\n  };\n\n  const handleDeleteEmployee = async () => {\n    if (!selectedEmployee) return;\n    \n    try {\n      await deleteEmployee(selectedEmployee.id);\n      setIsDeleteDialogOpen(false);\n      setSelectedEmployee(null);\n      toast.success(\"Xóa nhân viên thành công!\");\n    } catch (error) {\n      console.error(\"Lỗi xóa nhân viên:\", error);\n      toast.error(\"Không thể xóa nhân viên. Vui lòng thử lại.\");\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (selectedEmployees.length === 0) return;\n    \n    try {\n      const result = await bulkDeleteEmployees({ ids: selectedEmployees });\n      setIsBulkDeleteDialogOpen(false);\n      setSelectedEmployees([]);\n      \n      if (result.summary.failed > 0) {\n        toast.warning(`Xóa thành công ${result.summary.success} nhân viên. ${result.summary.failed} nhân viên không thể xóa.`);\n      } else {\n        toast.success(`Xóa thành công ${result.summary.success} nhân viên!`);\n      }\n    } catch (error) {\n      console.error(\"Lỗi xóa nhiều nhân viên:\", error);\n      toast.error(\"Không thể xóa các nhân viên đã chọn. Vui lòng thử lại.\");\n    }\n  };\n\n  const openDeleteDialog = (employee: Employee) => {\n    setSelectedEmployee(employee);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const openBulkDeleteDialog = () => {\n    setIsBulkDeleteDialogOpen(true);\n  };\n\n  const handleSelectEmployee = (employeeId: number, selected: boolean) => {\n    if (selected) {\n      setSelectedEmployees([...selectedEmployees, employeeId]);\n    } else {\n      setSelectedEmployees(selectedEmployees.filter(id => id !== employeeId));\n    }\n  };\n\n  const handleSelectAll = (selected: boolean) => {\n    if (selected) {\n      setSelectedEmployees(employees.map(e => e.id));\n    } else {\n      setSelectedEmployees([]);\n    }\n  };\n\n  const clearSelection = () => {\n    setSelectedEmployees([]);\n  };\n\n  const handleViewEmployee = (id: number) => {\n    router.push(`/users/employees/${id}`);\n  };\n\n  const filteredEmployees = employees.filter((employee) =>\n    employee.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    employee.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    employee.phone.includes(searchTerm) ||\n    employee.position?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    employee.username?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const totalEmployees = employees.length;\n\n  const columns: ColumnDef<Employee>[] = [\n    {\n      id: \"select\",\n      header: ({ table }) => (\n        <Checkbox\n          checked={table.getIsAllPageRowsSelected()}\n          onCheckedChange={(value) => {\n            table.toggleAllPageRowsSelected(!!value);\n            handleSelectAll(!!value);\n          }}\n          aria-label=\"Chọn tất cả\"\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={selectedEmployees.includes(row.original.id)}\n          onCheckedChange={(value) => {\n            row.toggleSelected(!!value);\n            handleSelectEmployee(row.original.id, !!value);\n          }}\n          aria-label=\"Chọn hàng\"\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n      accessorKey: \"name\",\n      header: \"Nhân Viên\",\n      cell: ({ row }) => {\n        const employee = row.original;\n        return (\n          <div className=\"flex items-center gap-3\">\n            <Avatar className=\"h-8 w-8\">\n              <AvatarFallback>\n                {employee.name ? employee.name.split(' ').map(n => n[0]).join('') : 'NV'}\n              </AvatarFallback>\n            </Avatar>\n            <div>\n              <div className=\"font-medium\">{employee.name}</div>\n              <div className=\"text-sm text-muted-foreground\">@{employee.username}</div>\n            </div>\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: \"email\",\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Email\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        );\n      },\n      cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"email\")}</div>,\n    },\n    {\n      accessorKey: \"phone\",\n      header: \"Số Điện Thoại\",\n      cell: ({ row }) => <div>{row.getValue(\"phone\")}</div>,\n    },\n    {\n      accessorKey: \"position\",\n      header: \"Chức Vụ\",\n      cell: ({ row }) => {\n        const position = row.getValue(\"position\") as string;\n        return <Badge variant=\"outline\">{position}</Badge>;\n      },\n    },\n\n    {\n      accessorKey: \"createdAt\",\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Ngày Tạo\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        );\n      },\n      cell: ({ row }) => {\n        const date = row.getValue(\"createdAt\") as Date;\n        return <div>{formatDate(date)}</div>;\n      },\n    },\n    {\n      id: \"actions\",\n      enableHiding: false,\n      cell: ({ row }) => {\n        const employee = row.original;\n\n        return (\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                <span className=\"sr-only\">Mở menu</span>\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem onClick={() => handleViewEmployee(employee.id)}>\n                <Eye className=\"mr-2 h-4 w-4\" />\n                Xem Chi Tiết\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem \n                className=\"text-red-600\"\n                onClick={() => openDeleteDialog(employee)}\n                disabled={isDeleting}\n              >\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                Xóa\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        );\n      },\n    },\n  ];\n\n  return (\n    <AuthGuard>\n      <div className=\"space-y-6\">\n        {/* Page Header */}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Quản Lý Nhân Viên</h1>\n            <p className=\"text-muted-foreground\">\n              Quản lý thông tin và tài khoản nhân viên\n            </p>\n          </div>\n          <Button onClick={() => setShowCreateDialog(true)}>\n            <Plus className=\"mr-2 h-4 w-4\" />\n            Thêm Nhân Viên\n          </Button>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid gap-4 md:grid-cols-1\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Tổng Nhân Viên</CardTitle>\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{totalEmployees}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                nhân viên trong hệ thống\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Bulk Actions */}\n        {selectedEmployees.length > 0 && (\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm text-muted-foreground\">\n                    Đã chọn {selectedEmployees.length} nhân viên\n                  </span>\n                  <Button variant=\"outline\" size=\"sm\" onClick={clearSelection}>\n                    <X className=\"mr-2 h-4 w-4\" />\n                    Bỏ chọn\n                  </Button>\n                </div>\n                <Button \n                  variant=\"destructive\" \n                  size=\"sm\" \n                  onClick={openBulkDeleteDialog}\n                  disabled={isDeleting}\n                >\n                  <Trash2 className=\"mr-2 h-4 w-4\" />\n                  Xóa đã chọn\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Data Table */}\n        <Card>\n          <CardContent className=\"p-0\">\n            {isLoading ? (\n              <div className=\"flex justify-center items-center py-8\">\n                <div className=\"text-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\n                  <p className=\"mt-2 text-sm text-muted-foreground\">Đang tải...</p>\n                </div>\n              </div>\n            ) : (\n              <DataTable \n                columns={columns} \n                data={filteredEmployees}\n                searchKey=\"name\"\n                searchPlaceholder=\"Tìm kiếm theo tên, email hoặc chức vụ...\"\n              />\n            )}\n          </CardContent>\n        </Card>\n\n        {error && (\n          <div className=\"text-center py-4\">\n            <p className=\"text-destructive\">{error}</p>\n            <Button \n              variant=\"outline\" \n              onClick={() => fetchEmployees({ page: currentPage, limit: 10 })}\n              className=\"mt-2\"\n            >\n              Thử Lại\n            </Button>\n          </div>\n        )}\n\n        {/* Create Employee Dialog */}\n        <CreateEmployeeDialog\n          open={showCreateDialog}\n          onOpenChange={setShowCreateDialog}\n          onSubmit={handleCreateEmployee}\n          isSubmitting={isCreating}\n        />\n\n        {/* Delete Confirmation Dialog */}\n        <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Xác nhận xóa nhân viên</AlertDialogTitle>\n              <AlertDialogDescription>\n                Bạn có chắc chắn muốn xóa nhân viên \"{selectedEmployee?.name}\"? \n                Hành động này không thể hoàn tác.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel>Hủy</AlertDialogCancel>\n              <AlertDialogAction \n                onClick={handleDeleteEmployee}\n                className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n                disabled={isDeleting}\n              >\n                {isDeleting ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Đang xóa...\n                  </>\n                ) : (\n                  \"Xóa\"\n                )}\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n\n        {/* Bulk Delete Confirmation Dialog */}\n        <AlertDialog open={isBulkDeleteDialogOpen} onOpenChange={setIsBulkDeleteDialogOpen}>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Xác nhận xóa nhiều nhân viên</AlertDialogTitle>\n              <AlertDialogDescription>\n                Bạn có chắc chắn muốn xóa {selectedEmployees.length} nhân viên đã chọn? \n                Hành động này không thể hoàn tác.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel>Hủy</AlertDialogCancel>\n              <AlertDialogAction \n                onClick={handleBulkDelete}\n                className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n                disabled={isDeleting}\n              >\n                {isDeleting ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Đang xóa...\n                  </>\n                ) : (\n                  `Xóa ${selectedEmployees.length} nhân viên`\n                )}\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </div>\n    </AuthGuard>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/employees/page.tsx b/frontend/manager/src/app/users/employees/page.tsx
--- a/frontend/manager/src/app/users/employees/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/employees/page.tsx	(date 1750128336958)
@@ -4,7 +4,6 @@
 import { useRouter } from "next/navigation";
 import { 
   Plus, 
-  Search, 
   MoreHorizontal, 
   Trash2, 
   Users, 
@@ -17,19 +16,12 @@
 import { toast } from "sonner";
 
 import { Button } from "@/components/ui/button";
-import { Input } from "@/components/ui/input";
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
 import { Badge } from "@/components/ui/badge";
 import { Avatar, AvatarFallback } from "@/components/ui/avatar";
 import { Checkbox } from "@/components/ui/checkbox";
-import {
-  Table,
-  TableBody,
-  TableCell,
-  TableHead,
-  TableHeader,
-  TableRow,
-} from "@/components/ui/table";
+
+
 import {
   DropdownMenu,
   DropdownMenuContent,
@@ -37,13 +29,8 @@
   DropdownMenuSeparator,
   DropdownMenuTrigger,
 } from "@/components/ui/dropdown-menu";
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogHeader,
-  DialogTitle,
-} from "@/components/ui/dialog";
+
+
 import {
   AlertDialog,
   AlertDialogAction,
@@ -421,7 +408,7 @@
             <AlertDialogHeader>
               <AlertDialogTitle>Xác nhận xóa nhân viên</AlertDialogTitle>
               <AlertDialogDescription>
-                Bạn có chắc chắn muốn xóa nhân viên "{selectedEmployee?.name}"? 
+                Bạn có chắc chắn muốn xóa nhân viên &ldquo;{selectedEmployee?.name}&rdquo;? 
                 Hành động này không thể hoàn tác.
               </AlertDialogDescription>
             </AlertDialogHeader>
Index: frontend/manager/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Hệ Thống Quản Lý Cửa Hàng (Manager)\n\n## Tổng Quan\nỨng dụng web quản lý cửa hàng được xây dựng bằng Next.js 15, React 19 và Tailwind CSS 4, cung cấp giao diện hiện đại và trải nghiệm người dùng mượt mà cho việc quản lý hoạt động kinh doanh.\n\n## Đề Xuất Thiết Kế UI\n\n### 1. Layout Tổng Thể\n\n#### Sidebar Navigation (Menu Bên)\n- **Dashboard** - Tổng quan và thống kê\n- **Người Dùng**:\n  - Quản lý: Danh sách quản lý\n    - Chi tiết người dùng\n  - Nhân viên: Danh sách nhân viên\n    - Chi tiết nhân viên\n  - Khách Hàng: Danh sách khách hàng\n    - Chi tiết khách hàng\n- **Sản Phẩm**\n  - Sản phẩm: Danh sách sản phẩm\n    - Chi tiết sản phẩm\n  - Danh mục: Danh mục sản phẩm\n    - Chi tiết danh mục sản phẩm\n  - Kích thước sản phẩm: Danh sách kích thước sản phẩm\n    - Chi tiết kích thước sản phẩm\n- **Khuyến mãi**\n  - Chương trình khuyến mãi: Danh sách chương trình khuyến mãi\n    - Chi tiết chương trình khuyến mãi\n  - Chương trình thành viên: Danh sách chương trình thành viên\n    - Chi tiết chương trình thành viên\n- **Đơn Hàng**:\n  - Đã Hoàn Thành: Danh sách đơn hàng đã hoàn thành\n  - Đang Xử Lý: Danh sách đơn hàng đang xử lý\n  - Đã Hủy: Danh sách đơn hàng đã hủy\n    - Chi tiết đơn hàng khi click vào đơn hàng\n- **Báo Cáo**\n  - Doanh thu\n  - Sản phẩm bán chạy\n  - Thống kê khách hàng\n- **Cài Đặt**\n  - Thông tin cửa hàng\n  - Phương thức thanh toán\n  - Cấu hình hệ thống\n\n#### Header (Thanh Trên)\n- Logo cửa hàng\n- Breadcrumb navigation\n- Tìm kiếm nhanh\n- Thông báo\n- Avatar và menu người dùng\n- Nút toggle sidebar (mobile)\n\n#### Main Content Area\n- Responsive design với grid system\n- Loading states và skeleton screens\n- Error boundaries\n- Toast notifications\n\n### 2. Các Trang Chính\n\n#### Dashboard (Trang Chủ)\n```\n┌─────────────────────────────────────────────────────────┐\n│ Header với thống kê tổng quan (Cards)                    │\n│ ┌─────────┐ ┌─────────┐ ┌─────────┐ ┌─────────┐       │\n│ │Doanh thu│ │Đơn hàng │ │Sản phẩm │ │Khách    │       │\n│ │hôm nay  │ │mới      │ │bán      │ │hàng mới │       │\n│ └─────────┘ └─────────┘ └─────────┘ └─────────┘       │\n├─────────────────────────────────────────────────────────┤\n│ Charts và Biểu đồ                                       │\n│ ┌─────────────────────┐ ┌─────────────────────┐       │\n│ │Biểu đồ doanh thu    │ │Top sản phẩm bán chạy│       │\n│ │theo thời gian       │ │                     │       │\n│ └─────────────────────┘ └─────────────────────┘       │\n├─────────────────────────────────────────────────────────┤\n│ Hoạt động gần đây                                       │\n│ • Đơn hàng #123 đã được tạo                             │\n│ • Sản phẩm ABC đã hết hàng                              │\n│ • Khách hàng XYZ đã đăng ký                             │\n└─────────────────────────────────────────────────────────┘\n```\n\n#### Quản Lý Sản Phẩm\n- **Danh sách sản phẩm**: Table với search, filter, pagination\n- **Form thêm/sửa**: Upload hình ảnh, rich text editor cho mô tả\n- **Quản lý danh mục**: Tree structure với drag & drop\n- **Quản lý kho**: Real-time inventory tracking\n\n#### Quản Lý Đơn Hàng\n- **Kanban board**: Drag & drop giữa các trạng thái\n- **Chi tiết đơn hàng**: Timeline của trạng thái, thông tin shipping\n- **In hóa đơn**: PDF generation\n- **Tracking**: Integration với shipping providers\n\n#### Quản Lý Khách Hàng\n- **Customer profiles**: 360-degree view\n- **Purchase history**: Visual timeline\n- **Loyalty program**: Points và rewards\n- **Communication**: Email templates, SMS\n\n### 3. Thiết Kế Responsive\n\n#### Desktop (>1024px)\n- Full sidebar navigation\n- Multi-column layouts\n- Advanced data tables\n- Rich charts và visualizations\n\n#### Tablet (768px - 1024px)\n- Collapsible sidebar\n- 2-column layouts\n- Touch-friendly controls\n- Swipe gestures\n\n#### Mobile (<768px)\n- Bottom navigation\n- Single column layout\n- Mobile-first forms\n- Pull-to-refresh\n- Offline capabilities\n\n### 4. Theme và Design System\n\n#### Color Palette\n```css\n/* Primary Colors */\n--primary-50: #eff6ff;\n--primary-500: #3b82f6;\n--primary-600: #2563eb;\n--primary-900: #1e3a8a;\n\n/* Success/Error/Warning */\n--success: #10b981;\n--error: #ef4444;\n--warning: #f59e0b;\n\n/* Neutral */\n--gray-50: #f9fafb;\n--gray-100: #f3f4f6;\n--gray-500: #6b7280;\n--gray-900: #111827;\n```\n\n#### Typography\n- **Font Primary**: Inter/Geist Sans (hiện đại, dễ đọc)\n- **Font Mono**: Geist Mono (cho code, số liệu)\n- **Font Sizes**: 12px, 14px, 16px, 18px, 24px, 32px\n\n#### Components\n- **Buttons**: Primary, Secondary, Ghost, Destructive\n- **Forms**: Input, Select, Checkbox, Radio, Switch\n- **Data Display**: Table, Card, Badge, Avatar\n- **Feedback**: Alert, Toast, Modal, Tooltip\n- **Navigation**: Breadcrumb, Pagination, Tabs\n\n### 5. Quy Tắc UI/UX và Tương Tác\n\n#### Quy Tắc Chung\n- **Thêm mới**: Luôn sử dụng Dialog/Modal để tạo mới item\n- **Chỉnh sửa**: Luôn điều hướng đến trang chi tiết riêng biệt\n- **Xóa**: Luôn hiển thị confirmation dialog trước khi xóa\n- **Cập nhật**: Luôn hiển thị confirmation dialog trước khi cập nhật dữ liệu quan trọng\n\n#### Patterns Tương Tác\n```\n┌─────────────────────────────────────────────────────────┐\n│ Danh Sách Items                                         │\n│ ┌─────────────────────────────────────────────────────┐ │\n│ │ [Thêm Mới] Button → Opens Dialog                    │ │\n│ └─────────────────────────────────────────────────────┘ │\n│ ┌─────────────────────────────────────────────────────┐ │\n│ │ Item Row                                            │ │\n│ │ ├─ [Xem] → Navigate to detail page                  │ │\n│ │ ├─ [Sửa] → Navigate to edit page                    │ │\n│ │ └─ [Xóa] → Show confirmation dialog                 │ │\n│ └─────────────────────────────────────────────────────┘ │\n└─────────────────────────────────────────────────────────┘\n```\n\n#### Confirmation Dialogs\n- **Xóa**: \"Bạn có chắc chắn muốn xóa [item name]? Hành động này không thể hoàn tác.\"\n- **Cập nhật**: \"Bạn có muốn lưu các thay đổi?\"\n- **Bulk Actions**: \"Bạn có chắc chắn muốn thực hiện hành động này với [X] items đã chọn?\"\n\n### 6. Tính Năng UX/UI Nâng Cao\n\n#### Dark Mode\n- System preference detection\n- Toggle trong user menu\n- Smooth transitions\n\n#### Internationalization (i18n)\n- Hỗ trợ tiếng Việt và tiếng Anh\n- RTL support (nếu cần)\n- Date/number formatting theo locale\n\n#### Accessibility\n- WCAG 2.1 AA compliance\n- Keyboard navigation\n- Screen reader support\n- High contrast mode\n\n#### Performance\n- Code splitting\n- Image optimization\n- Lazy loading\n- Service workers cho offline\n- Real-time updates với WebSocket\n\n### 7. Tech Stack Đề Xuất\n\n#### Frontend\n- **Framework**: Next.js 15 (App Router)\n- **UI Library**: Shadcn/ui + Radix UI\n- **Styling**: Tailwind CSS 4\n- **Icons**: Lucide React\n- **Charts**: Recharts/Chart.js\n- **Forms**: React Hook Form + Zod\n- **State Management**: Zustand/Redux Toolkit\n\n#### Backend Integration\n- **API**: REST/GraphQL\n- **Authentication**: NextAuth.js\n- **Real-time**: Socket.io/Server-Sent Events\n- **File Upload**: Cloudinary/AWS S3\n\n### 8. Cấu Trúc Thư Mục Đề Xuất\n\n```\nsrc/\n├── app/                    # Next.js App Router\n│   ├── (auth)/            # Auth routes\n│   ├── (dashboard)/       # Main app routes\n│   ├── api/               # API routes\n│   └── globals.css\n├── components/            # Reusable components\n│   ├── ui/               # Base UI components\n│   ├── forms/            # Form components\n│   ├── charts/           # Chart components\n│   └── layout/           # Layout components\n├── lib/                  # Utilities\n│   ├── utils.ts          # Helper functions\n│   ├── validations.ts    # Zod schemas\n│   └── constants.ts      # App constants\n├── hooks/                # Custom hooks\n├── types/                # TypeScript types\n└── stores/               # State management\n```\n\n### 9. Roadmap Phát Triển\n\n#### Phase 1 (MVP)\n- [ ] Authentication & Authorization\n- [ ] Dashboard cơ bản\n- [ ] Quản lý sản phẩm\n- [ ] Quản lý đơn hàng cơ bản\n\n#### Phase 2\n- [ ] Quản lý khách hàng\n- [ ] Báo cáo nâng cao\n- [ ] Mobile app (React Native)\n- [ ] API cho third-party\n\n#### Phase 3\n- [ ] AI recommendations\n- [ ] Advanced analytics\n- [ ] Multi-store support\n- [ ] Marketplace integration\n\n## Hướng Dẫn Phát Triển\n\n### Cài Đặt\n```bash\nnpm install\nnpm run dev\n```\n\n### Coding Standards\n- Tuân theo TypeScript strict mode\n- Sử dụng ESLint + Prettier\n- Functional components với hooks\n- Error boundaries cho error handling\n- Unit tests với Jest + Testing Library\n\n### Commit Convention\n```\nfeat: thêm tính năng mới\nfix: sửa lỗi\ndocs: cập nhật documentation\nstyle: formatting, missing semicolons\nrefactor: refactoring code\ntest: thêm tests\nchore: maintenance tasks\n```\n\n---\n\n**Ghi chú**: Thiết kế này ưu tiên trải nghiệm người dùng, hiệu suất và khả năng mở rộng. Tất cả các tính năng được thiết kế responsive và tuân thủ các best practices của Next.js và React.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/README.md b/frontend/manager/README.md
--- a/frontend/manager/README.md	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/README.md	(date 1750167994374)
@@ -10,24 +10,34 @@
 #### Sidebar Navigation (Menu Bên)
 - **Dashboard** - Tổng quan và thống kê
 - **Người Dùng**:
-  - Quản lý: Danh sách quản lý
-    - Chi tiết người dùng
-  - Nhân viên: Danh sách nhân viên
-    - Chi tiết nhân viên
-  - Khách Hàng: Danh sách khách hàng
-    - Chi tiết khách hàng
+  - Trang chủ Người Dùng: Tổng quan và điều hướng (/users)
+  - Quản Lý (/users/managers):
+    - Danh sách quản lý với tìm kiếm, sắp xếp, bulk actions
+    - Chi tiết quản lý (/users/managers/[id]) - Xem và chỉnh sửa thông tin
+    - Tạo mới: Dialog form trực tiếp từ danh sách
+    - Xóa: AlertDialog confirmation
+  - Nhân Viên (/users/employees):
+    - Danh sách nhân viên với tìm kiếm, sắp xếp, bulk actions
+    - Chi tiết nhân viên (/users/employees/[id]) - Xem và chỉnh sửa thông tin
+    - Tạo mới: Dialog form trực tiếp từ danh sách
+    - Xóa: AlertDialog confirmation
+  - Khách Hàng (/users/customers):
+    - Danh sách khách hàng với tìm kiếm, sắp xếp, bulk actions  
+    - Chi tiết khách hàng (/users/customers/[id]) - Xem thông tin
+    - Tạo mới: Dialog form trực tiếp từ danh sách
+    - Xóa: AlertDialog confirmation
+  - Loại Thành Viên (/users/membership-types):
+    - Chi tiết loại thành viên (/users/membership-types/[id]) - Xem và chỉnh sửa
 - **Sản Phẩm**
-  - Sản phẩm: Danh sách sản phẩm
-    - Chi tiết sản phẩm
   - Danh mục: Danh mục sản phẩm
-    - Chi tiết danh mục sản phẩm
+    - Chi tiết danh mục sản phẩm: Hiển thị các sản phẩm dạng card.
   - Kích thước sản phẩm: Danh sách kích thước sản phẩm
-    - Chi tiết kích thước sản phẩm
+    - Chi tiết kích thước sản phẩm: Hiển thị các sản phẩm dạng card.
 - **Khuyến mãi**
   - Chương trình khuyến mãi: Danh sách chương trình khuyến mãi
     - Chi tiết chương trình khuyến mãi
-  - Chương trình thành viên: Danh sách chương trình thành viên
-    - Chi tiết chương trình thành viên
+  - Mã giảm giá: Danh sách mã giảm giá
+    - Chi tiết mã giảm giá
 - **Đơn Hàng**:
   - Đã Hoàn Thành: Danh sách đơn hàng đã hoàn thành
   - Đang Xử Lý: Danh sách đơn hàng đang xử lý
@@ -80,8 +90,52 @@
 └─────────────────────────────────────────────────────────┘
 ```
 
+#### Quản Lý Người Dùng (✅ Đã Triển Khai)
+
+**Trang Chủ Người Dùng (/users)**
+- Tổng quan thống kê: Số lượng quản lý, nhân viên, khách hàng
+- Cards điều hướng với icon và mô tả cho từng loại người dùng
+- Hoạt động gần đây: Timeline các hoạt động liên quan đến người dùng
+- Responsive design với hover effects và transitions
+
+**Quản Lý (/users/managers)**
+- DataTable với đầy đủ tính năng: search, sort, pagination
+- Bulk selection và bulk delete với confirmation
+- Tạo mới: Dialog form với validation (Zod)
+- Xem chi tiết: Navigate đến trang detail với breadcrumb
+- Chỉnh sửa: Inline editing trong trang detail
+- Xóa: AlertDialog confirmation với loading states
+- Avatar hiển thị với fallback initials
+- Badge trạng thái hoạt động
+- Format ngày tháng theo locale Việt Nam
+
+**Nhân Viên (/users/employees)**
+- Tương tự như Quản Lý với các tính năng:
+- DataTable với search và filter theo tên, email, phone, position
+- Create Employee Dialog với form validation
+- Chi tiết nhân viên với các section thông tin
+- Bulk operations (select all, delete multiple)
+- Loading states và error handling
+- Toast notifications cho actions
+
+**Khách Hàng (/users/customers)**
+- DataTable với search functionality
+- Customer profiles với purchase history
+- Tạo mới qua dialog form
+- Chi tiết khách hàng (view-only)
+- Bulk delete operations
+- Membership type integration
+
+**Loại Thành Viên (/users/membership-types)**
+- Chi tiết loại thành viên với inline editing
+- Form validation cho discount value, required points
+- Toggle active/inactive status
+- Date picker cho validity period
+- Currency formatting (VND)
+- Switch components cho boolean fields
+
 #### Quản Lý Sản Phẩm
-- **Danh sách sản phẩm**: Table với search, filter, pagination
+- **Danh sách sản phẩm**: Table với search, filter, pagination  
 - **Form thêm/sửa**: Upload hình ảnh, rich text editor cho mô tả
 - **Quản lý danh mục**: Tree structure với drag & drop
 - **Quản lý kho**: Real-time inventory tracking
@@ -153,13 +207,23 @@
 - **Feedback**: Alert, Toast, Modal, Tooltip
 - **Navigation**: Breadcrumb, Pagination, Tabs
 
-### 5. Quy Tắc UI/UX và Tương Tác
+### 5. Quy Tắc UI/UX và Tương Tác (✅ Đã Áp Dụng)
 
 #### Quy Tắc Chung
-- **Thêm mới**: Luôn sử dụng Dialog/Modal để tạo mới item
-- **Chỉnh sửa**: Luôn điều hướng đến trang chi tiết riêng biệt
-- **Xóa**: Luôn hiển thị confirmation dialog trước khi xóa
-- **Cập nhật**: Luôn hiển thị confirmation dialog trước khi cập nhật dữ liệu quan trọng
+- **Thêm mới**: ✅ Luôn sử dụng Dialog/Modal để tạo mới item
+- **Chỉnh sửa**: ✅ Luôn điều hướng đến trang chi tiết riêng biệt
+- **Xóa**: ✅ Luôn hiển thị confirmation dialog trước khi xóa
+- **Cập nhật**: ✅ Luôn hiển thị confirmation dialog trước khi cập nhật dữ liệu quan trọng
+
+#### Patterns Đã Triển Khai trong Mục Người Dùng
+- **DataTable Pattern**: Search, sort, pagination, bulk selection
+- **Dialog Forms**: Create Manager/Employee/Customer với validation
+- **Detail Pages**: Breadcrumb navigation, inline editing, section layout
+- **Confirmation Dialogs**: AlertDialog cho delete operations
+- **Toast Notifications**: Success/error feedback với Sonner
+- **Loading States**: Skeleton screens, spinner buttons, loading overlays
+- **Responsive Design**: Mobile-first với Tailwind CSS
+- **Accessibility**: ARIA labels, keyboard navigation, screen reader support
 
 #### Patterns Tương Tác
 ```
@@ -249,14 +313,18 @@
 
 ### 9. Roadmap Phát Triển
 
-#### Phase 1 (MVP)
-- [ ] Authentication & Authorization
-- [ ] Dashboard cơ bản
+#### Phase 1 (MVP) 
+- [x] Authentication & Authorization
+- [x] Dashboard cơ bản
+- [x] **Quản lý Người Dùng hoàn chỉnh**:
+  - [x] Quản Lý (Managers) - CRUD đầy đủ
+  - [x] Nhân Viên (Employees) - CRUD đầy đủ  
+  - [x] Khách Hàng (Customers) - CRUD đầy đủ
+  - [x] Loại Thành Viên (Membership Types) - View/Edit
 - [ ] Quản lý sản phẩm
 - [ ] Quản lý đơn hàng cơ bản
 
 #### Phase 2
-- [ ] Quản lý khách hàng
 - [ ] Báo cáo nâng cao
 - [ ] Mobile app (React Native)
 - [ ] API cho third-party
Index: frontend/manager/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"manager\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"dotenv -e .env.development -- next dev --turbopack --experimental-https\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@hookform/resolvers\": \"^5.1.1\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.14\",\n    \"@radix-ui/react-avatar\": \"^1.1.10\",\n    \"@radix-ui/react-checkbox\": \"^1.3.2\",\n    \"@radix-ui/react-collapsible\": \"^1.1.11\",\n    \"@radix-ui/react-dialog\": \"^1.1.14\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.15\",\n    \"@radix-ui/react-label\": \"^2.1.7\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.13\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.9\",\n    \"@radix-ui/react-select\": \"^2.2.5\",\n    \"@radix-ui/react-separator\": \"^1.1.7\",\n    \"@radix-ui/react-slot\": \"^1.2.3\",\n    \"@radix-ui/react-switch\": \"^1.2.5\",\n    \"@radix-ui/react-tabs\": \"^1.1.12\",\n    \"@radix-ui/react-toast\": \"^1.2.14\",\n    \"@radix-ui/react-tooltip\": \"^1.2.7\",\n    \"@tanstack/react-table\": \"^8.21.3\",\n    \"@tanstack/table-core\": \"^8.21.3\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"date-fns\": \"^4.1.0\",\n    \"lucide-react\": \"^0.515.0\",\n    \"next\": \"15.3.3\",\n    \"next-themes\": \"^0.4.6\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"react-hook-form\": \"^7.57.0\",\n    \"sonner\": \"^2.0.5\",\n    \"tailwind-merge\": \"^3.3.1\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"zod\": \"^3.25.64\",\n    \"zustand\": \"^5.0.5\"\n  },\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3\",\n    \"@tailwindcss/postcss\": \"^4\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"dotenv-cli\": \"^8.0.0\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.3.3\",\n    \"tailwindcss\": \"^4\",\n    \"tw-animate-css\": \"^1.3.4\",\n    \"typescript\": \"^5\"\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/package.json b/frontend/manager/package.json
--- a/frontend/manager/package.json	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/package.json	(date 1750224386786)
@@ -28,6 +28,7 @@
     "@radix-ui/react-tooltip": "^1.2.7",
     "@tanstack/react-table": "^8.21.3",
     "@tanstack/table-core": "^8.21.3",
+    "@types/recharts": "^2.0.1",
     "class-variance-authority": "^0.7.1",
     "clsx": "^2.1.1",
     "date-fns": "^4.1.0",
@@ -37,6 +38,7 @@
     "react": "^19.0.0",
     "react-dom": "^19.0.0",
     "react-hook-form": "^7.57.0",
+    "recharts": "^2.15.3",
     "sonner": "^2.0.5",
     "tailwind-merge": "^3.3.1",
     "tailwindcss-animate": "^1.0.7",
@@ -52,6 +54,8 @@
     "dotenv-cli": "^8.0.0",
     "eslint": "^9",
     "eslint-config-next": "15.3.3",
+    "eslint-plugin-unused-imports": "^4.1.4",
+    "install": "^0.13.0",
     "tailwindcss": "^4",
     "tw-animate-css": "^1.3.4",
     "typescript": "^5"
Index: frontend/manager/src/app/users/managers/[id]/edit/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter, useParams } from \"next/navigation\";\nimport { ArrowLeft, Loader2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Manager } from \"@/types/api\";\nimport { managerApi } from \"@/lib/api\";\nimport { EditManagerForm } from \"@/components/forms/edit-manager-form\";\nimport { UpdateManagerFormData } from \"@/lib/validations/manager\";\n\nexport default function EditManagerPage() {\n  const router = useRouter();\n  const params = useParams();\n  const managerId = parseInt(params.id as string);\n  \n  const [manager, setManager] = useState<Manager | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (managerId) {\n      loadManager();\n    }\n  }, [managerId]);\n\n  const loadManager = async () => {\n    try {\n      setIsLoading(true);\n      const response = await managerApi.getById(managerId);\n      setManager(response);\n    } catch (error) {\n      console.error(\"Lỗi tải thông tin quản lý:\", error);\n      toast.error(\"Không thể tải thông tin quản lý\");\n      // Fallback to mock data for development\n      setManager({\n        id: managerId,\n        name: \"Nguyễn Văn An\",\n        email: \"an.nguyen@company.com\",\n        avatar: \"/avatars/01.png\",\n        isActive: true,\n        createdAt: new Date(\"2024-01-15T10:30:00\"),\n        updatedAt: new Date(\"2024-01-20T14:45:00\"),\n        permissions: [\"USER_MANAGEMENT\", \"PRODUCT_MANAGEMENT\", \"ORDER_MANAGEMENT\", \"REPORT_VIEW\"]\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = async (data: UpdateManagerFormData) => {\n    if (!manager) return;\n    \n    try {\n      setIsSubmitting(true);\n      await managerApi.update(manager.id, data);\n      toast.success(\"Cập nhật quản lý thành công!\");\n      router.push(`/users/managers/${manager.id}`);\n    } catch (error) {\n      console.error(\"Lỗi cập nhật quản lý:\", error);\n      toast.error(\"Không thể cập nhật quản lý. Vui lòng thử lại.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!manager) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-96 space-y-4\">\n        <h2 className=\"text-2xl font-semibold\">Không tìm thấy quản lý</h2>\n        <p className=\"text-muted-foreground\">Quản lý với ID {managerId} không tồn tại.</p>\n        <Button onClick={() => router.push(\"/users/managers\")}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          Quay lại danh sách\n        </Button>\n      </div>\n    );\n  }\n\n  // Convert manager data to form data format\n  const defaultValues: UpdateManagerFormData = {\n    name: manager.name,\n    email: manager.email,\n    password: \"\", // Password field will be optional for updates\n    isActive: manager.isActive,\n    permissions: manager.permissions || []\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center space-x-4\">\n        <Button \n          variant=\"outline\" \n          size=\"icon\"\n          onClick={() => router.push(`/users/managers/${manager.id}`)}\n        >\n          <ArrowLeft className=\"h-4 w-4\" />\n        </Button>\n        <div>\n          <h1 className=\"text-3xl font-bold\">Chỉnh Sửa Quản Lý</h1>\n          <p className=\"text-muted-foreground\">\n            Cập nhật thông tin của {manager.name}\n          </p>\n        </div>\n      </div>\n\n      {/* Edit Form */}\n      <Card className=\"max-w-2xl\">\n        <CardHeader>\n          <CardTitle>Thông Tin Quản Lý</CardTitle>\n          <CardDescription>\n            Cập nhật thông tin và quyền hạn của quản lý viên\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <EditManagerForm \n            onSubmit={handleSubmit}\n            isSubmitting={isSubmitting}\n            defaultValues={defaultValues}\n          />\n        </CardContent>\n      </Card>\n    </div>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/managers/[id]/edit/page.tsx b/frontend/manager/src/app/users/managers/[id]/edit/page.tsx
--- a/frontend/manager/src/app/users/managers/[id]/edit/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/managers/[id]/edit/page.tsx	(date 1750126014541)
@@ -8,7 +8,7 @@
 import { Button } from "@/components/ui/button";
 import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
 import { Manager } from "@/types/api";
-import { managerApi } from "@/lib/api";
+import { managerService } from "@/lib/services/manager-service";
 import { EditManagerForm } from "@/components/forms/edit-manager-form";
 import { UpdateManagerFormData } from "@/lib/validations/manager";
 
@@ -30,7 +30,7 @@
   const loadManager = async () => {
     try {
       setIsLoading(true);
-      const response = await managerApi.getById(managerId);
+      const response = await managerService.getById(managerId);
       setManager(response);
     } catch (error) {
       console.error("Lỗi tải thông tin quản lý:", error);
@@ -38,8 +38,13 @@
       // Fallback to mock data for development
       setManager({
         id: managerId,
+        accountId: 1,
         name: "Nguyễn Văn An",
+        firstName: "An",
+        lastName: "Nguyễn Văn",
         email: "an.nguyen@company.com",
+        phone: "0123456789",
+        gender: "MALE",
         avatar: "/avatars/01.png",
         isActive: true,
         createdAt: new Date("2024-01-15T10:30:00"),
@@ -56,7 +61,7 @@
     
     try {
       setIsSubmitting(true);
-      await managerApi.update(manager.id, data);
+      await managerService.update(manager.id, data);
       toast.success("Cập nhật quản lý thành công!");
       router.push(`/users/managers/${manager.id}`);
     } catch (error) {
@@ -90,11 +95,13 @@
 
   // Convert manager data to form data format
   const defaultValues: UpdateManagerFormData = {
-    name: manager.name,
+    first_name: manager.firstName,
+    last_name: manager.lastName,
     email: manager.email,
+    phone: manager.phone,
+    gender: manager.gender || undefined,
+    username: manager.username,
     password: "", // Password field will be optional for updates
-    isActive: manager.isActive,
-    permissions: manager.permissions || []
   };
 
   return (
Index: frontend/manager/src/app/users/managers/[id]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { \n  ArrowLeft, \n  Edit, \n  Save, \n  X, \n  User, \n  Mail, \n  Phone, \n  Calendar,\n  Shield,\n  Eye,\n  EyeOff,\n  Loader2 \n} from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { AuthGuard } from \"@/components/auth/auth-guard\";\nimport { useManagersStore } from \"@/stores/managers\";\nimport { Manager } from \"@/types/api\";\nimport { apiClient } from \"@/lib/api-client\";\n\n// Schema cho thông tin cá nhân\nconst managerInfoSchema = z.object({\n  first_name: z.string().min(1, \"Tên là bắt buộc\"),\n  last_name: z.string().min(1, \"Họ là bắt buộc\"),\n  email: z.string().email(\"Email không hợp lệ\"),\n  phone: z.string().min(10, \"Số điện thoại phải có ít nhất 10 số\"),\n  gender: z.enum([\"MALE\", \"FEMALE\"]).optional(),\n});\n\n// Schema cho thông tin tài khoản\nconst accountInfoSchema = z.object({\n  username: z.string().min(3, \"Tên đăng nhập phải có ít nhất 3 ký tự\").optional().or(z.literal(\"\")),\n  password: z.string().min(6, \"Mật khẩu phải có ít nhất 6 ký tự\").optional().or(z.literal(\"\")),\n});\n\ntype ManagerInfoFormData = z.infer<typeof managerInfoSchema>;\ntype AccountInfoFormData = z.infer<typeof accountInfoSchema>;\n\nfunction formatDate(date: Date): string {\n  return new Intl.DateTimeFormat(\"vi-VN\", {\n    year: \"numeric\",\n    month: \"long\", \n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  }).format(date);\n}\n\nfunction formatGender(gender: string | null): string {\n  if (!gender) return \"Chưa xác định\";\n  return gender === \"MALE\" ? \"Nam\" : \"Nữ\";\n}\n\nexport default function ManagerDetailPage() {\n  const router = useRouter();\n  const params = useParams();\n  const managerId = parseInt(params.id as string);\n  \n  const [isEditingInfo, setIsEditingInfo] = useState(false);\n  const [isEditingAccount, setIsEditingAccount] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isUpdatingInfo, setIsUpdatingInfo] = useState(false);\n  const [isUpdatingAccount, setIsUpdatingAccount] = useState(false);\n  \n  const {\n    selectedManager: manager,\n    isLoading,\n    fetchManagerById,\n    setSelectedManager,\n  } = useManagersStore();\n\n  // Form cho thông tin cá nhân\n  const managerInfoForm = useForm<ManagerInfoFormData>({\n    resolver: zodResolver(managerInfoSchema),\n    defaultValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      phone: \"\",\n      gender: undefined,\n    },\n  });\n\n  // Form cho thông tin tài khoản\n  const accountInfoForm = useForm<AccountInfoFormData>({\n    resolver: zodResolver(accountInfoSchema),\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  useEffect(() => {\n    if (managerId) {\n      fetchManagerById(managerId);\n    }\n  }, [managerId, fetchManagerById]);\n\n  useEffect(() => {\n    if (manager) {\n      // Reset form thông tin cá nhân\n      if (isEditingInfo) {\n        managerInfoForm.reset({\n          first_name: manager.firstName,\n          last_name: manager.lastName,\n          email: manager.email,\n          phone: manager.phone,\n          gender: manager.gender || undefined,\n        });\n      }\n      \n      // Reset form thông tin tài khoản\n      if (isEditingAccount) {\n        accountInfoForm.reset({\n          username: manager.username,\n          password: \"\",\n        });\n      }\n    }\n  }, [manager, isEditingInfo, isEditingAccount, managerInfoForm, accountInfoForm]);\n\n  const handleEditInfo = () => {\n    setIsEditingInfo(true);\n  };\n\n  const handleCancelEditInfo = () => {\n    setIsEditingInfo(false);\n    managerInfoForm.reset();\n  };\n\n  const handleEditAccount = () => {\n    setIsEditingAccount(true);\n  };\n\n  const handleCancelEditAccount = () => {\n    setIsEditingAccount(false);\n    accountInfoForm.reset();\n  };\n\n  const handleSaveInfo = async (data: ManagerInfoFormData) => {\n    if (!manager) return;\n    \n    try {\n      setIsUpdatingInfo(true);\n      \n      // Cập nhật thông tin manager\n      const managerUpdateData = {\n        first_name: data.first_name,\n        last_name: data.last_name,\n        email: data.email,\n        phone: data.phone,\n        gender: data.gender,\n      };\n      \n      // Gọi API cập nhật manager\n      const updatedManagerResponse = await apiClient.patch<any>(\n        `/managers/${manager.id}`, \n        managerUpdateData\n      );\n      \n      // Transform response để cập nhật store\n      const updatedManager: Manager = {\n        ...manager,\n        id: updatedManagerResponse.manager_id,\n        firstName: updatedManagerResponse.first_name,\n        lastName: updatedManagerResponse.last_name,\n        name: `${updatedManagerResponse.last_name} ${updatedManagerResponse.first_name}`,\n        email: updatedManagerResponse.email,\n        phone: updatedManagerResponse.phone,\n        gender: updatedManagerResponse.gender,\n        updatedAt: new Date(updatedManagerResponse.updated_at),\n      };\n      \n      // Cập nhật store\n      setSelectedManager(updatedManager);\n      \n      setIsEditingInfo(false);\n      toast.success(\"Cập nhật thông tin cá nhân thành công!\");\n    } catch (error: any) {\n      console.error(\"Lỗi cập nhật thông tin cá nhân:\", error);\n      toast.error(error.message || \"Không thể cập nhật thông tin cá nhân. Vui lòng thử lại.\");\n    } finally {\n      setIsUpdatingInfo(false);\n    }\n  };\n\n  const handleSaveAccount = async (data: AccountInfoFormData) => {\n    if (!manager) return;\n    \n    try {\n      setIsUpdatingAccount(true);\n      \n      // Chỉ gửi dữ liệu nếu có thay đổi\n      const accountUpdateData: any = {};\n      if (data.username && data.username.trim() !== \"\") {\n        accountUpdateData.username = data.username;\n      }\n      if (data.password && data.password.trim() !== \"\") {\n        accountUpdateData.password = data.password;\n      }\n      \n      // Kiểm tra có dữ liệu để cập nhật không\n      if (Object.keys(accountUpdateData).length === 0) {\n        toast.error(\"Vui lòng nhập thông tin cần thay đổi\");\n        return;\n      }\n      \n      // Gọi API cập nhật account\n      await apiClient.patch(`/accounts/${manager.accountId}`, accountUpdateData);\n      \n      // Cập nhật username trong store nếu có thay đổi\n      if (accountUpdateData.username) {\n        const updatedManager: Manager = {\n          ...manager,\n          username: accountUpdateData.username,\n          updatedAt: new Date(),\n        };\n        setSelectedManager(updatedManager);\n      }\n      \n      setIsEditingAccount(false);\n      toast.success(\"Cập nhật thông tin tài khoản thành công!\");\n    } catch (error: any) {\n      console.error(\"Lỗi cập nhật thông tin tài khoản:\", error);\n      toast.error(error.message || \"Không thể cập nhật thông tin tài khoản. Vui lòng thử lại.\");\n    } finally {\n      setIsUpdatingAccount(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <AuthGuard>\n        <div className=\"flex items-center justify-center h-96\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n        </div>\n      </AuthGuard>\n    );\n  }\n\n  if (!manager) {\n    return (\n      <AuthGuard>\n        <div className=\"flex flex-col items-center justify-center h-96 space-y-4\">\n          <h2 className=\"text-2xl font-semibold\">Không tìm thấy quản lý</h2>\n          <p className=\"text-muted-foreground\">Quản lý với ID {managerId} không tồn tại.</p>\n          <Button onClick={() => router.push(\"/users/managers\")}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Quay lại danh sách\n          </Button>\n        </div>\n      </AuthGuard>\n    );\n  }\n\n  return (\n    <AuthGuard>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Button \n              variant=\"outline\" \n              size=\"icon\"\n              onClick={() => router.push(\"/users/managers\")}\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n            </Button>\n            <div>\n              <h1 className=\"text-3xl font-bold\">Chi tiết quản lý</h1>\n              <p className=\"text-muted-foreground\">\n                Thông tin chi tiết và cài đặt của quản lý viên\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-3\">\n          {/* Profile Card */}\n          <Card>\n            <CardHeader className=\"text-center\">\n              <Avatar className=\"w-24 h-24 mx-auto\">\n                <AvatarFallback className=\"text-lg\">\n                  {manager.name ? manager.name.split(' ').map(n => n[0]).join('') : 'N/A'}\n                </AvatarFallback>\n              </Avatar>\n              <CardTitle className=\"mt-4\">{manager.name}</CardTitle>\n              <div className=\"flex justify-center\">\n                <Badge variant={manager.isActive ? \"default\" : \"secondary\"}>\n                  {manager.isActive ? \"Hoạt động\" : \"Vô hiệu hóa\"}\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">{manager.email}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">{manager.phone}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <User className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">{formatGender(manager.gender)}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-sm\">Tham gia {formatDate(manager.createdAt)}</span>\n              </div>\n              {manager.lastLogin && (\n                <div className=\"flex items-center space-x-2\">\n                  <Shield className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Đăng nhập lần cuối {formatDate(manager.lastLogin)}</span>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Information & Edit Forms */}\n          <div className=\"md:col-span-2 space-y-6\">\n            {/* Thông tin cá nhân */}\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>Thông tin cá nhân</CardTitle>\n                {!isEditingInfo ? (\n                  <Button variant=\"outline\" size=\"sm\" onClick={handleEditInfo}>\n                    <Edit className=\"mr-2 h-4 w-4\" />\n                    Chỉnh sửa\n                  </Button>\n                ) : (\n                  <div className=\"flex space-x-2\">\n                    <Button variant=\"outline\" size=\"sm\" onClick={handleCancelEditInfo} disabled={isUpdatingInfo}>\n                      <X className=\"mr-2 h-4 w-4\" />\n                      Hủy\n                    </Button>\n                    <Button \n                      size=\"sm\"\n                      onClick={managerInfoForm.handleSubmit(handleSaveInfo)} \n                      disabled={isUpdatingInfo}\n                    >\n                      {isUpdatingInfo ? (\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      ) : (\n                        <Save className=\"mr-2 h-4 w-4\" />\n                      )}\n                      Lưu\n                    </Button>\n                  </div>\n                )}\n              </CardHeader>\n              <CardContent>\n                {isEditingInfo ? (\n                  <Form {...managerInfoForm}>\n                    <form onSubmit={managerInfoForm.handleSubmit(handleSaveInfo)} className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {/* Họ */}\n                        <FormField\n                          control={managerInfoForm.control}\n                          name=\"last_name\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Họ</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"Ví dụ: Nguyễn\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        {/* Tên */}\n                        <FormField\n                          control={managerInfoForm.control}\n                          name=\"first_name\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Tên</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"Ví dụ: Văn An\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      {/* Email */}\n                      <FormField\n                        control={managerInfoForm.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email</FormLabel>\n                            <FormControl>\n                              <Input type=\"email\" placeholder=\"email@example.com\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {/* Số điện thoại */}\n                        <FormField\n                          control={managerInfoForm.control}\n                          name=\"phone\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Số điện thoại</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"Ví dụ: 0901234567\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        {/* Giới tính */}\n                        <FormField\n                          control={managerInfoForm.control}\n                          name=\"gender\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Giới tính</FormLabel>\n                              <Select onValueChange={field.onChange} value={field.value}>\n                                <FormControl>\n                                  <SelectTrigger>\n                                    <SelectValue placeholder=\"Chọn giới tính\" />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  <SelectItem value=\"MALE\">Nam</SelectItem>\n                                  <SelectItem value=\"FEMALE\">Nữ</SelectItem>\n                                </SelectContent>\n                              </Select>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                    </form>\n                  </Form>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Họ</label>\n                        <p className=\"text-sm mt-1\">{manager.lastName}</p>\n                      </div>\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Tên</label>\n                        <p className=\"text-sm mt-1\">{manager.firstName}</p>\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Email</label>\n                      <p className=\"text-sm mt-1\">{manager.email}</p>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Số điện thoại</label>\n                        <p className=\"text-sm mt-1\">{manager.phone}</p>\n                      </div>\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Giới tính</label>\n                        <p className=\"text-sm mt-1\">{formatGender(manager.gender)}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Thông tin tài khoản */}\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between\">\n                <CardTitle>Thông tin tài khoản</CardTitle>\n                {!isEditingAccount ? (\n                  <Button variant=\"outline\" size=\"sm\" onClick={handleEditAccount}>\n                    <Edit className=\"mr-2 h-4 w-4\" />\n                    Chỉnh sửa\n                  </Button>\n                ) : (\n                  <div className=\"flex space-x-2\">\n                    <Button variant=\"outline\" size=\"sm\" onClick={handleCancelEditAccount} disabled={isUpdatingAccount}>\n                      <X className=\"mr-2 h-4 w-4\" />\n                      Hủy\n                    </Button>\n                    <Button \n                      size=\"sm\"\n                      onClick={accountInfoForm.handleSubmit(handleSaveAccount)} \n                      disabled={isUpdatingAccount}\n                    >\n                      {isUpdatingAccount ? (\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      ) : (\n                        <Save className=\"mr-2 h-4 w-4\" />\n                      )}\n                      Lưu\n                    </Button>\n                  </div>\n                )}\n              </CardHeader>\n              <CardContent>\n                {isEditingAccount ? (\n                  <Form {...accountInfoForm}>\n                    <form onSubmit={accountInfoForm.handleSubmit(handleSaveAccount)} className=\"space-y-4\">\n                      {/* Tên đăng nhập */}\n                      <FormField\n                        control={accountInfoForm.control}\n                        name=\"username\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Tên đăng nhập</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Ví dụ: manager01\" {...field} />\n                            </FormControl>\n                            <FormDescription>\n                              Để trống nếu không muốn thay đổi\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      {/* Mật khẩu */}\n                      <FormField\n                        control={accountInfoForm.control}\n                        name=\"password\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Mật khẩu mới</FormLabel>\n                            <FormControl>\n                              <div className=\"relative\">\n                                <Input\n                                  type={showPassword ? \"text\" : \"password\"}\n                                  placeholder=\"Nhập mật khẩu mới\"\n                                  {...field}\n                                />\n                                <Button\n                                  type=\"button\"\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                                  onClick={() => setShowPassword(!showPassword)}\n                                >\n                                  {showPassword ? (\n                                    <EyeOff className=\"h-4 w-4\" />\n                                  ) : (\n                                    <Eye className=\"h-4 w-4\" />\n                                  )}\n                                </Button>\n                              </div>\n                            </FormControl>\n                            <FormDescription>\n                              Để trống nếu không muốn thay đổi mật khẩu\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </form>\n                  </Form>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Tên đăng nhập</label>\n                      <p className=\"text-sm mt-1\">{manager.username}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Trạng thái</label>\n                      <div className=\"mt-1\">\n                        <Badge variant={manager.isActive ? \"default\" : \"secondary\"}>\n                          {manager.isActive ? \"Hoạt động\" : \"Vô hiệu hóa\"}\n                        </Badge>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Quyền hạn */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Quyền hạn</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-wrap gap-2\">\n                  {manager.permissions?.map((permission, index) => (\n                    <Badge key={index} variant=\"outline\">\n                      {permission}\n                    </Badge>\n                  )) || (\n                    <div className=\"flex flex-wrap gap-2\">\n                      <Badge variant=\"outline\">MANAGE USERS</Badge>\n                      <Badge variant=\"outline\">MANAGE ORDERS</Badge>\n                      <Badge variant=\"outline\">MANAGE PRODUCTS</Badge>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </AuthGuard>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/users/managers/[id]/page.tsx b/frontend/manager/src/app/users/managers/[id]/page.tsx
--- a/frontend/manager/src/app/users/managers/[id]/page.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/users/managers/[id]/page.tsx	(date 1750128336958)
@@ -25,7 +25,6 @@
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
 import { Badge } from "@/components/ui/badge";
 import { Avatar, AvatarFallback } from "@/components/ui/avatar";
-import { Separator } from "@/components/ui/separator";
 import {
   Form,
   FormControl,
Index: frontend/manager/src/app/globals.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import \"tailwindcss\";\n\n@custom-variant dark (&:is(.dark *));\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 221.2 83.2% 53.3%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 221.2 83.2% 53.3%;\n    --radius: 0.5rem;\n    --font-sans: var(--font-geist-sans);\n    --font-mono: var(--font-geist-mono);\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 84% 4.9%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 224.3 76.3% 94.1%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n\n@theme inline {\n  --radius-sm: calc(var(--radius) - 4px);\n  --radius-md: calc(var(--radius) - 2px);\n  --radius-lg: var(--radius);\n  --radius-xl: calc(var(--radius) + 4px);\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --color-card: var(--card);\n  --color-card-foreground: var(--card-foreground);\n  --color-popover: var(--popover);\n  --color-popover-foreground: var(--popover-foreground);\n  --color-primary: var(--primary);\n  --color-primary-foreground: var(--primary-foreground);\n  --color-secondary: var(--secondary);\n  --color-secondary-foreground: var(--secondary-foreground);\n  --color-muted: var(--muted);\n  --color-muted-foreground: var(--muted-foreground);\n  --color-accent: var(--accent);\n  --color-accent-foreground: var(--accent-foreground);\n  --color-destructive: var(--destructive);\n  --color-border: var(--border);\n  --color-input: var(--input);\n  --color-ring: var(--ring);\n  --color-chart-1: var(--chart-1);\n  --color-chart-2: var(--chart-2);\n  --color-chart-3: var(--chart-3);\n  --color-chart-4: var(--chart-4);\n  --color-chart-5: var(--chart-5);\n  --color-sidebar: var(--sidebar);\n  --color-sidebar-foreground: var(--sidebar-foreground);\n  --color-sidebar-primary: var(--sidebar-primary);\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n  --color-sidebar-accent: var(--sidebar-accent);\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n  --color-sidebar-border: var(--sidebar-border);\n  --color-sidebar-ring: var(--sidebar-ring);\n}\n\n:root {\n  --radius: 0.625rem;\n  --background: oklch(1 0 0);\n  --foreground: oklch(0.145 0 0);\n  --card: oklch(1 0 0);\n  --card-foreground: oklch(0.145 0 0);\n  --popover: oklch(1 0 0);\n  --popover-foreground: oklch(0.145 0 0);\n  --primary: oklch(0.205 0 0);\n  --primary-foreground: oklch(0.985 0 0);\n  --secondary: oklch(0.97 0 0);\n  --secondary-foreground: oklch(0.205 0 0);\n  --muted: oklch(0.97 0 0);\n  --muted-foreground: oklch(0.556 0 0);\n  --accent: oklch(0.97 0 0);\n  --accent-foreground: oklch(0.205 0 0);\n  --destructive: oklch(0.577 0.245 27.325);\n  --border: oklch(0.922 0 0);\n  --input: oklch(0.922 0 0);\n  --ring: oklch(0.708 0 0);\n  --chart-1: oklch(0.646 0.222 41.116);\n  --chart-2: oklch(0.6 0.118 184.704);\n  --chart-3: oklch(0.398 0.07 227.392);\n  --chart-4: oklch(0.828 0.189 84.429);\n  --chart-5: oklch(0.769 0.188 70.08);\n  --sidebar: oklch(0.985 0 0);\n  --sidebar-foreground: oklch(0.145 0 0);\n  --sidebar-primary: oklch(0.205 0 0);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.97 0 0);\n  --sidebar-accent-foreground: oklch(0.205 0 0);\n  --sidebar-border: oklch(0.922 0 0);\n  --sidebar-ring: oklch(0.708 0 0);\n}\n\n.dark {\n  --background: oklch(0.145 0 0);\n  --foreground: oklch(0.985 0 0);\n  --card: oklch(0.205 0 0);\n  --card-foreground: oklch(0.985 0 0);\n  --popover: oklch(0.205 0 0);\n  --popover-foreground: oklch(0.985 0 0);\n  --primary: oklch(0.922 0 0);\n  --primary-foreground: oklch(0.205 0 0);\n  --secondary: oklch(0.269 0 0);\n  --secondary-foreground: oklch(0.985 0 0);\n  --muted: oklch(0.269 0 0);\n  --muted-foreground: oklch(0.708 0 0);\n  --accent: oklch(0.269 0 0);\n  --accent-foreground: oklch(0.985 0 0);\n  --destructive: oklch(0.704 0.191 22.216);\n  --border: oklch(1 0 0 / 10%);\n  --input: oklch(1 0 0 / 15%);\n  --ring: oklch(0.556 0 0);\n  --chart-1: oklch(0.488 0.243 264.376);\n  --chart-2: oklch(0.696 0.17 162.48);\n  --chart-3: oklch(0.769 0.188 70.08);\n  --chart-4: oklch(0.627 0.265 303.9);\n  --chart-5: oklch(0.645 0.246 16.439);\n  --sidebar: oklch(0.205 0 0);\n  --sidebar-foreground: oklch(0.985 0 0);\n  --sidebar-primary: oklch(0.488 0.243 264.376);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.269 0 0);\n  --sidebar-accent-foreground: oklch(0.985 0 0);\n  --sidebar-border: oklch(1 0 0 / 10%);\n  --sidebar-ring: oklch(0.556 0 0);\n}\n\n@layer base {\n  * {\n    @apply border-border outline-ring/50;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/app/globals.css b/frontend/manager/src/app/globals.css
--- a/frontend/manager/src/app/globals.css	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/app/globals.css	(date 1750138313027)
@@ -175,3 +175,26 @@
     @apply bg-background text-foreground;
   }
 }
+
+@layer utilities {
+  .line-clamp-1 {
+    overflow: hidden;
+    display: -webkit-box;
+    -webkit-box-orient: vertical;
+    -webkit-line-clamp: 1;
+  }
+  
+  .line-clamp-2 {
+    overflow: hidden;
+    display: -webkit-box;
+    -webkit-box-orient: vertical;
+    -webkit-line-clamp: 2;
+  }
+  
+  .line-clamp-3 {
+    overflow: hidden;
+    display: -webkit-box;
+    -webkit-box-orient: vertical;
+    -webkit-line-clamp: 3;
+  }
+}
Index: frontend/manager/src/lib/services/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * Services Index\n * Export tất cả services để dễ import\n */\n\n// API Client\nexport { apiClient, API_CONFIG } from '@/lib/api-client';\nexport type { ApiResponse } from '@/lib/api-client';\n\n// Services\nexport { managerService } from './manager-service';\nexport { employeeService } from './employee-service';\nexport { customerService } from './customer-service';\nexport { membershipTypeService } from './membership-type-service';\nexport { authService } from './auth-service';\n\n// Service types\nexport type { \n  Manager,\n  Employee,\n  Customer,\n  MembershipType,\n  CreateManagerDto,\n  UpdateManagerDto,\n  CreateEmployeeDto,\n  UpdateEmployeeDto,\n  CreateCustomerDto,\n  UpdateCustomerDto,\n  CreateMembershipTypeDto,\n  UpdateMembershipTypeDto,\n  PaginatedResponse\n} from '@/types/api'; 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/index.ts b/frontend/manager/src/lib/services/index.ts
--- a/frontend/manager/src/lib/services/index.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/services/index.ts	(date 1750227370628)
@@ -12,7 +12,11 @@
 export { employeeService } from './employee-service';
 export { customerService } from './customer-service';
 export { membershipTypeService } from './membership-type-service';
+export { discountService } from './discount-service';
 export { authService } from './auth-service';
+export * from './reports-service';
+export { profileService } from './profile-service';
+export { storeService } from './store-service';
 
 // Service types
 export type { 
@@ -20,6 +24,7 @@
   Employee,
   Customer,
   MembershipType,
+  Discount,
   CreateManagerDto,
   UpdateManagerDto,
   CreateEmployeeDto,
@@ -28,5 +33,7 @@
   UpdateCustomerDto,
   CreateMembershipTypeDto,
   UpdateMembershipTypeDto,
+  CreateDiscountDto,
+  UpdateDiscountDto,
   PaginatedResponse
 } from '@/types/api'; 
\ No newline at end of file
Index: frontend/manager/src/lib/services/manager-service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { apiClient } from \"@/lib/api-client\";\nimport { \n  Manager, \n  BackendManagerResponse,\n  BackendPaginatedResponse,\n  BulkDeleteResponse,\n  transformManagerResponse,\n  CreateManagerDto, \n  UpdateManagerDto,\n  BulkDeleteManagerDto,\n  PaginatedResponse \n} from \"@/types/api\";\nimport { \n  transformCreateManagerFormData, \n  transformUpdateManagerFormData,\n  CreateManagerFormData,\n  UpdateManagerFormData,\n  BulkDeleteManagerFormData \n} from \"@/lib/validations/manager\";\n\n/**\n * Manager Service\n * Xử lý tất cả API calls liên quan đến managers\n */\nexport class ManagerService {\n  private readonly endpoint = \"/managers\";\n\n  /**\n   * Lấy danh sách managers với pagination\n   */\n  async getAll(params?: { \n    page?: number; \n    limit?: number;\n    search?: string;\n    isActive?: boolean;\n  }): Promise<PaginatedResponse<Manager>> {\n    const backendResponse = await apiClient.get<BackendPaginatedResponse<BackendManagerResponse>>(\n      this.endpoint, \n      params\n    );\n    \n    // Transform backend response sang frontend format\n    return {\n      data: backendResponse.data.map(transformManagerResponse),\n      total: backendResponse.pagination.total,\n      page: backendResponse.pagination.page,\n      limit: backendResponse.pagination.limit,\n      totalPages: backendResponse.pagination.totalPages,\n    };\n  }\n\n  /**\n   * Lấy manager theo ID\n   */\n  async getById(id: number): Promise<Manager> {\n    const backendResponse = await apiClient.get<BackendManagerResponse>(`${this.endpoint}/${id}`);\n    return transformManagerResponse(backendResponse);\n  }\n\n  /**\n   * Lấy manager theo email\n   */\n  async getByEmail(email: string): Promise<Manager> {\n    const backendResponse = await apiClient.get<BackendManagerResponse>(`${this.endpoint}/email/${email}`);\n    return transformManagerResponse(backendResponse);\n  }\n\n  /**\n   * Tạo manager mới\n   */\n  async create(formData: CreateManagerFormData): Promise<Manager> {\n    const backendData = transformCreateManagerFormData(formData);\n    const backendResponse = await apiClient.post<BackendManagerResponse>(this.endpoint, backendData);\n    return transformManagerResponse(backendResponse);\n  }\n\n  /**\n   * Cập nhật manager\n   */\n  async update(id: number, formData: UpdateManagerFormData): Promise<Manager> {\n    const backendData = transformUpdateManagerFormData(formData);\n    const backendResponse = await apiClient.patch<BackendManagerResponse>(`${this.endpoint}/${id}`, backendData);\n    return transformManagerResponse(backendResponse);\n  }\n\n  /**\n   * Xóa manager\n   */\n  async delete(id: number): Promise<void> {\n    return apiClient.delete<void>(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Xóa nhiều managers\n   */\n  async bulkDelete(formData: BulkDeleteManagerFormData): Promise<BulkDeleteResponse> {\n    return apiClient.delete<BulkDeleteResponse>(`${this.endpoint}/bulk`, formData);\n  }\n\n  /**\n   * Test API connection\n   */\n  async ping(): Promise<{ message: string }> {\n    return apiClient.get<{ message: string }>(`${this.endpoint}/test/ping`);\n  }\n\n  /**\n   * Lấy thống kê managers\n   */\n  async getStats(): Promise<{\n    total: number;\n    active: number;\n    inactive: number;\n    recentlyCreated: number;\n  }> {\n    return apiClient.get<{\n      total: number;\n      active: number;\n      inactive: number;\n      recentlyCreated: number;\n    }>(`${this.endpoint}/stats`);\n  }\n}\n\n// Export singleton instance\nexport const managerService = new ManagerService(); 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/services/manager-service.ts b/frontend/manager/src/lib/services/manager-service.ts
--- a/frontend/manager/src/lib/services/manager-service.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/services/manager-service.ts	(date 1750128336958)
@@ -5,9 +5,6 @@
   BackendPaginatedResponse,
   BulkDeleteResponse,
   transformManagerResponse,
-  CreateManagerDto, 
-  UpdateManagerDto,
-  BulkDeleteManagerDto,
   PaginatedResponse 
 } from "@/types/api";
 import { 
Index: frontend/manager/src/components/forms/login-form.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useRouter } from \"next/navigation\";\nimport { Eye, EyeOff, Loader2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\n\nimport { loginSchema, type LoginFormData } from \"@/lib/validations/auth\";\nimport { useAuthStore } from \"@/stores/auth\";\n\ninterface LoginFormProps {\n  onSuccess?: () => void;\n  redirectTo?: string;\n}\n\nexport function LoginForm({ onSuccess, redirectTo = \"/dashboard\" }: LoginFormProps) {\n  const [showPassword, setShowPassword] = useState(false);\n  const { login, isLoading } = useAuthStore();\n  const router = useRouter();\n\n  const form = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  async function onSubmit(data: LoginFormData) {\n    try {\n      await login(data);\n      \n      toast.success(\"Đăng nhập thành công!\", {\n        description: \"Chào mừng bạn trở lại!\",\n      });\n\n      if (onSuccess) {\n        onSuccess();\n      } else {\n        // Redirect to dashboard or specified route\n        router.push(redirectTo);\n      }\n    } catch (error: any) {\n      console.error(\"Lỗi đăng nhập:\", error);\n      \n      const errorMessage = error?.message || \"Đăng nhập thất bại. Vui lòng thử lại!\";\n      \n      toast.error(\"Lỗi đăng nhập\", {\n        description: errorMessage,\n      });\n    }\n  }\n\n  return (\n    <Card className=\"w-full max-w-md mx-auto\">\n      <CardHeader className=\"space-y-1\">\n        <CardTitle className=\"text-2xl font-bold text-center\">\n          Đăng nhập\n        </CardTitle>\n        <CardDescription className=\"text-center\">\n          Nhập email và mật khẩu để truy cập hệ thống\n        </CardDescription>\n      </CardHeader>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <CardContent className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"username\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Tên đăng nhập</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"ten_dang_nhap\"\n                      disabled={isLoading}\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Mật khẩu</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Input\n                        type={showPassword ? \"text\" : \"password\"}\n                        placeholder=\"Nhập mật khẩu\"\n                        disabled={isLoading}\n                        {...field}\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        disabled={isLoading}\n                      >\n                        {showPassword ? (\n                          <EyeOff className=\"h-4 w-4\" />\n                        ) : (\n                          <Eye className=\"h-4 w-4\" />\n                        )}\n                        <span className=\"sr-only\">\n                          {showPassword ? \"Ẩn mật khẩu\" : \"Hiện mật khẩu\"}\n                        </span>\n                      </Button>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </CardContent>\n\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <Button\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Đang đăng nhập...\n                </>\n              ) : (\n                \"Đăng nhập\"\n              )}\n            </Button>\n\n            <div className=\"text-sm text-center space-y-2\">\n              <p className=\"text-muted-foreground\">\n                Liên hệ quản trị viên để được cấp tài khoản\n              </p>\n              <p>\n                <a \n                  href=\"/forgot-password\" \n                  className=\"text-primary hover:underline text-sm\"\n                >\n                  Quên mật khẩu?\n                </a>\n              </p>\n            </div>\n          </CardFooter>\n        </form>\n      </Form>\n    </Card>\n  );\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/components/forms/login-form.tsx b/frontend/manager/src/components/forms/login-form.tsx
--- a/frontend/manager/src/components/forms/login-form.tsx	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/components/forms/login-form.tsx	(date 1750128336958)
@@ -9,7 +9,6 @@
 
 import { Button } from "@/components/ui/button";
 import { Input } from "@/components/ui/input";
-import { Label } from "@/components/ui/label";
 import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
 import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
 
Index: frontend/manager/src/lib/api-client.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * API Client Configuration\n * Cấu hình client API với environment variables và prefix\n */\n\n// API Configuration từ environment variables\nconst API_CONFIG = {\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"https://localhost:4653/api/v1\",\n  TIMEOUT: 10000, // 10 seconds\n  RETRY_ATTEMPTS: 3,\n} as const;\n\n// API Response wrapper\ninterface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\n// Error types\nexport class ApiError extends Error {\n  constructor(\n    message: string,\n    public status: number,\n    public response?: any\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\nexport class NetworkError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NetworkError';\n  }\n}\n\n/**\n * API Client class với retry logic và error handling\n */\nclass ApiClient {\n  private baseURL: string;\n  private timeout: number;\n  private retryAttempts: number;\n  private isRefreshing: boolean = false;\n  private refreshPromise: Promise<string> | null = null;\n\n  constructor() {\n    this.baseURL = API_CONFIG.BASE_URL;\n    this.timeout = API_CONFIG.TIMEOUT;\n    this.retryAttempts = API_CONFIG.RETRY_ATTEMPTS;\n  }\n\n  /**\n   * Lấy headers mặc định với auth token\n   */\n  private getHeaders(): HeadersInit {\n    const token = typeof window !== 'undefined' \n      ? localStorage.getItem(\"auth_token\") \n      : null;\n    \n    return {\n      \"Content-Type\": \"application/json\",\n      ...(token && { Authorization: `Bearer ${token}` }),\n    };\n  }\n\n  /**\n   * Refresh access token\n   */\n  private async refreshAccessToken(): Promise<string> {\n    if (this.isRefreshing && this.refreshPromise) {\n      return this.refreshPromise;\n    }\n\n    this.isRefreshing = true;\n    this.refreshPromise = this.performTokenRefresh();\n\n    try {\n      const newToken = await this.refreshPromise;\n      return newToken;\n    } finally {\n      this.isRefreshing = false;\n      this.refreshPromise = null;\n    }\n  }\n\n  /**\n   * Thực hiện refresh token\n   */\n  private async performTokenRefresh(): Promise<string> {\n    try {\n      const response = await fetch(`${this.baseURL}/auth/refresh`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include', // Để gửi cookie refresh_token\n      });\n\n      if (!response.ok) {\n        throw new Error('Không thể refresh token');\n      }\n\n      const data = await response.json();\n      const newToken = data.access_token;\n\n      // Cập nhật token mới vào localStorage\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('auth_token', newToken);\n      }\n\n      return newToken;\n    } catch (error) {\n      // Nếu refresh thất bại, clear auth và redirect về login\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('auth_token');\n        // Dispatch custom event để auth store có thể lắng nghe\n        window.dispatchEvent(new CustomEvent('auth:token-expired'));\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Xử lý response từ API với auto refresh token\n   */\n  private async handleResponse<T>(response: Response, originalRequest?: () => Promise<Response>): Promise<T> {\n    // Nếu gặp lỗi 401 và có originalRequest, thử refresh token\n    if (response.status === 401 && originalRequest && !this.isRefreshing) {\n      try {\n        await this.refreshAccessToken();\n        \n        // Retry request với token mới\n        const retryResponse = await originalRequest();\n        return this.handleResponse<T>(retryResponse);\n      } catch (refreshError) {\n        // Nếu refresh thất bại, throw lỗi 401 gốc\n        console.error('Token refresh failed:', refreshError);\n      }\n    }\n\n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}`;\n      \n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.message || errorData.error || errorMessage;\n      } catch {\n        errorMessage = await response.text() || errorMessage;\n      }\n      \n      throw new ApiError(errorMessage, response.status, response);\n    }\n\n    try {\n      return await response.json();\n    } catch (error) {\n      throw new ApiError(\"Phản hồi không hợp lệ từ server\", response.status);\n    }\n  }\n\n  /**\n   * Retry logic cho network requests\n   */\n  private async fetchWithRetry(\n    url: string, \n    options: RequestInit, \n    attempt: number = 1\n  ): Promise<Response> {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      if (attempt < this.retryAttempts && this.shouldRetry(error)) {\n        console.warn(`API request failed, retrying... (${attempt}/${this.retryAttempts})`);\n        await this.delay(1000 * attempt); // Exponential backoff\n        return this.fetchWithRetry(url, options, attempt + 1);\n      }\n      \n      if (error instanceof Error && error.name === 'AbortError') {\n        throw new NetworkError(\"Yêu cầu bị timeout\");\n      }\n      \n      throw new NetworkError(\"Lỗi kết nối mạng\");\n    }\n  }\n\n  /**\n   * Kiểm tra có nên retry không\n   */\n  private shouldRetry(error: any): boolean {\n    return (\n      error instanceof TypeError || // Network error\n      (error instanceof ApiError && error.status >= 500) // Server error\n    );\n  }\n\n  /**\n   * Delay helper cho retry\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * GET request\n   */\n  async get<T>(endpoint: string, params?: Record<string, any>): Promise<T> {\n    const url = new URL(this.baseURL + endpoint);\n    \n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          url.searchParams.append(key, String(value));\n        }\n      });\n    }\n\n    const makeRequest = () => this.fetchWithRetry(url.toString(), {\n      method: \"GET\",\n      headers: this.getHeaders(),\n    });\n\n    const response = await makeRequest();\n    return this.handleResponse<T>(response, makeRequest);\n  }\n\n  /**\n   * POST request\n   */\n  async post<T>(endpoint: string, data?: any): Promise<T> {\n    const url = new URL(this.baseURL + endpoint);\n\n    const makeRequest = () => this.fetchWithRetry(url.toString(), {\n      method: \"POST\",\n      headers: this.getHeaders(),\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    const response = await makeRequest();\n    return this.handleResponse<T>(response, makeRequest);\n  }\n\n  /**\n   * PATCH request\n   */\n  async patch<T>(endpoint: string, data?: any): Promise<T> {\n    const url = new URL(this.baseURL + endpoint);\n\n    const makeRequest = () => this.fetchWithRetry(url.toString(), {\n      method: \"PATCH\",\n      headers: this.getHeaders(),\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    const response = await makeRequest();\n    return this.handleResponse<T>(response, makeRequest);\n  }\n\n  /**\n   * PUT request\n   */\n  async put<T>(endpoint: string, data?: any): Promise<T> {\n    const url = new URL(this.baseURL + endpoint);\n\n    const makeRequest = () => this.fetchWithRetry(url.toString(), {\n      method: \"PUT\",\n      headers: this.getHeaders(),\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    const response = await makeRequest();\n    return this.handleResponse<T>(response, makeRequest);\n  }\n\n  /**\n   * DELETE request\n   */\n  async delete<T>(endpoint: string, data?: any): Promise<T> {\n    const url = new URL(this.baseURL + endpoint);\n\n    const makeRequest = () => this.fetchWithRetry(url.toString(), {\n      method: \"DELETE\",\n      headers: this.getHeaders(),\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    const response = await makeRequest();\n    return this.handleResponse<T>(response, makeRequest);\n  }\n\n  /**\n   * Health check\n   */\n  async healthCheck(): Promise<{ status: string; timestamp: string }> {\n    try {\n      return await this.get('/health');\n    } catch (error) {\n      console.error('API Health check failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Lấy thông tin cấu hình API\n   */\n  getConfig() {\n    return {\n      baseURL: this.baseURL,\n      timeout: this.timeout,\n      retryAttempts: this.retryAttempts,\n    };\n  }\n}\n\n// Export singleton instance\nexport const apiClient = new ApiClient();\n\n// Export types\nexport type { ApiResponse };\nexport { API_CONFIG }; 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/manager/src/lib/api-client.ts b/frontend/manager/src/lib/api-client.ts
--- a/frontend/manager/src/lib/api-client.ts	(revision 72453ce53dad2761adc3c98e00e05e567152fd5b)
+++ b/frontend/manager/src/lib/api-client.ts	(date 1750158379734)
@@ -56,15 +56,21 @@
   /**
    * Lấy headers mặc định với auth token
    */
-  private getHeaders(): HeadersInit {
+  private getHeaders(isFormData: boolean = false): HeadersInit {
     const token = typeof window !== 'undefined' 
       ? localStorage.getItem("auth_token") 
       : null;
     
-    return {
-      "Content-Type": "application/json",
+    const headers: HeadersInit = {
       ...(token && { Authorization: `Bearer ${token}` }),
     };
+
+    // Không set Content-Type cho FormData, để browser tự set với boundary
+    if (!isFormData) {
+      headers["Content-Type"] = "application/json";
+    }
+
+    return headers;
   }
 
   /**
@@ -241,11 +247,12 @@
    */
   async post<T>(endpoint: string, data?: any): Promise<T> {
     const url = new URL(this.baseURL + endpoint);
+    const isFormData = data instanceof FormData;
 
     const makeRequest = () => this.fetchWithRetry(url.toString(), {
       method: "POST",
-      headers: this.getHeaders(),
-      body: data ? JSON.stringify(data) : undefined,
+      headers: this.getHeaders(isFormData),
+      body: isFormData ? data : (data ? JSON.stringify(data) : undefined),
     });
 
     const response = await makeRequest();
